{
  "version": 3,
  "sources": ["../../fast-deep-equal/index.js", "../../@keystatic/core/dist/keystatic-core-ui.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-fileX2Icon.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-alertCircleIcon.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-listXIcon.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-searchIcon.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-searchXIcon.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-diffIcon.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-plusSquareIcon.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-dotSquareIcon.js", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/ar-AE.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/bg-BG.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/cs-CZ.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/da-DK.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/de-DE.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/el-GR.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/en-US.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/es-ES.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/et-EE.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/fi-FI.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/fr-FR.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/he-IL.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/hr-HR.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/hu-HU.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/it-IT.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/ja-JP.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/ko-KR.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/lt-LT.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/lv-LV.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/nb-NO.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/nl-NL.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/pl-PL.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/pt-BR.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/pt-PT.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/ro-RO.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/ru-RU.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/sk-SK.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/sl-SI.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/sr-SP.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/sv-SE.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/tr-TR.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/uk-UA.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/zh-CN.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/intl/zh-TW.json", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/src/index.ts", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/src/useSearchField.ts", "../../@react-aria/searchfield/dist/packages/@react-aria/searchfield/src/*.js", "../../@react-stately/searchfield/dist/packages/@react-stately/searchfield/src/index.ts", "../../@react-stately/searchfield/dist/packages/@react-stately/searchfield/src/useSearchFieldState.ts", "../../@keystar/ui/dist/keystar-ui-search-field.js", "../../@react-stately/grid/dist/packages/@react-stately/grid/src/index.ts", "../../@react-stately/grid/dist/packages/@react-stately/grid/src/useGridState.ts", "../../@react-stately/grid/dist/packages/@react-stately/grid/src/GridCollection.ts", "../../@react-stately/flags/dist/packages/@react-stately/flags/src/index.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/index.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/useTableColumnResizeState.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/TableColumnLayout.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/TableUtils.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/useTableState.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/TableCollection.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/TableHeader.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/TableBody.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/Column.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/Row.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/Cell.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/useTreeGridState.ts", "../../@keystar/ui/dist/keystar-ui-table.js", "../../@react-aria/table/dist/packages/@react-aria/table/intl/ar-AE.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/bg-BG.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/cs-CZ.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/da-DK.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/de-DE.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/el-GR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/en-US.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/es-ES.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/et-EE.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/fi-FI.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/fr-FR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/he-IL.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/hr-HR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/hu-HU.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/it-IT.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/ja-JP.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/ko-KR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/lt-LT.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/lv-LV.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/nb-NO.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/nl-NL.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/pl-PL.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/pt-BR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/pt-PT.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/ro-RO.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/ru-RU.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/sk-SK.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/sl-SI.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/sr-SP.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/sv-SE.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/tr-TR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/uk-UA.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/zh-CN.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/zh-TW.json", "../../@react-aria/table/dist/packages/@react-aria/table/src/index.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTable.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/utils.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/*.js", "../../@react-aria/table/dist/packages/@react-aria/table/src/TableKeyboardDelegate.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableColumnHeader.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableRow.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableHeaderRow.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableCell.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableSelectionCheckbox.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableColumnResize.ts", "../../@keystar/ui/dist/keystar-ui-icon-icons-arrowUpIcon.js", "../../js-yaml/dist/js-yaml.mjs", "../../@keystatic/core/dist/required-files-0baba55b.js", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/ar-AE.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/bg-BG.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/cs-CZ.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/da-DK.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/de-DE.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/el-GR.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/en-US.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/es-ES.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/et-EE.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/fi-FI.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/fr-FR.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/he-IL.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/hr-HR.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/hu-HU.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/it-IT.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/ja-JP.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/ko-KR.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/lt-LT.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/lv-LV.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/nb-NO.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/nl-NL.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/pl-PL.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/pt-BR.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/pt-PT.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/ro-RO.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/ru-RU.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/sk-SK.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/sl-SI.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/sr-SP.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/sv-SE.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/tr-TR.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/uk-UA.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/zh-CN.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/intl/zh-TW.json", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/src/index.ts", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/src/useBreadcrumbItem.ts", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/src/useBreadcrumbs.ts", "../../@react-aria/breadcrumbs/dist/packages/@react-aria/breadcrumbs/src/*.js", "../../@keystar/ui/dist/keystar-ui-breadcrumbs.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-folderClosedIcon.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-folderOpenIcon.js", "../../@keystar/ui/dist/keystar-ui-notice.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-copyPlusIcon.js", "../../@keystar/ui/dist/keystar-ui-icon-icons-historyIcon.js", "../../@urql/exchange-graphcache/src/helpers/help.ts", "../../@urql/exchange-graphcache/src/ast/node.ts", "../../@urql/exchange-graphcache/src/ast/variables.ts", "../../@urql/exchange-graphcache/src/ast/traversal.ts", "../../@urql/exchange-graphcache/src/ast/schemaPredicates.ts", "../../@urql/exchange-graphcache/src/store/keys.ts", "../../@urql/exchange-graphcache/src/store/data.ts", "../../@urql/exchange-graphcache/src/operations/shared.ts", "../../@urql/exchange-graphcache/src/operations/query.ts", "../../@urql/exchange-graphcache/src/operations/write.ts", "../../@urql/exchange-graphcache/src/store/store.ts", "../../@urql/exchange-graphcache/src/ast/schema.ts", "../../@urql/exchange-graphcache/src/operations/invalidate.ts", "../../@urql/exchange-graphcache/src/helpers/operation.ts", "../../@urql/exchange-graphcache/src/cacheExchange.ts", "../../@urql/exchange-graphcache/src/offlineExchange.ts", "../../@urql/exchange-auth/src/authExchange.ts", "../../@urql/exchange-persisted/src/sha256.ts", "../../@urql/exchange-persisted/src/persistedExchange.ts", "../../@urql/exchange-graphcache/src/extras/relayPagination.ts", "../../@urql/exchange-graphcache/src/extras/simplePagination.ts"],
  "sourcesContent": ["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "import React, { useMemo, useCallback, useState, useRef, useEffect, createContext, useContext, useSyncExternalStore } from 'react';\nimport { ActionButton, Button, ButtonGroup } from '@keystar/ui/button';\nimport { Icon } from '@keystar/ui/icon';\nimport { fileX2Icon } from '@keystar/ui/icon/icons/fileX2Icon';\nimport { githubIcon } from '@keystar/ui/icon/icons/githubIcon';\nimport { Flex, Box, Divider, VStack } from '@keystar/ui/layout';\nimport { Heading, Text } from '@keystar/ui/typography';\nimport { useLocalizedStringFormatter } from '@react-aria/i18n';\nimport { isHotkey } from 'is-hotkey';\nimport { alertCircleIcon } from '@keystar/ui/icon/icons/alertCircleIcon';\nimport { listXIcon } from '@keystar/ui/icon/icons/listXIcon';\nimport { searchIcon } from '@keystar/ui/icon/icons/searchIcon';\nimport { searchXIcon } from '@keystar/ui/icon/icons/searchXIcon';\nimport { diffIcon } from '@keystar/ui/icon/icons/diffIcon';\nimport { plusSquareIcon } from '@keystar/ui/icon/icons/plusSquareIcon';\nimport { dotSquareIcon } from '@keystar/ui/icon/icons/dotSquareIcon';\nimport { TextLink, useLink } from '@keystar/ui/link';\nimport { ProgressCircle } from '@keystar/ui/progress';\nimport { SearchField } from '@keystar/ui/search-field';\nimport { useMediaQuery, breakpointQueries, css, tokenSchema, injectGlobal, containerQueries, classNames, transition } from '@keystar/ui/style';\nimport { TableView, TableHeader, Column, TableBody, Cell, Row } from '@keystar/ui/table';\nimport { u as useRouter, g as getEntryDataFilepath, o as object, p as parseProps, t as toFormattedFormDataError, a as useTree, b as useBaseCommit, c as useIsRepoPrivate, d as useBranchInfo, e as getDirectoriesForTreeKey, f as getTreeKey, h as useData, L as LOADING, i as getTreeNodeAtPath, j as getBlobFromPersistedCache, s as setBlobToPersistedCache, k as blobSha, l as serializeRepoConfig, m as getPathPrefix, n as getAuth, K as KEYSTATIC_CLOUD_API_URL, q as KEYSTATIC_CLOUD_HEADERS, P as PageRoot, r as l10nMessages, v as PageHeader, w as getCollectionPath, x as isLocalConfig, y as getEntriesInCollectionWithTreeKey, z as getCollectionFormat, A as getCollectionItemPath, B as getSlugGlobForCollection, C as parseRepoConfig, G as GitHubAppShellQuery, D as useTheme, T as ThemeProvider, E as getSyncAuth, F as redirectToCloudAuth, H as CloudAppShellQuery, I as serializeProps, J as BranchInfoContext, M as useSetTreeSha, R as RepoWithWriteAccessContext, N as useCurrentUnscopedTree, O as updateTreeWithChanges, Q as hydrateTreeCacheWithEntries, S as scopeEntriesWithPathPrefix, U as fetchGitHubTreeData, V as treeSha, W as getSlugFromState, X as useConfig, Y as useYjs, Z as yjsToVal, _ as parsedValToYjs, $ as getKeysForArrayValue, a0 as getNewArrayElementKey, a1 as setKeysForArrayValue, a2 as updateValue, a3 as getInitialPropsValueFromInitializer, a4 as getDraft, a5 as useYjsIfAvailable, a6 as getYjsValFromParsedValue, a7 as PageBody, a8 as containerWidthForEntryLayout, a9 as showDraftRestoredToast, aa as createGetPreviewProps, ab as setDraft, ac as delDraft, ad as useEventCallback, ae as useRepositoryId, af as useCreateBranchMutation, ag as getBranchPrefix, ah as prettyErrorForCreateBranchMutation, ai as clientSideValidateProp, aj as getRepoUrl, ak as getDataFileExtension, al as FormForEntry, am as isGitHubConfig, an as getInitialPropsValue, ao as CreateBranchDialog, ap as useNavItems, aq as pluralize, ar as useViewer, as as useCloudInfo, at as useSidebar, au as useContentPanelState, av as ContentPanelProvider, aw as SidebarDialog, ax as SidebarPanel, ay as AppShellErrorContext, az as ConfigContext, aA as AppStateContext, aB as SidebarProvider, aC as GitHubAppShellProvider, aD as LocalAppShellProvider, aE as getSingletonFormat, aF as getSingletonPath, aG as isCloudConfig, aH as assertValidRepoConfig, aI as RouterProvider, aJ as GitHubAppShellDataContext, aK as CloudInfoProvider, aL as GitHubAppShellDataProvider } from './index-172a6993.js';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport LRU from 'lru-cache';\nimport '@keystar/ui/checkbox';\nimport { TextField } from '@keystar/ui/text-field';\nimport '@keystar/ui/field';\nimport '@keystar/ui/number-field';\nimport 'decimal.js';\nimport '@keystar/ui/combobox';\nimport 'minimatch';\nimport '@react-stately/collections';\nimport '@keystar/ui/picker';\nimport '@sindresorhus/slugify';\nimport '@braintree/sanitize-url';\nimport { Dialog, DialogContainer, AlertDialog, DialogTrigger } from '@keystar/ui/dialog';\nimport { Content } from '@keystar/ui/slots';\nimport { assert } from 'emery';\nimport '@keystar/ui/drag-and-drop';\nimport { trash2Icon } from '@keystar/ui/icon/icons/trash2Icon';\nimport '@keystar/ui/list-view';\nimport { TooltipTrigger, Tooltip } from '@keystar/ui/tooltip';\nimport 'slate';\nimport 'slate-react';\nimport { SplitView, SplitPanePrimary, SplitPaneSecondary } from '@keystar/ui/split-view';\nimport '@keystar/ui/icon/icons/panelLeftOpenIcon';\nimport '@keystar/ui/icon/icons/panelLeftCloseIcon';\nimport '@keystar/ui/icon/icons/panelRightOpenIcon';\nimport '@keystar/ui/icon/icons/panelRightCloseIcon';\nimport '@keystar/ui/menu';\nimport { l as loadDataFile } from './required-files-0baba55b.js';\nimport { Breadcrumbs, Item } from '@keystar/ui/breadcrumbs';\nimport { Notice } from '@keystar/ui/notice';\nimport { Toaster, toastQueue } from '@keystar/ui/toast';\nimport { ActionGroup, Item as Item$1 } from '@keystar/ui/action-group';\nimport { Badge } from '@keystar/ui/badge';\nimport { copyPlusIcon } from '@keystar/ui/icon/icons/copyPlusIcon';\nimport { externalLinkIcon } from '@keystar/ui/icon/icons/externalLinkIcon';\nimport { historyIcon } from '@keystar/ui/icon/icons/historyIcon';\nimport { useClient, Provider as Provider$1, createClient, fetchExchange, useMutation } from 'urql';\nimport { gql } from '@ts-gql/tag/no-transform';\nimport { dump } from 'js-yaml';\nimport { fromUint8Array } from 'js-base64';\nimport { KeystarProvider, ClientSideOnlyDocumentElement } from '@keystar/ui/core';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport { authExchange } from '@urql/exchange-auth';\nimport { persistedExchange } from '@urql/exchange-persisted';\nimport { relayPagination } from '@urql/exchange-graphcache/extras';\nimport isEqual from 'fast-deep-equal';\nimport { u as useSlugsInCollection } from './useSlugsInCollection-77ed63be.js';\nimport { z } from 'zod';\nimport * as Y from 'yjs';\nimport { Avatar } from '@keystar/ui/avatar';\nimport { gitBranchIcon } from '@keystar/ui/icon/icons/gitBranchIcon';\nimport { gitBranchPlusIcon } from '@keystar/ui/icon/icons/gitBranchPlusIcon';\nimport { gitPullRequestIcon } from '@keystar/ui/icon/icons/gitPullRequestIcon';\nimport { plusIcon } from '@keystar/ui/icon/icons/plusIcon';\nimport '@markdoc/markdoc';\nimport 'emery/assertions';\nimport './hex-834c0b54.js';\nimport '@react-aria/utils';\nimport '@keystar/ui/icon/icons/editIcon';\nimport '@keystar/ui/icon/icons/linkIcon';\nimport '@keystar/ui/icon/icons/unlinkIcon';\nimport '@react-aria/overlays';\nimport '@react-stately/overlays';\nimport '@keystar/ui/overlays';\nimport '@keystar/ui/icon/icons/boldIcon';\nimport '@keystar/ui/icon/icons/chevronDownIcon';\nimport '@keystar/ui/icon/icons/codeIcon';\nimport '@keystar/ui/icon/icons/italicIcon';\nimport '@keystar/ui/icon/icons/maximizeIcon';\nimport '@keystar/ui/icon/icons/minimizeIcon';\nimport '@keystar/ui/icon/icons/removeFormattingIcon';\nimport '@keystar/ui/icon/icons/strikethroughIcon';\nimport '@keystar/ui/icon/icons/subscriptIcon';\nimport '@keystar/ui/icon/icons/superscriptIcon';\nimport '@keystar/ui/icon/icons/typeIcon';\nimport '@keystar/ui/icon/icons/underlineIcon';\nimport '@keystar/ui/icon/icons/alignLeftIcon';\nimport '@keystar/ui/icon/icons/alignRightIcon';\nimport '@keystar/ui/icon/icons/alignCenterIcon';\nimport '@keystar/ui/icon/icons/quoteIcon';\nimport 'match-sorter';\nimport '@keystar/ui/icon/icons/trashIcon';\nimport '@emotion/weak-memoize';\nimport '@keystar/ui/icon/icons/minusIcon';\nimport '@keystar/ui/icon/icons/columnsIcon';\nimport '@keystar/ui/icon/icons/listIcon';\nimport '@keystar/ui/icon/icons/listOrderedIcon';\nimport '@keystar/ui/icon/icons/fileUpIcon';\nimport '@keystar/ui/icon/icons/imageIcon';\nimport 'cookie';\nimport 'idb-keyval';\nimport 'y-protocols/awareness';\nimport '@toeverything/y-indexeddb';\nimport 'lib0/broadcastchannel';\nimport 'lib0/time';\nimport 'lib0/encoding';\nimport 'lib0/decoding';\nimport 'y-protocols/sync';\nimport 'y-protocols/auth';\nimport 'lib0/mutex';\nimport 'lib0/math';\nimport 'partysocket/ws';\nimport '@keystar/ui/icon/icons/link2Icon';\nimport '@keystar/ui/icon/icons/link2OffIcon';\nimport '@keystar/ui/icon/icons/pencilIcon';\nimport '@keystar/ui/icon/icons/undo2Icon';\nimport '@keystar/ui/utils';\nimport '@keystar/ui/icon/icons/sheetIcon';\nimport '@keystar/ui/icon/icons/tableIcon';\nimport 'scroll-into-view-if-needed';\nimport '@react-stately/list';\nimport '@keystar/ui/listbox';\nimport 'slate-history';\nimport 'mdast-util-from-markdown';\nimport 'mdast-util-gfm-autolink-literal';\nimport 'micromark-extension-gfm-autolink-literal';\nimport 'mdast-util-gfm-strikethrough';\nimport 'micromark-extension-gfm-strikethrough';\nimport '@keystar/ui/nav-list';\nimport '@keystar/ui/status-light';\nimport '@keystar/ui/icon/icons/logOutIcon';\nimport '@keystar/ui/icon/icons/gitForkIcon';\nimport '@keystar/ui/icon/icons/monitorIcon';\nimport '@keystar/ui/icon/icons/moonIcon';\nimport '@keystar/ui/icon/icons/sunIcon';\nimport '@keystar/ui/icon/icons/userIcon';\nimport '@keystar/ui/radio';\n\n// the collator enables language-sensitive string comparison\nconst collator = new Intl.Collator(undefined, {\n  sensitivity: 'base'\n});\n\n/**\n * Creates a comparison function that should be provided to the `sort()` method\n * of your data array.\n */\nfunction sortBy(direction, valueA, valueB) {\n  const modifier = direction === 'ascending' ? 1 : -1;\n\n  // always push `null` and `undefined` to the bottom\n  if (valueA == null) return 1;\n  if (valueB == null) return -1;\n\n  // the collator is only appropriate for strings, it fails in subtle\n  // ways for floats, dates, etc.\n  if (typeof valueA === 'string' && typeof valueB === 'string') {\n    return collator.compare(valueA, valueB) * modifier;\n  }\n  return compare(valueA, valueB) * modifier;\n}\n\n/** Default comparison for non-string values */\nfunction compare(a, b) {\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n}\n\nfunction EmptyState(props) {\n  return /*#__PURE__*/jsx(Flex, {\n    alignItems: \"center\",\n    direction: \"column\",\n    gap: \"large\",\n    justifyContent: \"center\",\n    minHeight: \"scale.3000\",\n    paddingX: {\n      mobile: 'medium',\n      tablet: 'xlarge',\n      desktop: 'xxlarge'\n    },\n    children: 'children' in props ? props.children : /*#__PURE__*/jsxs(Fragment, {\n      children: [props.icon && /*#__PURE__*/jsx(Icon, {\n        src: props.icon,\n        size: \"large\",\n        color: \"neutralEmphasis\"\n      }), props.title && /*#__PURE__*/jsx(Heading, {\n        align: \"center\",\n        size: \"medium\",\n        children: props.title\n      }), props.message && /*#__PURE__*/jsx(Text, {\n        align: \"center\",\n        children: props.message\n      }), props.actions]\n    })\n  });\n}\n\nclass NotFoundError extends Error {\n  constructor() {\n    super('Not found');\n    this.name = 'NotFoundError';\n  }\n}\nfunction isNotFoundError(err) {\n  return typeof err === 'object' && err !== null && err instanceof NotFoundError;\n}\nfunction notFound() {\n  throw new NotFoundError();\n}\nclass NotFoundErrorBoundaryInner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notFound: false,\n      lastHref: props.href\n    };\n  }\n  static getDerivedStateFromError(err) {\n    if (isNotFoundError(err)) {\n      return {\n        notFound: true\n      };\n    }\n    throw err;\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (props.href !== state.lastHref && state.notFound) {\n      return {\n        notFound: false,\n        lastHref: props.href\n      };\n    }\n    return {\n      notFound: state.notFound,\n      lastHref: props.href\n    };\n  }\n  render() {\n    if (this.state.notFound) return this.props.fallback;\n    return this.props.children;\n  }\n}\nfunction NotFoundBoundary(props) {\n  const router = useRouter();\n  return /*#__PURE__*/jsx(NotFoundErrorBoundaryInner, {\n    ...props,\n    href: router.href\n  });\n}\n\nclass TrackedMap extends Map {\n  #onGet;\n  constructor(onGet, entries) {\n    super(entries);\n    this.#onGet = onGet;\n  }\n  get(key) {\n    this.#onGet(key);\n    return super.get(key);\n  }\n}\nfunction parseEntry(args, files) {\n  const dataFilepath = getEntryDataFilepath(args.dirpath, args.format);\n  const data = files.get(dataFilepath);\n  if (!data) {\n    throw new Error(`Could not find data file at ${dataFilepath}`);\n  }\n  const {\n    loaded,\n    extraFakeFile\n  } = loadDataFile(data, args.format);\n  const filesWithFakeFile = new Map(files);\n  if (extraFakeFile) {\n    filesWithFakeFile.set(`${args.dirpath}/${extraFakeFile.path}`, extraFakeFile.contents);\n  }\n  const usedFiles = new Set([dataFilepath]);\n  const rootSchema = object(args.schema);\n  let initialState;\n  const getFile = filepath => {\n    usedFiles.add(filepath);\n    return filesWithFakeFile.get(filepath);\n  };\n  try {\n    initialState = parseProps(rootSchema, loaded, [], [], (schema, value, path, pathWithArrayFieldSlugs) => {\n      var _args$slug;\n      if (path.length === 1 && path[0] === ((_args$slug = args.slug) === null || _args$slug === void 0 ? void 0 : _args$slug.field)) {\n        if (schema.formKind !== 'slug') {\n          throw new Error(`slugField is not a slug field`);\n        }\n        return schema.parse(value, {\n          slug: args.slug.slug\n        });\n      }\n      if (schema.formKind === 'asset') {\n        var _args$slug2, _args$slug3, _args$slug4;\n        const suggestedFilenamePrefix = pathWithArrayFieldSlugs.join('/');\n        const filepath = schema.filename(value, {\n          suggestedFilenamePrefix,\n          slug: (_args$slug2 = args.slug) === null || _args$slug2 === void 0 ? void 0 : _args$slug2.slug\n        });\n        const asset = filepath ? getFile(`${schema.directory ? `${schema.directory}${((_args$slug3 = args.slug) === null || _args$slug3 === void 0 ? void 0 : _args$slug3.slug) === undefined ? '' : `/${args.slug.slug}`}` : args.dirpath}/${filepath}`) : undefined;\n        return schema.parse(value, {\n          asset,\n          slug: (_args$slug4 = args.slug) === null || _args$slug4 === void 0 ? void 0 : _args$slug4.slug\n        });\n      }\n      if (schema.formKind === 'content') {\n        var _args$slug7;\n        const rootPath = `${args.dirpath}/${pathWithArrayFieldSlugs.join('/')}`;\n        const mainFilepath = rootPath + schema.contentExtension;\n        const mainContents = getFile(mainFilepath);\n        const otherFiles = new TrackedMap(key => {\n          usedFiles.add(`${rootPath}/${key}`);\n        });\n        const otherDirectories = new Map();\n        for (const [filename] of filesWithFakeFile) {\n          if (filename.startsWith(rootPath + '/')) {\n            const relativePath = filename.slice(rootPath.length + 1);\n            otherFiles.set(relativePath, filesWithFakeFile.get(filename));\n          }\n        }\n        for (const dir of (_schema$directories = schema.directories) !== null && _schema$directories !== void 0 ? _schema$directories : []) {\n          var _schema$directories, _args$slug5, _args$slug6;\n          const dirFiles = new TrackedMap(relativePath => usedFiles.add(start + relativePath));\n          const start = `${dir}${((_args$slug5 = args.slug) === null || _args$slug5 === void 0 ? void 0 : _args$slug5.slug) === undefined ? '' : `/${(_args$slug6 = args.slug) === null || _args$slug6 === void 0 ? void 0 : _args$slug6.slug}`}/`;\n          for (const [filename, val] of filesWithFakeFile) {\n            if (filename.startsWith(start)) {\n              const relativePath = filename.slice(start.length);\n              dirFiles.set(relativePath, val);\n            }\n          }\n          if (dirFiles.size) {\n            otherDirectories.set(dir, dirFiles);\n          }\n        }\n        return schema.parse(value, {\n          content: mainContents,\n          other: otherFiles,\n          external: otherDirectories,\n          slug: (_args$slug7 = args.slug) === null || _args$slug7 === void 0 ? void 0 : _args$slug7.slug\n        });\n      }\n      return schema.parse(value, undefined);\n    }, false);\n  } catch (err) {\n    throw toFormattedFormDataError(err);\n  }\n  if (extraFakeFile) {\n    usedFiles.delete(`${args.dirpath}/${extraFakeFile.path}`);\n  }\n  return {\n    initialState,\n    initialFiles: [...usedFiles]\n  };\n}\nfunction getAllFilesInTree(tree) {\n  return [...tree.values()].flatMap(val => val.children ? getAllFilesInTree(val.children) : [val.entry]);\n}\nfunction useItemData(args) {\n  var _args$slug9;\n  const {\n    current: currentBranch\n  } = useTree();\n  const baseCommit = useBaseCommit();\n  const isRepoPrivate = useIsRepoPrivate();\n  const branchInfo = useBranchInfo();\n  const rootTree = currentBranch.kind === 'loaded' ? currentBranch.data.tree : undefined;\n  const locationsForTreeKey = useMemo(() => {\n    var _args$slug8;\n    return getDirectoriesForTreeKey(object(args.schema), args.dirpath, (_args$slug8 = args.slug) === null || _args$slug8 === void 0 ? void 0 : _args$slug8.slug, args.format);\n  }, [args.dirpath, args.format, args.schema, (_args$slug9 = args.slug) === null || _args$slug9 === void 0 ? void 0 : _args$slug9.slug]);\n  const localTreeKey = useMemo(() => getTreeKey(locationsForTreeKey, rootTree !== null && rootTree !== void 0 ? rootTree : new Map()), [locationsForTreeKey, rootTree]);\n  const tree = useMemo(() => {\n    return rootTree !== null && rootTree !== void 0 ? rootTree : new Map();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [localTreeKey, locationsForTreeKey]);\n  const hasLoaded = currentBranch.kind === 'loaded';\n  return useData(useCallback(() => {\n    var _getTreeNodeAtPath;\n    if (!hasLoaded) return LOADING;\n    const dataFilepathSha = (_getTreeNodeAtPath = getTreeNodeAtPath(tree, getEntryDataFilepath(args.dirpath, args.format))) === null || _getTreeNodeAtPath === void 0 ? void 0 : _getTreeNodeAtPath.entry.sha;\n    if (dataFilepathSha === undefined) {\n      return 'not-found';\n    }\n    const _args = {\n      config: args.config,\n      dirpath: args.dirpath,\n      format: args.format,\n      schema: args.schema,\n      slug: args.slug\n    };\n    const allBlobs = locationsForTreeKey.flatMap(dir => {\n      const node = getTreeNodeAtPath(tree, dir);\n      if (!node) return [];\n      return node.children ? getAllFilesInTree(node.children) : [node.entry];\n    }).map(entry => {\n      const blob = fetchBlob(args.config, entry.sha, entry.path, baseCommit, isRepoPrivate, {\n        owner: branchInfo.mainOwner,\n        name: branchInfo.mainRepo\n      });\n      if (blob instanceof Uint8Array) {\n        return [entry.path, blob];\n      }\n      return blob.then(blob => [entry.path, blob]);\n    });\n    if (allBlobs.every(x => Array.isArray(x))) {\n      const {\n        initialFiles,\n        initialState\n      } = parseEntry(_args, new Map(allBlobs));\n      return {\n        initialState,\n        initialFiles,\n        localTreeKey\n      };\n    }\n    return Promise.all(allBlobs).then(async data => {\n      const {\n        initialState,\n        initialFiles\n      } = parseEntry(_args, new Map(data));\n      return {\n        initialState,\n        initialFiles,\n        localTreeKey\n      };\n    });\n  }, [hasLoaded, tree, args.dirpath, args.format, args.config, args.schema, args.slug, locationsForTreeKey, baseCommit, isRepoPrivate, branchInfo.mainOwner, branchInfo.mainRepo, localTreeKey]));\n}\nconst blobCache = new LRU({\n  max: 200\n});\nasync function hydrateBlobCache(contents) {\n  const sha = await blobSha(contents);\n  blobCache.set(sha, contents);\n  await setBlobToPersistedCache(sha, contents);\n  return sha;\n}\nasync function fetchGitHubBlob(config, oid, filepath, commitSha, isRepoPrivate, repo) {\n  if (!isRepoPrivate) {\n    var _getPathPrefix;\n    return fetch(`https://raw.githubusercontent.com/${serializeRepoConfig(repo)}/${commitSha}/${(_getPathPrefix = getPathPrefix(config.storage)) !== null && _getPathPrefix !== void 0 ? _getPathPrefix : ''}${filepath}`);\n  }\n  const auth = await getAuth(config);\n  return fetch(config.storage.kind === 'github' ? `https://api.github.com/repos/${serializeRepoConfig(config.storage.repo)}/git/blobs/${oid}` : `${KEYSTATIC_CLOUD_API_URL}/v1/github/blob/${oid}`, {\n    headers: {\n      Authorization: `Bearer ${auth.accessToken}`,\n      Accept: 'application/vnd.github.raw',\n      ...(config.storage.kind === 'cloud' ? KEYSTATIC_CLOUD_HEADERS : {})\n    }\n  });\n}\nfunction fetchBlob(config, oid, filepath, commitSha, isRepoPrivate, repo) {\n  if (blobCache.has(oid)) return blobCache.get(oid);\n  const promise = (async () => {\n    const isLocal = config.storage.kind === 'local';\n    if (!isLocal) {\n      const stored = await getBlobFromPersistedCache(oid);\n      if (stored) {\n        blobCache.set(oid, stored);\n        return stored;\n      }\n    }\n    return (isLocal ? fetch(`/api/keystatic/blob/${oid}/${filepath}`, {\n      headers: {\n        'no-cors': '1'\n      }\n    }) : fetchGitHubBlob(config, oid, filepath, commitSha, isRepoPrivate, repo)).then(async x => {\n      if (!x.ok) {\n        throw new Error(`Could not fetch blob ${oid} (${filepath}): ${x.status}\\n${await x.text()}`);\n      }\n      return x.arrayBuffer();\n    }).then(x => {\n      const array = new Uint8Array(x);\n      blobCache.set(oid, array);\n      if (config.storage.kind !== 'local') {\n        setBlobToPersistedCache(oid, array);\n      }\n      return array;\n    }).catch(err => {\n      blobCache.delete(oid);\n      throw err;\n    });\n  })();\n  blobCache.set(oid, promise);\n  return promise;\n}\n\nfunction CollectionPage(props) {\n  var _config$collections;\n  const {\n    collection,\n    config\n  } = props;\n  const containerWidth = 'none'; // TODO: use a \"large\" when we have more columns\n  const collectionConfig = (_config$collections = config.collections) === null || _config$collections === void 0 ? void 0 : _config$collections[collection];\n  if (!collectionConfig) notFound();\n  const [searchTerm, setSearchTerm] = useState('');\n  let debouncedSearchTerm = useDebouncedValue(searchTerm, 300);\n  return /*#__PURE__*/jsxs(PageRoot, {\n    containerWidth: containerWidth,\n    children: [/*#__PURE__*/jsx(CollectionPageHeader, {\n      collectionLabel: collectionConfig.label,\n      createHref: `${props.basePath}/collection/${encodeURIComponent(props.collection)}/create`,\n      searchTerm: searchTerm,\n      onSearchTermChange: setSearchTerm\n    }), /*#__PURE__*/jsx(CollectionPageContent, {\n      searchTerm: debouncedSearchTerm,\n      ...props\n    })]\n  });\n}\nfunction CollectionPageHeader(props) {\n  const {\n    collectionLabel,\n    createHref\n  } = props;\n  const stringFormatter = useLocalizedStringFormatter(l10nMessages);\n  const isAboveMobile = useMediaQuery(breakpointQueries.above.mobile);\n  const [searchVisible, setSearchVisible] = useState(isAboveMobile);\n  const searchRef = useRef(null);\n  useEffect(() => {\n    setSearchVisible(isAboveMobile);\n  }, [isAboveMobile]);\n\n  // entries are presented in a virtualized table view, so we replace the\n  // default (e.g. ctrl+f) browser search behaviour\n  useEffect(() => {\n    const listener = event => {\n      // bail if the search field is already focused; let users invoke the\n      // browser search if they need to\n      if (document.activeElement === searchRef.current) {\n        return;\n      }\n      if (isHotkey('mod+f', event)) {\n        var _searchRef$current;\n        event.preventDefault();\n        (_searchRef$current = searchRef.current) === null || _searchRef$current === void 0 || _searchRef$current.select();\n      }\n    };\n    document.addEventListener('keydown', listener);\n    return () => document.removeEventListener('keydown', listener);\n  }, []);\n  return /*#__PURE__*/jsxs(PageHeader, {\n    children: [/*#__PURE__*/jsx(Heading, {\n      elementType: \"h1\",\n      id: \"page-title\",\n      size: \"small\",\n      flex: true,\n      minWidth: 0,\n      children: collectionLabel\n    }), /*#__PURE__*/jsx(\"div\", {\n      role: \"search\",\n      style: {\n        display: searchVisible ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/jsx(SearchField, {\n        ref: searchRef,\n        \"aria-label\": stringFormatter.format('search') // TODO: l10n \"Search {collection}\"?\n        ,\n        onChange: props.onSearchTermChange,\n        onClear: () => {\n          props.onSearchTermChange('');\n          if (!isAboveMobile) {\n            // the timeout ensures that the \"add\" button isn't pressed\n            setTimeout(() => {\n              setSearchVisible(false);\n            }, 250);\n          }\n        },\n        onBlur: () => {\n          if (!isAboveMobile && props.searchTerm === '') {\n            setSearchVisible(false);\n          }\n        },\n        placeholder: stringFormatter.format('search'),\n        value: props.searchTerm,\n        width: \"scale.2400\"\n      })\n    }), /*#__PURE__*/jsx(ActionButton, {\n      \"aria-label\": \"show search\",\n      isHidden: searchVisible || {\n        above: 'mobile'\n      },\n      onPress: () => {\n        setSearchVisible(true);\n        // NOTE: this hack is to force the search field to focus, and invoke\n        // the software keyboard on mobile safari\n        let tempInput = document.createElement('input');\n        tempInput.style.position = 'absolute';\n        tempInput.style.opacity = '0';\n        document.body.appendChild(tempInput);\n        tempInput.focus();\n        setTimeout(() => {\n          var _searchRef$current2;\n          (_searchRef$current2 = searchRef.current) === null || _searchRef$current2 === void 0 || _searchRef$current2.focus();\n          tempInput.remove();\n        }, 0);\n      },\n      children: /*#__PURE__*/jsx(Icon, {\n        src: searchIcon\n      })\n    }), /*#__PURE__*/jsx(Button, {\n      marginStart: \"auto\",\n      prominence: \"high\",\n      href: createHref,\n      isHidden: searchVisible ? {\n        below: 'tablet'\n      } : undefined,\n      children: stringFormatter.format('add')\n    })]\n  });\n}\nfunction CollectionPageContent(props) {\n  const trees = useTree();\n  const tree = trees.merged.kind === 'loaded' ? trees.merged.data.current.entries.get(getCollectionPath(props.config, props.collection)) : null;\n  if (trees.merged.kind === 'error') {\n    return /*#__PURE__*/jsx(EmptyState, {\n      icon: alertCircleIcon,\n      title: \"Unable to load collection\",\n      message: trees.merged.error.message,\n      actions: /*#__PURE__*/jsx(Button, {\n        tone: \"accent\",\n        href: props.basePath,\n        children: \"Dashboard\"\n      })\n    });\n  }\n  if (trees.merged.kind === 'loading') {\n    return /*#__PURE__*/jsx(EmptyState, {\n      children: /*#__PURE__*/jsx(ProgressCircle, {\n        \"aria-label\": \"Loading Entries\",\n        isIndeterminate: true,\n        size: \"large\"\n      })\n    });\n  }\n  if (!tree) {\n    return /*#__PURE__*/jsx(EmptyState, {\n      icon: listXIcon,\n      title: \"Empty collection\",\n      message: /*#__PURE__*/jsxs(Fragment, {\n        children: [\"There aren't any entries yet.\", ' ', /*#__PURE__*/jsx(TextLink, {\n          href: `${props.basePath}/collection/${encodeURIComponent(props.collection)}/create`,\n          children: \"Create the first entry\"\n        }), ' ', \"to see it here.\"]\n      })\n    });\n  }\n  return /*#__PURE__*/jsx(CollectionTable, {\n    ...props,\n    trees: trees.merged.data\n  });\n}\nconst SLUG = '@@slug';\nconst STATUS = '@@status';\nfunction CollectionTable(props) {\n  let {\n    searchTerm\n  } = props;\n  let {\n    currentBranch,\n    defaultBranch\n  } = useBranchInfo();\n  let isLocalMode = isLocalConfig(props.config);\n  let router = useRouter();\n  let [sortDescriptor, setSortDescriptor] = useState({\n    column: SLUG,\n    direction: 'ascending'\n  });\n  let hideStatusColumn = isLocalMode || currentBranch === defaultBranch;\n  const branchInfo = useBranchInfo();\n  const isRepoPrivate = useIsRepoPrivate();\n  const baseCommit = useBaseCommit();\n  const collection = props.config.collections[props.collection];\n  const entriesWithStatus = useMemo(() => {\n    const defaultEntries = new Map(getEntriesInCollectionWithTreeKey(props.config, props.collection, props.trees.default.tree).map(x => [x.slug, x.key]));\n    return getEntriesInCollectionWithTreeKey(props.config, props.collection, props.trees.current.tree).map(entry => {\n      return {\n        name: entry.slug,\n        status: defaultEntries.has(entry.slug) ? defaultEntries.get(entry.slug) === entry.key ? 'Unchanged' : 'Changed' : 'Added',\n        sha: entry.sha\n      };\n    });\n  }, [props.collection, props.config, props.trees]);\n  const mainFiles = useData(useCallback(async () => {\n    var _collection$columns;\n    if (!((_collection$columns = collection.columns) !== null && _collection$columns !== void 0 && _collection$columns.length)) return undefined;\n    const formatInfo = getCollectionFormat(props.config, props.collection);\n    const entries = await Promise.all(entriesWithStatus.map(async entry => {\n      return [entry.name, await fetchBlob(props.config, entry.sha, getEntryDataFilepath(getCollectionItemPath(props.config, props.collection, entry.name), formatInfo), baseCommit, isRepoPrivate, {\n        owner: branchInfo.mainOwner,\n        name: branchInfo.mainRepo\n      })];\n    }));\n    const glob = getSlugGlobForCollection(props.config, props.collection);\n    const rootSchema = {\n      kind: 'object',\n      fields: collection.schema\n    };\n    return new Map(entries.map(([slug, dataFile]) => {\n      const {\n        loaded\n      } = loadDataFile(dataFile, formatInfo);\n      const validated = parseProps(rootSchema, loaded, [], [], (schema, value, path) => {\n        if (schema.formKind === 'asset') {\n          return schema.reader.parse(value);\n        }\n        if (schema.formKind === 'content') {\n          return;\n        }\n        if (path.length === 1 && slug !== undefined) {\n          if (path[0] === collection.slugField) {\n            if (schema.formKind !== 'slug') {\n              throw new Error(`Slug field ${collection.slugField} is not a slug field`);\n            }\n            return schema.reader.parseWithSlug(value, {\n              slug,\n              glob\n            });\n          }\n        }\n        return schema.reader.parse(value);\n      }, true);\n      return [slug, validated];\n    }));\n  }, [baseCommit, branchInfo.mainOwner, branchInfo.mainRepo, collection, entriesWithStatus, isRepoPrivate, props.collection, props.config]));\n  const entriesWithData = useMemo(() => {\n    if (mainFiles.kind !== 'loaded' || !mainFiles.data) {\n      return entriesWithStatus;\n    }\n    const {\n      data\n    } = mainFiles;\n    return entriesWithStatus.map(entry => {\n      return {\n        ...entry,\n        data: data.get(entry.name)\n      };\n    });\n  }, [entriesWithStatus, mainFiles]);\n  const filteredItems = useMemo(() => {\n    return entriesWithData.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }, [entriesWithData, searchTerm]);\n  const sortedItems = useMemo(() => {\n    return [...filteredItems].sort((a, b) => {\n      const readCol = (row, other) => {\n        var _other;\n        if (sortDescriptor.column === SLUG) {\n          var _collection$parseSlug, _collection$parseSlug2;\n          return (_collection$parseSlug = (_collection$parseSlug2 = collection.parseSlugForSort) === null || _collection$parseSlug2 === void 0 ? void 0 : _collection$parseSlug2.call(collection, row.name)) !== null && _collection$parseSlug !== void 0 ? _collection$parseSlug : row.name;\n        }\n        if (sortDescriptor.column === STATUS) {\n          return row.status;\n        }\n        return (_other = other === null || other === void 0 ? void 0 : other[sortDescriptor.column]) !== null && _other !== void 0 ? _other : row.name;\n      };\n      const other = mainFiles.kind === 'loaded' ? mainFiles.data : undefined;\n      return sortBy(sortDescriptor.direction, readCol(a, other === null || other === void 0 ? void 0 : other.get(a.name)), readCol(b, other === null || other === void 0 ? void 0 : other.get(b.name)));\n    });\n  }, [collection, filteredItems, mainFiles, sortDescriptor.column, sortDescriptor.direction]);\n  const columns = useMemo(() => {\n    var _collection$columns2;\n    if ((_collection$columns2 = collection.columns) !== null && _collection$columns2 !== void 0 && _collection$columns2.length) {\n      return [...(hideStatusColumn ? [] : [{\n        name: 'Status',\n        key: STATUS,\n        minWidth: 32,\n        width: 32\n      }]), {\n        name: 'Slug',\n        key: SLUG\n      }, ...collection.columns.map(column => {\n        const schema = collection.schema[column];\n        return {\n          name: 'label' in schema && schema.label || column,\n          key: column\n        };\n      })];\n    }\n    return hideStatusColumn ? [{\n      name: 'Name',\n      key: SLUG\n    }] : [{\n      name: 'Status',\n      key: STATUS,\n      minWidth: 32,\n      width: 32\n    }, {\n      name: 'Name',\n      key: SLUG\n    }];\n  }, [collection, hideStatusColumn]);\n  return /*#__PURE__*/jsxs(TableView, {\n    \"aria-labelledby\": \"page-title\",\n    selectionMode: \"none\",\n    onSortChange: setSortDescriptor,\n    sortDescriptor: sortDescriptor,\n    density: \"spacious\",\n    overflowMode: \"truncate\",\n    prominence: \"low\",\n    onRowAction: key => {\n      router.push(getItemPath(props.basePath, props.collection, key));\n    },\n    renderEmptyState: () => /*#__PURE__*/jsx(EmptyState, {\n      icon: searchXIcon,\n      title: \"No results\",\n      message: `No items matching \"${searchTerm}\" were found.`\n    }),\n    flex: true,\n    marginTop: {\n      tablet: 'large'\n    },\n    marginBottom: {\n      mobile: 'regular',\n      tablet: 'xlarge'\n    },\n    UNSAFE_className: css({\n      marginInline: tokenSchema.size.space.regular,\n      [breakpointQueries.above.mobile]: {\n        marginInline: `calc(${tokenSchema.size.space.xlarge} - ${tokenSchema.size.space.medium})`\n      },\n      [breakpointQueries.above.tablet]: {\n        marginInline: `calc(${tokenSchema.size.space.xxlarge} - ${tokenSchema.size.space.medium})`\n      },\n      '[role=rowheader]': {\n        cursor: 'pointer'\n      }\n    }),\n    children: [/*#__PURE__*/jsx(TableHeader, {\n      columns: columns,\n      children: ({\n        name,\n        key,\n        ...options\n      }) => key === STATUS ? /*#__PURE__*/jsx(Column, {\n        isRowHeader: true,\n        allowsSorting: true,\n        ...options,\n        children: /*#__PURE__*/jsx(Icon, {\n          \"aria-label\": \"Status\",\n          src: diffIcon\n        })\n      }, key) : /*#__PURE__*/jsx(Column, {\n        isRowHeader: true,\n        allowsSorting: true,\n        ...options,\n        children: name\n      }, key)\n    }), /*#__PURE__*/jsx(TableBody, {\n      items: sortedItems,\n      children: item => {\n        var _collection$columns3;\n        const statusCell = /*#__PURE__*/jsx(Cell, {\n          textValue: item.status,\n          children: item.status === 'Added' ? /*#__PURE__*/jsx(Icon, {\n            color: \"positive\",\n            src: plusSquareIcon\n          }) : item.status === 'Changed' ? /*#__PURE__*/jsx(Icon, {\n            color: \"accent\",\n            src: dotSquareIcon\n          }) : null\n        }, STATUS + item.name);\n        const nameCell = /*#__PURE__*/jsx(Cell, {\n          textValue: item.name,\n          children: /*#__PURE__*/jsx(Text, {\n            weight: \"medium\",\n            children: item.name\n          })\n        }, SLUG + item.name);\n        if ((_collection$columns3 = collection.columns) !== null && _collection$columns3 !== void 0 && _collection$columns3.length) {\n          return /*#__PURE__*/jsx(Row, {\n            children: [...(hideStatusColumn ? [] : [statusCell]), nameCell, ...collection.columns.map(column => {\n              var _item$data;\n              let val;\n              val = (_item$data = item.data) === null || _item$data === void 0 ? void 0 : _item$data[column];\n              if (val == null) {\n                val = undefined;\n              } else {\n                val = val + '';\n              }\n              return /*#__PURE__*/jsx(Cell, {\n                textValue: val,\n                children: /*#__PURE__*/jsx(Text, {\n                  weight: \"medium\",\n                  children: val\n                })\n              }, column + item.name);\n            })]\n          }, item.name);\n        }\n        return hideStatusColumn ? /*#__PURE__*/jsx(Row, {\n          children: nameCell\n        }, item.name) : /*#__PURE__*/jsxs(Row, {\n          children: [statusCell, nameCell]\n        }, item.name);\n      }\n    })]\n  });\n}\nfunction getItemPath(basePath, collection, key) {\n  return `${basePath}/collection/${encodeURIComponent(collection)}/item/${encodeURIComponent(key)}`;\n}\nfunction useDebouncedValue(value, delay = 300) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n}\n\nconst AppSlugContext = /*#__PURE__*/createContext(undefined);\nconst AppSlugProvider = AppSlugContext.Provider;\nfunction InstallGitHubApp(props) {\n  var _URL$searchParams$get;\n  const router = useRouter();\n  const appSlugFromContext = useContext(AppSlugContext);\n  const appSlug = (_URL$searchParams$get = new URL(router.href, 'https://example.com').searchParams.get('slug')) !== null && _URL$searchParams$get !== void 0 ? _URL$searchParams$get : appSlugFromContext === null || appSlugFromContext === void 0 ? void 0 : appSlugFromContext.value;\n  const parsedRepo = parseRepoConfig(props.config.storage.repo);\n  return /*#__PURE__*/jsxs(Flex, {\n    direction: \"column\",\n    gap: \"regular\",\n    children: [/*#__PURE__*/jsxs(Flex, {\n      alignItems: \"end\",\n      gap: \"regular\",\n      children: [/*#__PURE__*/jsx(TextField, {\n        label: \"Repo Name\",\n        width: \"100%\",\n        isReadOnly: true,\n        value: parsedRepo.name\n      }), /*#__PURE__*/jsx(ActionButton, {\n        onPress: () => {\n          navigator.clipboard.writeText(parsedRepo.name);\n        },\n        children: \"Copy Repo Name\"\n      })]\n    }), appSlug ? /*#__PURE__*/jsx(Button, {\n      prominence: \"high\",\n      href: `https://github.com/apps/${appSlug}/installations/new`,\n      children: \"Install GitHub App\"\n    }) : /*#__PURE__*/jsx(Notice, {\n      tone: \"caution\",\n      children: appSlugFromContext ? /*#__PURE__*/jsxs(Text, {\n        children: [\"The \", /*#__PURE__*/jsx(\"code\", {\n          children: appSlugFromContext.envName\n        }), \" environment variable wasn't provided so we can't link to the GitHub app installation page. You should find the App on GitHub and add the repo yourself.\"]\n      }) : /*#__PURE__*/jsx(Text, {\n        children: \"Find the App on GitHub and add the repo.\"\n      })\n    })]\n  });\n}\n\nfunction ForkRepoDialog(props) {\n  const stringFormatter = useLocalizedStringFormatter(l10nMessages);\n  const client = useClient();\n  const [state, setState] = useState({\n    kind: 'idle'\n  });\n  useEffect(() => {\n    const listener = async event => {\n      if (event.key === 'ks-refetch-installations' && event.newValue === 'true') {\n        localStorage.removeItem('ks-refetch-installations');\n        try {\n          var _res$data;\n          const auth = await getAuth(props.config);\n          if (!auth) throw new Error('Unauthorized');\n          const res = await client.query(GitHubAppShellQuery, parseRepoConfig(props.config.storage.repo)).toPromise();\n          if ((_res$data = res.data) !== null && _res$data !== void 0 && (_res$data = _res$data.repository) !== null && _res$data !== void 0 && (_res$data = _res$data.forks.nodes) !== null && _res$data !== void 0 && _res$data.some(x => (x === null || x === void 0 ? void 0 : x.viewerPermission) === 'ADMIN' || (x === null || x === void 0 ? void 0 : x.viewerPermission) === 'WRITE' || (x === null || x === void 0 ? void 0 : x.viewerPermission) === 'MAINTAIN')) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n            props.onCreate();\n          }\n        } catch (err) {\n          setState({\n            kind: 'error',\n            error: err\n          });\n        }\n      }\n    };\n    addEventListener('storage', listener);\n    return () => removeEventListener('storage', listener);\n  }, [client, props]);\n  const appSlug = useContext(AppSlugContext);\n  return /*#__PURE__*/jsxs(Dialog, {\n    size: \"small\",\n    isDismissable: true,\n    onDismiss: () => {\n      props.onDismiss();\n    },\n    children: [/*#__PURE__*/jsx(Heading, {\n      children: \"Fork Repo\"\n    }), state.kind === 'error' ? /*#__PURE__*/jsxs(Fragment, {\n      children: [/*#__PURE__*/jsx(Content, {\n        children: /*#__PURE__*/jsx(Notice, {\n          tone: \"critical\",\n          children: state.error.message\n        })\n      }), /*#__PURE__*/jsx(ButtonGroup, {\n        children: /*#__PURE__*/jsx(Button, {\n          onPress: props.onDismiss,\n          children: stringFormatter.format('cancel')\n        })\n      })]\n    }) : /*#__PURE__*/jsx(Fragment, {\n      children: /*#__PURE__*/jsx(Content, {\n        children: /*#__PURE__*/jsxs(Flex, {\n          gap: \"large\",\n          direction: \"column\",\n          marginBottom: \"large\",\n          children: [/*#__PURE__*/jsx(Text, {\n            children: \"You don't have permission to write to this repo so to save your changes, you need to fork the repo.\"\n          }), /*#__PURE__*/jsxs(Text, {\n            children: [\"To start,\", ' ', /*#__PURE__*/jsx(TextLink, {\n              href: `https://github.com/${serializeRepoConfig(props.config.storage.repo)}/fork`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"fork the repo on GitHub\"\n            }), \". Then, come back to this page and\", ' ', /*#__PURE__*/jsx(TextLink, {\n              href: `https://github.com/apps/${appSlug === null || appSlug === void 0 ? void 0 : appSlug.value}/installations/new?state=close`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"install the Keystatic GitHub App on your fork.\"\n            })]\n          })]\n        })\n      })\n    })]\n  });\n}\n\ninjectGlobal({\n  body: {\n    overflow: 'hidden'\n  }\n});\nfunction createUrqlClient(config) {\n  const repo = config.storage.kind === 'github' ? parseRepoConfig(config.storage.repo) : {\n    owner: 'repo-owner',\n    name: 'repo-name'\n  };\n  return createClient({\n    url: config.storage.kind === 'github' ? 'https://api.github.com/graphql' : `${KEYSTATIC_CLOUD_API_URL}/v1/github/graphql`,\n    requestPolicy: 'cache-and-network',\n    exchanges: [authExchange(async utils => {\n      let authState = await getAuth(config);\n      return {\n        addAuthToOperation(operation) {\n          authState = getSyncAuth(config);\n          if (!authState) {\n            return operation;\n          }\n          return utils.appendHeaders(operation, {\n            Authorization: `Bearer ${authState.accessToken}`,\n            ...(config.storage.kind === 'cloud' ? KEYSTATIC_CLOUD_HEADERS : {})\n          });\n        },\n        didAuthError() {\n          return false;\n        },\n        willAuthError(operation) {\n          var _operation$query$defi;\n          authState = getSyncAuth(config);\n          if (operation.query.definitions[0].kind === 'OperationDefinition' && (_operation$query$defi = operation.query.definitions[0].name) !== null && _operation$query$defi !== void 0 && _operation$query$defi.value.includes('AppShell') && !authState) {\n            if (config.storage.kind === 'github') {\n              window.location.href = '/api/keystatic/github/login';\n            } else {\n              redirectToCloudAuth('', config);\n            }\n            return true;\n          }\n          if (!authState) {\n            return true;\n          }\n          return false;\n        },\n        async refreshAuth() {\n          authState = await getAuth(config);\n        }\n      };\n    }), cacheExchange({\n      resolvers: {\n        Repository: {\n          refs: relayPagination()\n        }\n      },\n      updates: {\n        Mutation: {\n          createRef(result, args, cache, _info) {\n            cache.updateQuery({\n              query: config.storage.kind === 'github' ? GitHubAppShellQuery : CloudAppShellQuery,\n              variables: repo\n            }, data => {\n              var _data$repository;\n              if (data !== null && data !== void 0 && (_data$repository = data.repository) !== null && _data$repository !== void 0 && (_data$repository = _data$repository.refs) !== null && _data$repository !== void 0 && _data$repository.nodes && result.createRef && typeof result.createRef === 'object' && 'ref' in result.createRef) {\n                return {\n                  ...data,\n                  repository: {\n                    ...data.repository,\n                    refs: {\n                      ...data.repository.refs,\n                      nodes: [...data.repository.refs.nodes, result.createRef.ref]\n                    }\n                  }\n                };\n              }\n              return data;\n            });\n          },\n          deleteRef(result, args, cache, _info) {\n            cache.updateQuery({\n              query: config.storage.kind === 'github' ? GitHubAppShellQuery : CloudAppShellQuery,\n              variables: repo\n            }, data => {\n              var _data$repository2;\n              if (data !== null && data !== void 0 && (_data$repository2 = data.repository) !== null && _data$repository2 !== void 0 && (_data$repository2 = _data$repository2.refs) !== null && _data$repository2 !== void 0 && _data$repository2.nodes && result.deleteRef && typeof result.deleteRef === 'object' && '__typename' in result.deleteRef && typeof args.input === 'object' && args.input !== null && 'refId' in args.input && typeof args.input.refId === 'string') {\n                const refId = args.input.refId;\n                return {\n                  ...data,\n                  repository: {\n                    ...data.repository,\n                    refs: {\n                      ...data.repository.refs,\n                      nodes: data.repository.refs.nodes.filter(x => (x === null || x === void 0 ? void 0 : x.id) !== refId)\n                    }\n                  }\n                };\n              }\n              return data;\n            });\n          }\n        }\n      }\n    }), ...(config.storage.kind === 'github' ? [] : [persistedExchange({\n      enableForMutation: true,\n      enforcePersistedQueries: true\n    })]), fetchExchange]\n  });\n}\nfunction Provider({\n  children,\n  config\n}) {\n  const themeContext = useTheme();\n  const {\n    push: navigate\n  } = useRouter();\n  const keystarRouter = useMemo(() => ({\n    navigate\n  }), [navigate]);\n  return /*#__PURE__*/jsx(ThemeProvider, {\n    value: themeContext,\n    children: /*#__PURE__*/jsxs(KeystarProvider, {\n      locale: config.locale || 'en-US',\n      colorScheme: themeContext.theme,\n      router: keystarRouter,\n      children: [/*#__PURE__*/jsx(ClientSideOnlyDocumentElement, {}), /*#__PURE__*/jsx(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\",\n        rel: \"stylesheet\"\n      }), /*#__PURE__*/jsx(Provider$1, {\n        value: useMemo(() => createUrqlClient(config), [config]),\n        children: children\n      }), /*#__PURE__*/jsx(Toaster, {})]\n    })\n  });\n}\n\nconst textEncoder = new TextEncoder();\nconst frontmatterSplit = textEncoder.encode('---\\n');\nfunction combineFrontmatterAndContents(frontmatter, contents) {\n  const array = new Uint8Array(frontmatter.byteLength + contents.byteLength + frontmatterSplit.byteLength * 2);\n  array.set(frontmatterSplit);\n  array.set(frontmatter, frontmatterSplit.byteLength);\n  array.set(frontmatterSplit, frontmatterSplit.byteLength + frontmatter.byteLength);\n  array.set(contents, frontmatterSplit.byteLength * 2 + frontmatter.byteLength);\n  return array;\n}\nfunction serializeEntryToFiles(args) {\n  var _args$slug, _args$slug2;\n  let {\n    value: stateWithExtraFilesRemoved,\n    extraFiles\n  } = serializeProps(args.state, object(args.schema), (_args$slug = args.slug) === null || _args$slug === void 0 ? void 0 : _args$slug.field, (_args$slug2 = args.slug) === null || _args$slug2 === void 0 ? void 0 : _args$slug2.value, true);\n  const dataFormat = args.format.data;\n  let dataContent = textEncoder.encode(dataFormat === 'json' ? JSON.stringify(stateWithExtraFilesRemoved, null, 2) + '\\n' : dump(stateWithExtraFilesRemoved));\n  if (args.format.contentField) {\n    const filename = `${args.format.contentField.key}${args.format.contentField.config.contentExtension}`;\n    let contents;\n    extraFiles = extraFiles.filter(x => {\n      if (x.path !== filename) return true;\n      contents = x.contents;\n      return false;\n    });\n    assert(contents !== undefined, 'Expected content field to be present');\n    dataContent = combineFrontmatterAndContents(dataContent, contents);\n  }\n  return [{\n    path: getEntryDataFilepath(args.basePath, args.format),\n    contents: dataContent\n  }, ...extraFiles.map(file => ({\n    path: `${file.parent ? args.slug ? `${file.parent}/${args.slug.value}` : file.parent : args.basePath}/${file.path}`,\n    contents: file.contents\n  }))];\n}\nfunction useUpsertItem(args) {\n  const [state, setState] = useState({\n    kind: 'idle'\n  });\n  const baseCommit = useBaseCommit();\n  const branchInfo = useContext(BranchInfoContext);\n  const setTreeSha = useSetTreeSha();\n  const [, mutate] = useMutation(createCommitMutation);\n  const repoWithWriteAccess = useContext(RepoWithWriteAccessContext);\n  const appSlug = useContext(AppSlugContext);\n  const unscopedTreeData = useCurrentUnscopedTree();\n  return [state, async override => {\n    try {\n      var _getPathPrefix, _args$initialFiles;\n      const unscopedTree = unscopedTreeData.kind === 'loaded' ? unscopedTreeData.data.tree : undefined;\n      if (!unscopedTree) return false;\n      if (repoWithWriteAccess === null && args.config.storage.kind === 'github' && appSlug !== null && appSlug !== void 0 && appSlug.value) {\n        setState({\n          kind: 'needs-fork'\n        });\n        return false;\n      }\n      setState({\n        kind: 'loading'\n      });\n      const pathPrefix = (_getPathPrefix = getPathPrefix(args.config.storage)) !== null && _getPathPrefix !== void 0 ? _getPathPrefix : '';\n      let additions = serializeEntryToFiles({\n        basePath: args.basePath,\n        config: args.config,\n        schema: args.schema,\n        format: args.format,\n        state: args.state,\n        slug: args.slug\n      }).map(addition => ({\n        ...addition,\n        path: pathPrefix + addition.path\n      }));\n      const additionPathToSha = new Map(await Promise.all(additions.map(async addition => [addition.path, await hydrateBlobCache(addition.contents)])));\n      const filesToDelete = new Set((_args$initialFiles = args.initialFiles) === null || _args$initialFiles === void 0 ? void 0 : _args$initialFiles.map(x => pathPrefix + x));\n      for (const file of additions) {\n        filesToDelete.delete(file.path);\n      }\n      additions = additions.filter(addition => {\n        const sha = additionPathToSha.get(addition.path);\n        const existing = getTreeNodeAtPath(unscopedTree, addition.path);\n        return (existing === null || existing === void 0 ? void 0 : existing.entry.sha) !== sha;\n      });\n      const deletions = [...filesToDelete].map(path => ({\n        path\n      }));\n      const updatedTree = await updateTreeWithChanges(unscopedTree, {\n        additions,\n        deletions: [...filesToDelete]\n      });\n      await hydrateTreeCacheWithEntries(updatedTree.entries);\n      if (args.config.storage.kind === 'github' || args.config.storage.kind === 'cloud') {\n        var _override$branch, _override$sha, _result$error, _result$data;\n        const branch = {\n          branchName: (_override$branch = override === null || override === void 0 ? void 0 : override.branch) !== null && _override$branch !== void 0 ? _override$branch : branchInfo.currentBranch,\n          repositoryNameWithOwner: `${repoWithWriteAccess.owner}/${repoWithWriteAccess.name}`\n        };\n        const runMutation = expectedHeadOid => mutate({\n          input: {\n            branch,\n            expectedHeadOid,\n            message: {\n              headline: `Update ${args.basePath}`\n            },\n            fileChanges: {\n              additions: additions.map(addition => ({\n                ...addition,\n                contents: fromUint8Array(addition.contents)\n              })),\n              deletions\n            }\n          }\n        });\n        let result = await runMutation((_override$sha = override === null || override === void 0 ? void 0 : override.sha) !== null && _override$sha !== void 0 ? _override$sha : baseCommit);\n        const gqlError = (_result$error = result.error) === null || _result$error === void 0 || (_result$error = _result$error.graphQLErrors[0]) === null || _result$error === void 0 ? void 0 : _result$error.originalError;\n        if (gqlError && 'type' in gqlError) {\n          if (gqlError.type === 'BRANCH_PROTECTION_RULE_VIOLATION') {\n            setState({\n              kind: 'needs-new-branch',\n              reason: 'Changes must be made via pull request to this branch. Create a new branch to save changes.'\n            });\n            return false;\n          }\n          if (gqlError.type === 'STALE_DATA') {\n            var _refData$data, _args$slug3;\n            // we don't want this to go into the cache yet\n            // so we create a new client just for this\n            const refData = await createUrqlClient(args.config).query(FetchRef, {\n              owner: repoWithWriteAccess.owner,\n              name: repoWithWriteAccess.name,\n              ref: `refs/heads/${branchInfo.currentBranch}`\n            }).toPromise();\n            if (!((_refData$data = refData.data) !== null && _refData$data !== void 0 && (_refData$data = _refData$data.repository) !== null && _refData$data !== void 0 && (_refData$data = _refData$data.ref) !== null && _refData$data !== void 0 && _refData$data.target)) {\n              throw new Error('Branch not found');\n            }\n            const tree = scopeEntriesWithPathPrefix(await fetchGitHubTreeData(refData.data.repository.ref.target.oid, args.config), args.config);\n            const treeKey = getTreeKey(getDirectoriesForTreeKey(object(args.schema), args.basePath, (_args$slug3 = args.slug) === null || _args$slug3 === void 0 ? void 0 : _args$slug3.value, args.format), tree.tree);\n            if (treeKey === args.currentLocalTreeKey) {\n              result = await runMutation(refData.data.repository.ref.target.oid);\n            } else {\n              setState({\n                kind: 'needs-new-branch',\n                reason: 'This entry has been updated since it was opened. Create a new branch to save changes.'\n              });\n              return false;\n            }\n          }\n        }\n        if (result.error) {\n          throw result.error;\n        }\n        const target = (_result$data = result.data) === null || _result$data === void 0 || (_result$data = _result$data.createCommitOnBranch) === null || _result$data === void 0 || (_result$data = _result$data.ref) === null || _result$data === void 0 ? void 0 : _result$data.target;\n        if (target) {\n          setState({\n            kind: 'updated'\n          });\n          return true;\n        }\n        throw new Error('Failed to update');\n      } else {\n        const res = await fetch('/api/keystatic/update', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'no-cors': '1'\n          },\n          body: JSON.stringify({\n            additions: additions.map(addition => ({\n              ...addition,\n              contents: fromUint8Array(addition.contents)\n            })),\n            deletions\n          })\n        });\n        if (!res.ok) {\n          throw new Error(await res.text());\n        }\n        const newTree = await res.json();\n        const {\n          tree\n        } = await hydrateTreeCacheWithEntries(newTree);\n        setTreeSha(await treeSha(tree));\n        setState({\n          kind: 'updated'\n        });\n        return true;\n      }\n    } catch (err) {\n      setState({\n        kind: 'error',\n        error: err\n      });\n      return false;\n    }\n  }, () => {\n    setState({\n      kind: 'idle'\n    });\n  }];\n}\nconst createCommitMutation = gql`\n  mutation CreateCommit($input: CreateCommitOnBranchInput!) {\n    createCommitOnBranch(input: $input) {\n      ref {\n        id\n        target {\n          id\n          oid\n          ... on Commit {\n            tree {\n              id\n              oid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nfunction useDeleteItem(args) {\n  const [state, setState] = useState({\n    kind: 'idle'\n  });\n  const baseCommit = useBaseCommit();\n  const branchInfo = useContext(BranchInfoContext);\n  const [, mutate] = useMutation(createCommitMutation);\n  const setTreeSha = useSetTreeSha();\n  const repoWithWriteAccess = useContext(RepoWithWriteAccessContext);\n  const appSlug = useContext(AppSlugContext);\n  const unscopedTreeData = useCurrentUnscopedTree();\n  return [state, async () => {\n    try {\n      const unscopedTree = unscopedTreeData.kind === 'loaded' ? unscopedTreeData.data.tree : undefined;\n      if (!unscopedTree) return false;\n      if (repoWithWriteAccess === null && args.storage.kind === 'github' && appSlug !== null && appSlug !== void 0 && appSlug.value) {\n        setState({\n          kind: 'needs-fork'\n        });\n        return false;\n      }\n      setState({\n        kind: 'loading'\n      });\n      const deletions = args.initialFiles.map(x => {\n        var _getPathPrefix2;\n        return ((_getPathPrefix2 = getPathPrefix(args.storage)) !== null && _getPathPrefix2 !== void 0 ? _getPathPrefix2 : '') + x;\n      });\n      const updatedTree = await updateTreeWithChanges(unscopedTree, {\n        additions: [],\n        deletions\n      });\n      await hydrateTreeCacheWithEntries(updatedTree.entries);\n      if (args.storage.kind === 'github' || args.storage.kind === 'cloud') {\n        const {\n          error\n        } = await mutate({\n          input: {\n            branch: {\n              repositoryNameWithOwner: `${repoWithWriteAccess.owner}/${repoWithWriteAccess.name}`,\n              branchName: branchInfo.currentBranch\n            },\n            message: {\n              headline: `Delete ${args.basePath}`\n            },\n            expectedHeadOid: baseCommit,\n            fileChanges: {\n              deletions: deletions.map(path => ({\n                path\n              }))\n            }\n          }\n        });\n        if (error) {\n          throw error;\n        }\n        setState({\n          kind: 'updated'\n        });\n        return true;\n      } else {\n        const res = await fetch('/api/keystatic/update', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'no-cors': '1'\n          },\n          body: JSON.stringify({\n            additions: [],\n            deletions: deletions.map(path => ({\n              path\n            }))\n          })\n        });\n        if (!res.ok) {\n          throw new Error(await res.text());\n        }\n        const newTree = await res.json();\n        const {\n          tree\n        } = await hydrateTreeCacheWithEntries(newTree);\n        setTreeSha(await treeSha(tree));\n        setState({\n          kind: 'updated'\n        });\n        return true;\n      }\n    } catch (err) {\n      setState({\n        kind: 'error',\n        error: err\n      });\n    }\n  }, () => {\n    setState({\n      kind: 'idle'\n    });\n  }];\n}\nconst FetchRef = gql`\n  query FetchRef($owner: String!, $name: String!, $ref: String!) {\n    repository(owner: $owner, name: $name) {\n      id\n      ref(qualifiedName: $ref) {\n        id\n        target {\n          id\n          oid\n        }\n      }\n    }\n  }\n`;\n\nfunction useHasChanged(args) {\n  const serialize = useCallback(state => {\n    const slug = args.slugField ? getSlugFromState({\n      schema: args.schema.fields,\n      slugField: args.slugField\n    }, state) : undefined;\n    return {\n      slug,\n      state: serializeProps(state, args.schema, args.slugField, slug, true)\n    };\n  }, [args.schema, args.slugField]);\n  const initialFilesForUpdate = useMemo(() => args.initialState === null ? null : serialize(args.initialState), [args.initialState, serialize]);\n  const filesForUpdate = useMemo(() => serialize(args.state), [serialize, args.state]);\n  return useMemo(() => {\n    return !isEqual(initialFilesForUpdate, filesForUpdate);\n  }, [initialFilesForUpdate, filesForUpdate]);\n}\n\nfunction useSlugFieldInfo(collection, slugToExclude) {\n  const config = useConfig();\n  const allSlugs = useSlugsInCollection(collection);\n  return useMemo(() => {\n    const slugs = new Set(allSlugs);\n    if (slugToExclude) {\n      slugs.delete(slugToExclude);\n    }\n    const collectionConfig = config.collections[collection];\n    return {\n      field: collectionConfig.slugField,\n      slugs,\n      glob: getSlugGlobForCollection(config, collection)\n    };\n  }, [allSlugs, collection, config, slugToExclude]);\n}\n\nfunction useYJsValue(schema, type) {\n  const yjsInfo = useYjs();\n  const thing = useMemo(() => {\n    let lastVal = yjsToVal(schema, yjsInfo.awareness, type);\n    return {\n      getSnapshot: () => lastVal,\n      subscribe: cb => {\n        const handler = () => {\n          lastVal = yjsToVal(schema, yjsInfo.awareness, type);\n          cb();\n        };\n        type.observeDeep(handler);\n        return () => {\n          type.unobserveDeep(handler);\n        };\n      }\n    };\n  }, [schema, type, yjsInfo.awareness]);\n  return useSyncExternalStore(thing.subscribe, thing.getSnapshot, thing.getSnapshot);\n}\n\n// this is written like this rather than ArrayField<ComponentSchema> to avoid TypeScript erroring about circularity\n\nfunction castToMemoizedInfoForSchema(val) {\n  return val;\n}\nfunction getOrInsert(map, key, val) {\n  if (!map.has(key)) {\n    map.set(key, val(key));\n  }\n  return map.get(key);\n}\nfunction findSingleReorderedElement(oldKeys, newKeys) {\n  if (oldKeys.length !== newKeys.length) return;\n  const sortedOldKeys = [...oldKeys].sort();\n  const sortedNewKeys = [...newKeys].sort();\n  if (sortedOldKeys.join() !== sortedNewKeys.join()) return;\n  let reorderedKey;\n  for (let i = 0; i < oldKeys.length; i++) {\n    if (oldKeys[i] !== newKeys[i]) {\n      if (reorderedKey === newKeys[i]) continue;\n      if (reorderedKey !== undefined) return;\n      reorderedKey = oldKeys[i];\n    }\n  }\n  return reorderedKey;\n}\nfunction createGetPreviewPropsFromY(rootSchema, yMap, awareness) {\n  const memoizedInfoForSchema = castToMemoizedInfoForSchema({\n    form(schema, onChange) {\n      return onChange;\n    },\n    array(schema, onChange) {\n      return {\n        rawOnChange: onChange,\n        inner: new Map(),\n        onChange(updater) {\n          const yArr = onChange.yjs();\n          const oldVal = yjsToVal(schema, awareness, yArr);\n          const oldKeys = getKeysForArrayValue(yArr);\n          const uniqueKeys = new Set();\n          for (const x of updater) {\n            if (x.key !== undefined) {\n              if (uniqueKeys.has(x.key)) {\n                throw new Error('Array elements must have unique keys');\n              }\n              uniqueKeys.add(x.key);\n            }\n          }\n          const newKeys = updater.map(x => {\n            if (x.key !== undefined) return x.key;\n            let elementKey = getNewArrayElementKey();\n            // just in case someone gives a key that is above our counter\n            while (uniqueKeys.has(elementKey)) {\n              elementKey = getNewArrayElementKey();\n            }\n            uniqueKeys.add(elementKey);\n            return elementKey;\n          });\n          setKeysForArrayValue(yArr, newKeys);\n          // optimise for the case where a single element has been re-ordered (drag and drop)\n          const reorderedKey = findSingleReorderedElement(oldKeys, newKeys);\n          if (reorderedKey !== undefined) {\n            const oldIndex = oldKeys.indexOf(reorderedKey);\n            const newIndex = newKeys.indexOf(reorderedKey);\n            let val = yArr.get(oldIndex);\n            if (val instanceof Y.AbstractType) {\n              val = val.clone();\n            }\n            yArr.delete(oldIndex);\n            yArr.insert(newIndex, [val]);\n            for (const [idx, {\n              value\n            }] of updater.entries()) {\n              const oldIndex = oldKeys.indexOf(newKeys[idx]);\n              const newVal = updateValue(schema.element, oldVal[oldIndex], value);\n              if (newVal !== oldVal) {\n                yArr.delete(oldIndex);\n                yArr.insert(idx, [parsedValToYjs(schema.element, newVal)]);\n              }\n            }\n            return;\n          }\n\n          // optimise only updating values + added new elements at the end\n          const oldKeysJoined = oldKeys.join();\n          const newKeysJoined = newKeys.slice(0, oldKeys.length).join();\n          if (oldKeysJoined === newKeysJoined) {\n            for (const [idx, {\n              value\n            }] of updater.entries()) {\n              const oldIndex = oldKeys.indexOf(newKeys[idx]);\n              const newVal = updateValue(schema.element, oldVal[oldIndex], value);\n              if (newVal !== oldVal) {\n                yArr.delete(oldIndex);\n                yArr.insert(idx, [parsedValToYjs(schema.element, newVal)]);\n              }\n            }\n            const valsToInsert = [];\n            for (const {\n              value\n            } of updater.slice(oldKeys.length)) {\n              valsToInsert.push(parsedValToYjs(schema.element, getInitialPropsValueFromInitializer(schema.element, value)));\n            }\n            if (valsToInsert.length) {\n              yArr.insert(oldKeys.length, valsToInsert);\n            }\n            return;\n          }\n          // for anything else, just replace the whole array\n\n          const newVals = updater.map((x, i) => {\n            const key = newKeys[i];\n            const oldIndex = oldKeys.indexOf(key);\n            if (oldIndex !== -1) {\n              const oldElement = yArr.get(oldIndex);\n              if (x.value === undefined) {\n                if (oldElement instanceof Y.AbstractType) {\n                  return oldElement.clone();\n                }\n                return oldElement;\n              }\n              const newVal = updateValue(schema.element, oldVal[oldIndex], x.value);\n              return parsedValToYjs(schema.element, newVal);\n            }\n            return parsedValToYjs(schema.element, getInitialPropsValueFromInitializer(schema.element, x.value));\n          });\n          yArr.delete(0, yArr.length);\n          yArr.insert(0, newVals);\n        }\n      };\n    },\n    conditional(schema, stateUpdater) {\n      return {\n        onChange: (discriminant, value) => {\n          stateUpdater.yjs().set('discriminant', discriminant);\n          if (value !== undefined) {\n            const old = yjsToVal(schema, awareness, stateUpdater.yjs().get('value'));\n            stateUpdater.yjs().set('value', parsedValToYjs(schema, updateValue(schema.values[discriminant.toString()], old, value)));\n          }\n        },\n        onChangeForValue: Object.assign(cb => {\n          const old = yjsToVal(schema, awareness, stateUpdater.yjs().get('value'));\n          stateUpdater.yjs().set('value', parsedValToYjs(schema, cb(old)));\n        }, {\n          yjs() {\n            return stateUpdater.yjs().get('value');\n          }\n        })\n      };\n    },\n    object(schema, stateUpdater) {\n      return {\n        onChange: updater => {\n          for (const [key, val] of Object.entries(updater)) {\n            const oldVal = yjsToVal(schema.fields[key], awareness, stateUpdater.yjs().get(key));\n            stateUpdater.yjs().set(key, parsedValToYjs(schema.fields[key], updateValue(schema.fields[key], oldVal, val)));\n          }\n        },\n        innerOnChanges: Object.fromEntries(Object.entries(schema.fields).map(([key, val]) => {\n          let func = Object.assign(newVal => {\n            stateUpdater.yjs().set(key, parsedValToYjs(val, newVal));\n          }, {\n            yjs() {\n              return stateUpdater.yjs().get(key);\n            }\n          });\n          return [key, func];\n        }))\n      };\n    }\n  });\n  const previewPropsFactories = {\n    form(schema, value, onChange) {\n      return {\n        value,\n        onChange,\n        schema: schema\n      };\n    },\n    object(schema, value, memoized, path, getInnerProp) {\n      const fields = {};\n      for (const key of Object.keys(schema.fields)) {\n        fields[key] = getInnerProp(schema.fields[key], value[key], memoized.innerOnChanges[key], key);\n      }\n      const previewProps = {\n        fields,\n        onChange: memoized.onChange,\n        schema: schema\n      };\n      return previewProps;\n    },\n    array(schema, value, memoized, path, getInnerProp) {\n      const arrayValue = value;\n      const keys = getKeysForArrayValue(arrayValue);\n      const unusedKeys = new Set(getKeysForArrayValue(value));\n      const props = {\n        elements: arrayValue.map((val, i) => {\n          const key = keys[i];\n          unusedKeys.delete(key);\n          const element = getOrInsert(memoized.inner, key, () => {\n            const onChange = Object.assign(val => {\n              const yArr = memoized.rawOnChange.yjs();\n              const keys = getKeysForArrayValue(yArr);\n              const index = keys.indexOf(key);\n              const newVal = val(yjsToVal(schema, awareness, yArr.get(index)));\n              yArr.delete(index);\n              yArr.insert(index, [parsedValToYjs(schema.element, newVal)]);\n            }, {\n              yjs() {\n                const keys = getKeysForArrayValue(memoized.rawOnChange.yjs());\n                const i = keys.indexOf(key);\n                return memoized.rawOnChange.yjs().get(i);\n              }\n            });\n            const element = getInnerProp(schema.element, val, onChange, key);\n            return {\n              element,\n              elementWithKey: {\n                ...element,\n                key\n              },\n              onChange\n            };\n          });\n          const currentInnerProp = getInnerProp(schema.element, val, element.onChange, key);\n          if (element.element !== currentInnerProp) {\n            element.element = currentInnerProp;\n            element.elementWithKey = {\n              ...currentInnerProp,\n              key\n            };\n          }\n          return element.elementWithKey;\n        }),\n        schema: schema,\n        onChange: memoized.onChange\n      };\n      for (const key of unusedKeys) {\n        memoized.inner.delete(key);\n      }\n      return props;\n    },\n    conditional(schema, value, memoized, path, getInnerProp) {\n      const props = {\n        discriminant: value.discriminant,\n        onChange: memoized.onChange,\n        value: getInnerProp(schema.values[value.discriminant.toString()], value.value, memoized.onChangeForValue, 'value'),\n        schema: schema\n      };\n      return props;\n    }\n  };\n  function getPreviewPropsForProp(schema, value, memoedThing, path, getInnerProp) {\n    return previewPropsFactories[schema.kind](schema, value, memoedThing, path, getInnerProp);\n  }\n  function getInitialMemoState(schema, value, stateUpdater, path) {\n    const innerState = new Map();\n    const memoizedInfo = memoizedInfoForSchema[schema.kind](schema, stateUpdater);\n    const state = {\n      value,\n      inner: innerState,\n      props: getPreviewPropsForProp(schema, value, memoizedInfo, path, (schema, value, onChange, key) => {\n        const state = getInitialMemoState(schema, value, onChange, path.concat(key));\n        innerState.set(key, state);\n        return state.props;\n      }),\n      schema: schema,\n      cached: memoizedInfo\n    };\n    return state;\n  }\n  function getUpToDateProps(schema, value, stateUpdater, memoState, path) {\n    if (memoState.schema !== schema) {\n      Object.assign(memoState, getInitialMemoState(schema, value, stateUpdater, path));\n      return memoState.props;\n    }\n    if (memoState.value === value) {\n      return memoState.props;\n    }\n    memoState.value = value;\n    const unusedKeys = new Set(memoState.inner.keys());\n    memoState.props = getPreviewPropsForProp(schema, value, memoState.cached, path, (schema, value, onChange, innerMemoStateKey) => {\n      unusedKeys.delete(innerMemoStateKey);\n      if (!memoState.inner.has(innerMemoStateKey)) {\n        const innerState = getInitialMemoState(schema, value, onChange, path.concat(innerMemoStateKey));\n        memoState.inner.set(innerMemoStateKey, innerState);\n        return innerState.props;\n      }\n      return getUpToDateProps(schema, value, onChange, memoState.inner.get(innerMemoStateKey), path.concat(innerMemoStateKey));\n    });\n    for (const key of unusedKeys) {\n      memoState.inner.delete(key);\n    }\n    return memoState.props;\n  }\n  let memoState;\n  const rootUpdater = Object.assign(cb => {\n    const newValue = cb(memoState.value);\n    const innerYMap = parsedValToYjs(rootSchema, newValue);\n    for (const [key, val] of innerYMap.entries()) {\n      innerYMap.delete(key);\n      yMap.set(key, val);\n    }\n  }, {\n    yjs() {\n      return yMap;\n    }\n  });\n  return value => {\n    if (memoState === undefined) {\n      memoState = getInitialMemoState(rootSchema, value, rootUpdater, []);\n      return memoState.props;\n    }\n    return getUpToDateProps(rootSchema, value, rootUpdater, memoState, []);\n  };\n}\n\nconst storedValSchema$2 = z.object({\n  version: z.literal(1),\n  savedAt: z.date(),\n  slug: z.string(),\n  beforeTreeKey: z.string(),\n  files: z.map(z.string(), z.instanceof(Uint8Array))\n});\nfunction ItemPageInner(props) {\n  var _getPathPrefix, _getPathPrefix2;\n  const {\n    collection,\n    config,\n    itemSlug,\n    updateResult,\n    onUpdate: parentOnUpdate\n  } = props;\n  const collectionConfig = props.config.collections[collection];\n  const schema = useMemo(() => object(collectionConfig.schema), [collectionConfig.schema]);\n  const router = useRouter();\n  const baseCommit = useBaseCommit();\n  const currentBasePath = getCollectionItemPath(config, collection, itemSlug);\n  const formatInfo = getCollectionFormat(config, collection);\n  const branchInfo = useBranchInfo();\n  const [forceValidation, setForceValidation] = useState(false);\n  const previewHref = useMemo(() => {\n    return collectionConfig.previewUrl ? collectionConfig.previewUrl.replace('{slug}', props.itemSlug).replace('{branch}', branchInfo.currentBranch) : undefined;\n  }, [branchInfo.currentBranch, collectionConfig.previewUrl, props.itemSlug]);\n  const onDelete = async () => {\n    // TODO: delete multiplayer draft\n    if (await deleteItem()) {\n      router.push(`${props.basePath}/collection/${encodeURIComponent(collection)}`);\n    }\n  };\n  const slugInfo = useSlugFieldInfo(collection, itemSlug);\n  const [deleteResult, deleteItem, resetDeleteItem] = useDeleteItem({\n    initialFiles: props.initialFiles,\n    storage: config.storage,\n    basePath: currentBasePath\n  });\n  const onDuplicate = () => {\n    router.push(`${props.basePath}/collection/${encodeURIComponent(collection)}/create?duplicate=${itemSlug}`);\n  };\n  const isSavingDisabled = updateResult.kind === 'loading' || !props.hasChanged;\n  const onUpdate = useCallback(async () => {\n    if (isSavingDisabled) return false;\n    if (!clientSideValidateProp(schema, props.state, slugInfo)) {\n      setForceValidation(true);\n      return false;\n    }\n    const slug = getSlugFromState(collectionConfig, props.state);\n    const hasUpdated = await parentOnUpdate();\n    if (hasUpdated && slug !== itemSlug) {\n      router.replace(`${props.basePath}/collection/${encodeURIComponent(collection)}/item/${encodeURIComponent(slug)}`);\n    }\n    return hasUpdated;\n  }, [collection, collectionConfig, isSavingDisabled, itemSlug, parentOnUpdate, props.basePath, props.state, router, schema, slugInfo]);\n  const viewHref = config.storage.kind !== 'local' ? `${getRepoUrl(branchInfo)}${formatInfo.dataLocation === 'index' ? `/tree/${branchInfo.currentBranch}/${(_getPathPrefix = getPathPrefix(config.storage)) !== null && _getPathPrefix !== void 0 ? _getPathPrefix : ''}${currentBasePath}` : `/blob/${branchInfo.currentBranch}/${(_getPathPrefix2 = getPathPrefix(config.storage)) !== null && _getPathPrefix2 !== void 0 ? _getPathPrefix2 : ''}${currentBasePath}${getDataFileExtension(formatInfo)}`}` : undefined;\n  const formID = 'item-edit-form';\n\n  // allow shortcuts \"cmd+s\" and \"ctrl+s\" to save\n  useEffect(() => {\n    const listener = event => {\n      if (updateResult.kind === 'loading') {\n        return;\n      }\n      if (isHotkey('mod+s', event)) {\n        event.preventDefault();\n        onUpdate();\n      }\n    };\n    document.addEventListener('keydown', listener);\n    return () => document.removeEventListener('keydown', listener);\n  }, [updateResult.kind, onUpdate]);\n  return /*#__PURE__*/jsx(Fragment, {\n    children: /*#__PURE__*/jsxs(ItemPageShell, {\n      headerActions: /*#__PURE__*/jsx(HeaderActions, {\n        formID: formID,\n        isLoading: updateResult.kind === 'loading',\n        hasChanged: props.hasChanged,\n        onDelete: onDelete,\n        onDuplicate: onDuplicate,\n        onReset: props.onReset,\n        viewHref: viewHref,\n        previewHref: previewHref\n      }),\n      ...props,\n      children: [updateResult.kind === 'error' && /*#__PURE__*/jsx(Notice, {\n        tone: \"critical\",\n        children: updateResult.error.message\n      }), deleteResult.kind === 'error' && /*#__PURE__*/jsx(Notice, {\n        tone: \"critical\",\n        children: deleteResult.error.message\n      }), /*#__PURE__*/jsx(Box, {\n        id: formID,\n        height: \"100%\",\n        minHeight: 0,\n        minWidth: 0,\n        elementType: \"form\",\n        onSubmit: event => {\n          if (event.target !== event.currentTarget) return;\n          event.preventDefault();\n          onUpdate();\n        },\n        children: /*#__PURE__*/jsx(FormForEntry, {\n          previewProps: props.previewProps,\n          forceValidation: forceValidation,\n          entryLayout: collectionConfig.entryLayout,\n          formatInfo: formatInfo,\n          slugField: slugInfo\n        })\n      }), /*#__PURE__*/jsx(DialogContainer\n      // ideally this would be a popover on desktop but using a DialogTrigger wouldn't work since\n      // this doesn't open on click but after doing a network request and it failing and manually wiring about a popover and modal would be a pain\n      , {\n        onDismiss: props.onResetUpdateItem,\n        children: updateResult.kind === 'needs-new-branch' && /*#__PURE__*/jsx(CreateBranchDuringUpdateDialog, {\n          branchOid: baseCommit,\n          onCreate: async newBranch => {\n            const itemBasePath = `/keystatic/branch/${encodeURIComponent(newBranch)}/collection/${encodeURIComponent(collection)}/item/`;\n            router.push(itemBasePath + encodeURIComponent(itemSlug));\n            const slug = getSlugFromState(collectionConfig, props.state);\n            const hasUpdated = await parentOnUpdate({\n              branch: newBranch,\n              sha: baseCommit\n            });\n            if (hasUpdated && slug !== itemSlug) {\n              router.replace(itemBasePath + encodeURIComponent(slug));\n            }\n          },\n          reason: updateResult.reason,\n          onDismiss: props.onResetUpdateItem\n        })\n      }), /*#__PURE__*/jsx(DialogContainer\n      // ideally this would be a popover on desktop but using a DialogTrigger\n      // wouldn't work since this doesn't open on click but after doing a\n      // network request and it failing and manually wiring about a popover\n      // and modal would be a pain\n      , {\n        onDismiss: props.onResetUpdateItem,\n        children: updateResult.kind === 'needs-fork' && isGitHubConfig(props.config) && /*#__PURE__*/jsx(ForkRepoDialog, {\n          onCreate: async () => {\n            const slug = getSlugFromState(collectionConfig, props.state);\n            const hasUpdated = await props.onUpdate();\n            if (hasUpdated && slug !== itemSlug) {\n              router.replace(`${props.basePath}/collection/${encodeURIComponent(collection)}/item/${encodeURIComponent(slug)}`);\n            }\n          },\n          onDismiss: props.onResetUpdateItem,\n          config: props.config\n        })\n      }), /*#__PURE__*/jsx(DialogContainer\n      // ideally this would be a popover on desktop but using a DialogTrigger\n      // wouldn't work since this doesn't open on click but after doing a\n      // network request and it failing and manually wiring about a popover\n      // and modal would be a pain\n      , {\n        onDismiss: resetDeleteItem,\n        children: deleteResult.kind === 'needs-fork' && isGitHubConfig(props.config) && /*#__PURE__*/jsx(ForkRepoDialog, {\n          onCreate: async () => {\n            await deleteItem();\n            router.push(`${props.basePath}/collection/${encodeURIComponent(collection)}`);\n          },\n          onDismiss: resetDeleteItem,\n          config: props.config\n        })\n      })]\n    })\n  });\n}\nfunction LocalItemPage(props) {\n  var _draft$state;\n  const {\n    collection,\n    config,\n    initialFiles,\n    initialState,\n    localTreeKey,\n    draft\n  } = props;\n  const collectionConfig = config.collections[collection];\n  const schema = useMemo(() => object(collectionConfig.schema), [collectionConfig.schema]);\n  const [{\n    state,\n    localTreeKey: localTreeKeyInState\n  }, setState] = useState({\n    state: (_draft$state = draft === null || draft === void 0 ? void 0 : draft.state) !== null && _draft$state !== void 0 ? _draft$state : initialState,\n    localTreeKey\n  });\n  useEffect(() => {\n    if (draft && state === draft.state) {\n      showDraftRestoredToast(draft.savedAt, localTreeKey !== draft.treeKey);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [draft]);\n  if (localTreeKeyInState !== localTreeKey) {\n    setState({\n      state: initialState,\n      localTreeKey\n    });\n  }\n  const previewProps = useMemo(() => createGetPreviewProps(schema, stateUpdater => {\n    setState(state => ({\n      localTreeKey: state.localTreeKey,\n      state: stateUpdater(state.state)\n    }));\n  }, () => undefined), [schema])(state);\n  const hasChanged = useHasChanged({\n    initialState,\n    schema,\n    state,\n    slugField: collectionConfig.slugField\n  });\n  const slug = getSlugFromState(collectionConfig, state);\n  const formatInfo = getCollectionFormat(config, collection);\n  const futureBasePath = getCollectionItemPath(config, collection, slug);\n  const [updateResult, _update, resetUpdateItem] = useUpsertItem({\n    state,\n    initialFiles,\n    config,\n    schema: collectionConfig.schema,\n    basePath: futureBasePath,\n    format: formatInfo,\n    currentLocalTreeKey: localTreeKey,\n    slug: {\n      field: collectionConfig.slugField,\n      value: slug\n    }\n  });\n  useEffect(() => {\n    const key = ['collection', collection, props.itemSlug];\n    if (hasChanged) {\n      const serialized = serializeEntryToFiles({\n        basePath: futureBasePath,\n        config,\n        format: getCollectionFormat(config, collection),\n        schema: collectionConfig.schema,\n        slug: {\n          field: collectionConfig.slugField,\n          value: slug\n        },\n        state\n      });\n      const files = new Map(serialized.map(x => [x.path, x.contents]));\n      const data = {\n        beforeTreeKey: localTreeKey,\n        slug,\n        files,\n        savedAt: new Date(),\n        version: 1\n      };\n      setDraft(key, data);\n    } else {\n      delDraft(key);\n    }\n  }, [collection, collectionConfig, config, futureBasePath, localTreeKey, props.itemSlug, slug, state, hasChanged]);\n  const update = useEventCallback(_update);\n  const onReset = () => {\n    setState({\n      state: initialState,\n      localTreeKey\n    });\n  };\n  return /*#__PURE__*/jsx(ItemPageInner, {\n    ...props,\n    onUpdate: update,\n    onReset: onReset,\n    updateResult: updateResult,\n    onResetUpdateItem: resetUpdateItem,\n    previewProps: previewProps,\n    state: state,\n    hasChanged: hasChanged\n  });\n}\nfunction CollabItemPage(props) {\n  const {\n    collection,\n    config,\n    initialFiles,\n    initialState,\n    localTreeKey\n  } = props;\n  const collectionConfig = config.collections[collection];\n  const schema = useMemo(() => object(collectionConfig.schema), [collectionConfig.schema]);\n  const yjsInfo = useYjs();\n  const state = useYJsValue(schema, props.map);\n  const previewProps = useMemo(() => createGetPreviewPropsFromY(schema, props.map, yjsInfo.awareness), [props.map, schema, yjsInfo.awareness])(state);\n  const slug = getSlugFromState(collectionConfig, state);\n  const formatInfo = getCollectionFormat(props.config, props.collection);\n  const hasChanged = useHasChanged({\n    initialState,\n    schema,\n    state,\n    slugField: collectionConfig.slugField\n  });\n  const futureBasePath = getCollectionItemPath(config, collection, slug);\n  const [updateResult, _update, resetUpdateItem] = useUpsertItem({\n    state,\n    initialFiles,\n    config,\n    schema: collectionConfig.schema,\n    basePath: futureBasePath,\n    format: formatInfo,\n    currentLocalTreeKey: localTreeKey,\n    slug: {\n      field: collectionConfig.slugField,\n      value: slug\n    }\n  });\n  const update = useEventCallback(_update);\n  const onReset = () => {\n    props.map.doc.transact(() => {\n      for (const [key, value] of Object.entries(collectionConfig.schema)) {\n        const val = getYjsValFromParsedValue(value, props.initialState[key]);\n        props.map.set(key, val);\n      }\n    });\n  };\n  return /*#__PURE__*/jsx(ItemPageInner, {\n    ...props,\n    onUpdate: update,\n    onReset: onReset,\n    updateResult: updateResult,\n    onResetUpdateItem: resetUpdateItem,\n    previewProps: previewProps,\n    state: state,\n    hasChanged: hasChanged\n  });\n}\nfunction HeaderActions(props) {\n  let {\n    formID,\n    hasChanged,\n    isLoading,\n    onDelete,\n    onDuplicate,\n    onReset,\n    previewHref,\n    viewHref\n  } = props;\n  const isBelowTablet = useMediaQuery(breakpointQueries.below.tablet);\n  const stringFormatter = useLocalizedStringFormatter(l10nMessages);\n  const [deleteAlertIsOpen, setDeleteAlertOpen] = useState(false);\n  const [duplicateAlertIsOpen, setDuplicateAlertOpen] = useState(false);\n  const menuActions = useMemo(() => {\n    let items = [{\n      key: 'reset',\n      label: 'Reset changes',\n      // TODO: l10n\n      icon: historyIcon\n    }, {\n      key: 'delete',\n      label: 'Delete entry…',\n      // TODO: l10n\n      icon: trash2Icon\n    }, {\n      key: 'duplicate',\n      label: 'Duplicate entry…',\n      // TODO: l10n\n      icon: copyPlusIcon\n    }];\n    if (previewHref) {\n      items.push({\n        key: 'preview',\n        label: 'Preview',\n        icon: externalLinkIcon,\n        href: previewHref,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      });\n    }\n    if (viewHref) {\n      items.push({\n        key: 'view',\n        label: 'View on GitHub',\n        icon: githubIcon,\n        href: viewHref,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      });\n    }\n    return items;\n  }, [previewHref, viewHref]);\n  const indicatorElement = (() => {\n    if (isLoading) {\n      return /*#__PURE__*/jsx(ProgressCircle, {\n        \"aria-label\": \"Saving changes\",\n        isIndeterminate: true,\n        size: \"small\",\n        alignSelf: \"center\"\n      });\n    }\n    if (hasChanged) {\n      return isBelowTablet ? /*#__PURE__*/jsx(Box, {\n        backgroundColor: \"pendingEmphasis\",\n        height: \"scale.75\",\n        width: \"scale.75\",\n        borderRadius: \"full\",\n        children: /*#__PURE__*/jsx(Text, {\n          visuallyHidden: true,\n          children: \"Unsaved\"\n        })\n      }) : /*#__PURE__*/jsx(Badge, {\n        tone: \"pending\",\n        children: \"Unsaved\"\n      });\n    }\n    return null;\n  })();\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [indicatorElement, /*#__PURE__*/jsx(ActionGroup, {\n      buttonLabelBehavior: \"hide\",\n      overflowMode: \"collapse\",\n      prominence: \"low\",\n      density: \"compact\",\n      maxWidth: isBelowTablet ? 'element.regular' : undefined // force switch to action menu on small devices\n      ,\n      items: menuActions,\n      disabledKeys: hasChanged ? [] : ['reset'],\n      onAction: key => {\n        switch (key) {\n          case 'reset':\n            onReset();\n            break;\n          case 'delete':\n            setDeleteAlertOpen(true);\n            break;\n          case 'duplicate':\n            if (hasChanged) {\n              setDuplicateAlertOpen(true);\n            } else {\n              onDuplicate();\n            }\n            break;\n        }\n      },\n      children: item => /*#__PURE__*/jsxs(Item, {\n        textValue: item.label,\n        href: item.href,\n        target: item.target,\n        rel: item.rel,\n        children: [/*#__PURE__*/jsx(Icon, {\n          src: item.icon\n        }), /*#__PURE__*/jsx(Text, {\n          children: item.label\n        })]\n      }, item.key)\n    }), /*#__PURE__*/jsx(Button, {\n      form: formID,\n      isDisabled: isLoading,\n      prominence: \"high\",\n      type: \"submit\",\n      children: stringFormatter.format('save')\n    }), /*#__PURE__*/jsx(DialogContainer, {\n      onDismiss: () => setDeleteAlertOpen(false),\n      children: deleteAlertIsOpen && /*#__PURE__*/jsx(AlertDialog, {\n        title: \"Delete entry\",\n        tone: \"critical\",\n        cancelLabel: \"Cancel\",\n        primaryActionLabel: \"Yes, delete\",\n        autoFocusButton: \"cancel\",\n        onPrimaryAction: onDelete,\n        children: \"Are you sure? This action cannot be undone.\"\n      })\n    }), /*#__PURE__*/jsx(DialogContainer, {\n      onDismiss: () => setDuplicateAlertOpen(false),\n      children: duplicateAlertIsOpen && /*#__PURE__*/jsx(AlertDialog, {\n        title: \"Save and duplicate entry\",\n        tone: \"neutral\",\n        cancelLabel: \"Cancel\",\n        primaryActionLabel: \"Save and duplicate\",\n        autoFocusButton: \"primary\",\n        onPrimaryAction: onDuplicate,\n        children: \"You have unsaved changes. Save this entry to duplicate it.\"\n      })\n    })]\n  });\n}\nfunction CreateBranchDuringUpdateDialog(props) {\n  var _data$createRef;\n  const stringFormatter = useLocalizedStringFormatter(l10nMessages);\n  const repositoryId = useRepositoryId();\n  const [branchName, setBranchName] = useState('');\n  const [{\n    error,\n    fetching,\n    data\n  }, createBranch] = useCreateBranchMutation();\n  const isLoading = fetching || !!(data !== null && data !== void 0 && (_data$createRef = data.createRef) !== null && _data$createRef !== void 0 && _data$createRef.__typename);\n  const config = useConfig();\n  const branchPrefix = getBranchPrefix(config);\n  const propsForBranchPrefix = branchPrefix ? {\n    UNSAFE_className: css({\n      '& input': {\n        paddingInlineStart: tokenSchema.size.space.xsmall\n      }\n    }),\n    startElement: /*#__PURE__*/jsx(Flex, {\n      alignItems: \"center\",\n      paddingStart: \"regular\",\n      justifyContent: \"center\",\n      pointerEvents: \"none\",\n      children: /*#__PURE__*/jsx(Text, {\n        color: \"neutralSecondary\",\n        children: branchPrefix\n      })\n    })\n  } : {};\n  return /*#__PURE__*/jsx(Dialog, {\n    children: /*#__PURE__*/jsxs(\"form\", {\n      style: {\n        display: 'contents'\n      },\n      onSubmit: async event => {\n        var _result$data;\n        if (event.target !== event.currentTarget) return;\n        event.preventDefault();\n        const fullBranchName = (branchPrefix !== null && branchPrefix !== void 0 ? branchPrefix : '') + branchName;\n        const name = `refs/heads/${fullBranchName}`;\n        const result = await createBranch({\n          input: {\n            name,\n            oid: props.branchOid,\n            repositoryId\n          }\n        });\n        if ((_result$data = result.data) !== null && _result$data !== void 0 && (_result$data = _result$data.createRef) !== null && _result$data !== void 0 && _result$data.__typename) {\n          props.onCreate(fullBranchName);\n        }\n      },\n      children: [/*#__PURE__*/jsx(Heading, {\n        children: stringFormatter.format('newBranch')\n      }), /*#__PURE__*/jsx(Content, {\n        children: /*#__PURE__*/jsx(Flex, {\n          gap: \"large\",\n          direction: \"column\",\n          children: /*#__PURE__*/jsx(TextField, {\n            value: branchName,\n            onChange: setBranchName,\n            label: \"Branch name\",\n            description: props.reason,\n            autoFocus: true,\n            errorMessage: prettyErrorForCreateBranchMutation(error),\n            ...propsForBranchPrefix\n          })\n        })\n      }), /*#__PURE__*/jsxs(ButtonGroup, {\n        children: [isLoading && /*#__PURE__*/jsx(ProgressCircle, {\n          isIndeterminate: true,\n          size: \"small\",\n          \"aria-label\": \"Creating Branch\"\n        }), /*#__PURE__*/jsx(Button, {\n          isDisabled: isLoading,\n          onPress: props.onDismiss,\n          children: stringFormatter.format('cancel')\n        }), /*#__PURE__*/jsx(Button, {\n          isDisabled: isLoading,\n          prominence: \"high\",\n          type: \"submit\",\n          children: \"Create branch and save\"\n        })]\n      })]\n    })\n  });\n}\nfunction ItemPageWrapper(props) {\n  var _props$config$collect;\n  const collectionConfig = (_props$config$collect = props.config.collections) === null || _props$config$collect === void 0 ? void 0 : _props$config$collect[props.collection];\n  if (!collectionConfig) notFound();\n  const format = useMemo(() => getCollectionFormat(props.config, props.collection), [props.config, props.collection]);\n  const slugInfo = useMemo(() => {\n    return {\n      slug: props.itemSlug,\n      field: collectionConfig.slugField\n    };\n  }, [collectionConfig.slugField, props.itemSlug]);\n  const draftData = useData(useCallback(async () => {\n    const raw = await getDraft(['collection', props.collection, props.itemSlug]);\n    if (!raw) throw new Error('No draft found');\n    const stored = storedValSchema$2.parse(raw);\n    const parsed = parseEntry({\n      config: props.config,\n      dirpath: getCollectionItemPath(props.config, props.collection, stored.slug),\n      format,\n      schema: collectionConfig.schema,\n      slug: {\n        field: collectionConfig.slugField,\n        slug: stored.slug\n      }\n    }, stored.files);\n    return {\n      state: parsed.initialState,\n      savedAt: stored.savedAt,\n      treeKey: stored.beforeTreeKey\n    };\n  }, [collectionConfig, format, props.collection, props.config, props.itemSlug]));\n  const itemData = useItemData({\n    config: props.config,\n    dirpath: getCollectionItemPath(props.config, props.collection, props.itemSlug),\n    schema: collectionConfig.schema,\n    format,\n    slug: slugInfo\n  });\n  const branchInfo = useBranchInfo();\n  const key = `${branchInfo.currentBranch}/${props.collection}/item/${props.itemSlug}`;\n  const yjsInfo = useYjsIfAvailable();\n  const mapData = useData(useCallback(async () => {\n    if (!yjsInfo) return;\n    if (yjsInfo === 'loading') return LOADING;\n    await yjsInfo.doc.whenSynced;\n    if (itemData.kind !== 'loaded') return LOADING;\n    if (itemData.data === 'not-found') return;\n    let doc = yjsInfo.data.get(key);\n    if (doc instanceof Y.Doc) {\n      const promise = doc.whenLoaded;\n      doc.load();\n      await promise;\n    } else {\n      doc = new Y.Doc();\n      yjsInfo.data.set(key, doc);\n    }\n    const data = doc.getMap('data');\n    if (!data.size) {\n      const {\n        data: {\n          initialState\n        }\n      } = itemData;\n      doc.transact(() => {\n        for (const [key, value] of Object.entries(collectionConfig.schema)) {\n          const val = getYjsValFromParsedValue(value, initialState[key]);\n          data.set(key, val);\n        }\n      });\n    }\n    return data;\n  }, [collectionConfig, itemData, key, yjsInfo]));\n  if (itemData.kind === 'error') {\n    return /*#__PURE__*/jsx(ItemPageShell, {\n      ...props,\n      children: /*#__PURE__*/jsx(PageBody, {\n        children: /*#__PURE__*/jsx(Notice, {\n          tone: \"critical\",\n          children: itemData.error.message\n        })\n      })\n    });\n  }\n  if (mapData.kind === 'error') {\n    return /*#__PURE__*/jsx(ItemPageShell, {\n      ...props,\n      children: /*#__PURE__*/jsx(PageBody, {\n        children: /*#__PURE__*/jsx(Notice, {\n          tone: \"critical\",\n          children: mapData.error.message\n        })\n      })\n    });\n  }\n  if (itemData.kind === 'loading' || draftData.kind === 'loading' || mapData.kind === 'loading') {\n    return /*#__PURE__*/jsx(ItemPageShell, {\n      ...props,\n      children: /*#__PURE__*/jsx(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minHeight: \"scale.3000\",\n        children: /*#__PURE__*/jsx(ProgressCircle, {\n          \"aria-label\": \"Loading Item\",\n          isIndeterminate: true,\n          size: \"large\"\n        })\n      })\n    });\n  }\n  if (itemData.data === 'not-found') {\n    return /*#__PURE__*/jsx(ItemPageShell, {\n      ...props,\n      children: /*#__PURE__*/jsx(PageBody, {\n        children: /*#__PURE__*/jsx(Notice, {\n          tone: \"caution\",\n          children: \"Entry not found.\"\n        })\n      })\n    });\n  }\n  const loadedDraft = draftData.kind === 'loaded' ? draftData.data : undefined;\n  if (mapData.data) {\n    return /*#__PURE__*/jsx(CollabItemPage, {\n      collection: props.collection,\n      basePath: props.basePath,\n      config: props.config,\n      itemSlug: props.itemSlug,\n      initialState: itemData.data.initialState,\n      initialFiles: itemData.data.initialFiles,\n      localTreeKey: itemData.data.localTreeKey,\n      map: mapData.data\n    });\n  }\n  return /*#__PURE__*/jsx(LocalItemPage, {\n    collection: props.collection,\n    basePath: props.basePath,\n    config: props.config,\n    itemSlug: props.itemSlug,\n    initialState: itemData.data.initialState,\n    initialFiles: itemData.data.initialFiles,\n    draft: loadedDraft,\n    localTreeKey: itemData.data.localTreeKey\n  });\n}\nconst ItemPageShell = props => {\n  const router = useRouter();\n  const collectionConfig = props.config.collections[props.collection];\n  return /*#__PURE__*/jsxs(PageRoot, {\n    containerWidth: containerWidthForEntryLayout(collectionConfig),\n    children: [/*#__PURE__*/jsxs(PageHeader, {\n      children: [/*#__PURE__*/jsxs(Breadcrumbs, {\n        flex: true,\n        size: \"medium\",\n        minWidth: 0,\n        onAction: key => {\n          if (key === 'collection') {\n            router.push(`${props.basePath}/collection/${encodeURIComponent(props.collection)}`);\n          }\n        },\n        children: [/*#__PURE__*/jsx(Item, {\n          children: collectionConfig.label\n        }, \"collection\"), /*#__PURE__*/jsx(Item, {\n          children: props.itemSlug\n        }, \"item\")]\n      }), props.headerActions]\n    }), props.children]\n  });\n};\n\nfunction PresenceAvatars() {\n  const yJsInfo = useYjsIfAvailable();\n  return yJsInfo && yJsInfo !== 'loading' ? /*#__PURE__*/jsx(PresenceAvatarsInner, {\n    yjsInfo: yJsInfo\n  }) : null;\n}\nfunction PresenceAvatarsInner({\n  yjsInfo\n}) {\n  const awarenessStates = useSyncExternalStore(useCallback(onStoreChange => {\n    yjsInfo.awareness.on('change', onStoreChange);\n    return () => yjsInfo.awareness.off('change', onStoreChange);\n  }, [yjsInfo]), () => {\n    var _yjsInfo$awareness;\n    return (_yjsInfo$awareness = yjsInfo.awareness) === null || _yjsInfo$awareness === void 0 ? void 0 : _yjsInfo$awareness.getStates();\n  });\n  const seenUserIds = new Set();\n  return /*#__PURE__*/jsx(Flex, {\n    children: [...awarenessStates].map(([key, val]) => {\n      var _val$user, _val$user2;\n      if (yjsInfo.awareness.clientID === key || !val.user || seenUserIds.has(val.user.id)) {\n        return null;\n      }\n      seenUserIds.add(val.user.id);\n      return /*#__PURE__*/jsxs(TooltipTrigger, {\n        children: [/*#__PURE__*/jsx(Avatar, {\n          src: (_val$user = val.user) === null || _val$user === void 0 ? void 0 : _val$user.avatarUrl\n        }), /*#__PURE__*/jsx(Tooltip, {\n          children: (_val$user2 = val.user) === null || _val$user2 === void 0 ? void 0 : _val$user2.name\n        })]\n      }, key);\n    })\n  });\n}\n\nfunction CreateItemWrapper(props) {\n  var _props$config$collect;\n  const router = useRouter();\n  const duplicateSlug = useMemo(() => {\n    const url = new URL(router.href, 'http://localhost');\n    return url.searchParams.get('duplicate');\n  }, [router.href]);\n  const collectionConfig = (_props$config$collect = props.config.collections) === null || _props$config$collect === void 0 ? void 0 : _props$config$collect[props.collection];\n  if (!collectionConfig) notFound();\n  const format = useMemo(() => getCollectionFormat(props.config, props.collection), [props.config, props.collection]);\n  const draftData = useData(useCallback(async () => {\n    const raw = await getDraft(['collection-create', props.collection, ...(duplicateSlug ? [duplicateSlug] : [])]);\n    if (!raw) throw new Error('No draft found');\n    const stored = storedValSchema$1.parse(raw);\n    const parsed = parseEntry({\n      config: props.config,\n      dirpath: getCollectionItemPath(props.config, props.collection, stored.slug),\n      format,\n      schema: collectionConfig.schema,\n      slug: {\n        field: collectionConfig.slugField,\n        slug: stored.slug\n      }\n    }, stored.files);\n    return {\n      state: parsed.initialState,\n      savedAt: stored.savedAt\n    };\n  }, [collectionConfig, duplicateSlug, format, props.collection, props.config]));\n  const slug = useMemo(() => {\n    if (duplicateSlug) {\n      return {\n        field: collectionConfig.slugField,\n        slug: duplicateSlug\n      };\n    }\n    if (collectionConfig.template) {\n      return {\n        field: collectionConfig.slugField,\n        slug: ''\n      };\n    }\n  }, [duplicateSlug, collectionConfig]);\n  const isFromTemplate = !!duplicateSlug || !!collectionConfig.template;\n  const itemData = useItemData({\n    config: props.config,\n    dirpath: collectionConfig.template && !duplicateSlug ? collectionConfig.template : getCollectionItemPath(props.config, props.collection, duplicateSlug !== null && duplicateSlug !== void 0 ? duplicateSlug : ''),\n    schema: collectionConfig.schema,\n    format,\n    slug\n  });\n  const duplicateInitalState = isFromTemplate && itemData.kind === 'loaded' && itemData.data !== 'not-found' ? itemData.data.initialState : undefined;\n  const duplicateInitalStateWithUpdatedSlug = useMemo(() => {\n    if (duplicateInitalState) {\n      let slugFieldValue = duplicateInitalState[collectionConfig.slugField];\n      // we'll make a best effort to add something to the slug after duplicated so it's different\n      // but if it fails a user can change it before creating\n      // (e.g. potentially it's not just a text field so appending -copy might not work)\n      try {\n        const slugFieldSchema = collectionConfig.schema[collectionConfig.slugField];\n        if (slugFieldSchema.kind !== 'form' || slugFieldSchema.formKind !== 'slug') {\n          throw new Error('not slug field');\n        }\n        const serialized = slugFieldSchema.serializeWithSlug(slugFieldValue);\n        slugFieldValue = slugFieldSchema.parse(serialized.value, {\n          slug: serialized.slug ? `${serialized.slug}-copy` : ''\n        });\n      } catch {}\n      return {\n        ...duplicateInitalState,\n        [collectionConfig.slugField]: slugFieldValue\n      };\n    }\n  }, [collectionConfig.schema, collectionConfig.slugField, duplicateInitalState]);\n  const branchInfo = useBranchInfo();\n  const yjsInfo = useYjsIfAvailable();\n  const key = `${branchInfo.currentBranch}/${props.collection}/create${duplicateSlug !== null && duplicateSlug !== void 0 && duplicateSlug.length ? `?duplicate=${duplicateSlug}` : ''}`;\n  const mapData = useData(useCallback(async () => {\n    if (!yjsInfo) return;\n    if (yjsInfo === 'loading') return LOADING;\n    await yjsInfo.doc.whenSynced;\n    if (isFromTemplate && !duplicateInitalState) return LOADING;\n    let doc = yjsInfo.data.get(key);\n    if (doc instanceof Y.Doc) {\n      const promise = doc.whenLoaded;\n      doc.load();\n      await promise;\n    } else {\n      doc = new Y.Doc();\n      yjsInfo.data.set(key, doc);\n    }\n    const data = doc.getMap('data');\n    if (!data.size) {\n      doc.transact(() => {\n        for (const [key, value] of Object.entries(collectionConfig.schema)) {\n          var _duplicateInitalState;\n          const val = getYjsValFromParsedValue(value, (_duplicateInitalState = duplicateInitalState === null || duplicateInitalState === void 0 ? void 0 : duplicateInitalState[key]) !== null && _duplicateInitalState !== void 0 ? _duplicateInitalState : getInitialPropsValue(value));\n          data.set(key, val);\n        }\n      });\n    }\n    return data;\n  }, [collectionConfig, duplicateInitalState, isFromTemplate, key, yjsInfo]));\n  if (isFromTemplate && itemData.kind === 'error') {\n    return /*#__PURE__*/jsx(PageBody, {\n      children: /*#__PURE__*/jsx(Notice, {\n        tone: \"critical\",\n        children: itemData.error.message\n      })\n    });\n  }\n  if (mapData.kind === 'error') {\n    console.log(mapData.error);\n    return /*#__PURE__*/jsx(PageBody, {\n      children: /*#__PURE__*/jsx(Notice, {\n        tone: \"critical\",\n        children: mapData.error.message\n      })\n    });\n  }\n  if (isFromTemplate && itemData.kind === 'loading' || draftData.kind === 'loading' || mapData.kind === 'loading') {\n    return /*#__PURE__*/jsx(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: \"scale.3000\",\n      children: /*#__PURE__*/jsx(ProgressCircle, {\n        \"aria-label\": \"Loading Item\",\n        isIndeterminate: true,\n        size: \"large\"\n      })\n    });\n  }\n  if (isFromTemplate && itemData.kind === 'loaded' && itemData.data === 'not-found') {\n    return /*#__PURE__*/jsx(PageBody, {\n      children: /*#__PURE__*/jsx(Notice, {\n        tone: \"caution\",\n        children: \"Entry not found.\"\n      })\n    });\n  }\n  if (!mapData.data) {\n    return /*#__PURE__*/jsx(CreateItemLocal, {\n      collection: props.collection,\n      config: props.config,\n      basePath: props.basePath,\n      draft: draftData.kind === 'loaded' ? draftData.data : undefined,\n      duplicateSlug: duplicateSlug,\n      initialState: duplicateInitalStateWithUpdatedSlug\n    });\n  }\n  return /*#__PURE__*/jsx(CreateItemCollab, {\n    collection: props.collection,\n    config: props.config,\n    basePath: props.basePath,\n    duplicateSlug: duplicateSlug,\n    initialState: duplicateInitalStateWithUpdatedSlug,\n    map: mapData.data\n  });\n}\nconst storedValSchema$1 = z.object({\n  version: z.literal(1),\n  savedAt: z.date(),\n  slug: z.string(),\n  files: z.map(z.string(), z.instanceof(Uint8Array))\n});\nfunction CreateItemLocal(props) {\n  var _props$config$collect2, _props$draft$state, _props$draft;\n  const collectionConfig = (_props$config$collect2 = props.config.collections) === null || _props$config$collect2 === void 0 ? void 0 : _props$config$collect2[props.collection];\n  if (!collectionConfig) notFound();\n  const schema = useMemo(() => object(collectionConfig.schema), [collectionConfig.schema]);\n  const initialState = useMemo(() => {\n    var _props$initialState;\n    return (_props$initialState = props.initialState) !== null && _props$initialState !== void 0 ? _props$initialState : getInitialPropsValue(schema);\n  }, [props.initialState, schema]);\n  const [state, setState] = useState((_props$draft$state = (_props$draft = props.draft) === null || _props$draft === void 0 ? void 0 : _props$draft.state) !== null && _props$draft$state !== void 0 ? _props$draft$state : initialState);\n  const previewProps = useMemo(() => createGetPreviewProps(schema, setState, () => undefined), [schema])(state);\n  useEffect(() => {\n    if (props.draft && state === props.draft.state) {\n      showDraftRestoredToast(props.draft.savedAt, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.draft]);\n  const slug = getSlugFromState(collectionConfig, state);\n  const formatInfo = getCollectionFormat(props.config, props.collection);\n  const basePath = getCollectionItemPath(props.config, props.collection, slug);\n  const [createResult, _createItem, resetCreateItemState] = useUpsertItem({\n    state,\n    basePath,\n    initialFiles: undefined,\n    config: props.config,\n    schema: collectionConfig.schema,\n    format: formatInfo,\n    currentLocalTreeKey: undefined,\n    slug: {\n      field: collectionConfig.slugField,\n      value: slug\n    }\n  });\n  const createItem = useEventCallback(_createItem);\n  const hasChanged = useHasChanged({\n    initialState,\n    schema,\n    state,\n    slugField: collectionConfig.slugField\n  });\n  const hasCreated = createResult.kind === 'updated' || createResult.kind === 'loading';\n  useEffect(() => {\n    const key = ['collection-create', props.collection, ...(props.duplicateSlug ? [props.duplicateSlug] : [])];\n    if (hasChanged && !hasCreated) {\n      const serialized = serializeEntryToFiles({\n        basePath,\n        config: props.config,\n        format: formatInfo,\n        schema: collectionConfig.schema,\n        slug: {\n          field: collectionConfig.slugField,\n          value: slug\n        },\n        state\n      });\n      const files = new Map(serialized.map(x => [x.path, x.contents]));\n      const data = {\n        slug,\n        files,\n        savedAt: new Date(),\n        version: 1\n      };\n      setDraft(key, data);\n    } else {\n      delDraft(key);\n    }\n  }, [collectionConfig, slug, state, hasChanged, props.duplicateSlug, props.collection, props.config, basePath, formatInfo, hasCreated]);\n  return /*#__PURE__*/jsx(CreateItemInner, {\n    basePath: props.basePath,\n    collection: props.collection,\n    createResult: createResult,\n    createItem: createItem,\n    resetCreateItemState: resetCreateItemState,\n    state: state,\n    slug: slug,\n    previewProps: previewProps,\n    onReset: () => {\n      setState(initialState);\n    }\n  });\n}\nfunction CreateItemCollab(props) {\n  var _props$config$collect3;\n  const collectionConfig = (_props$config$collect3 = props.config.collections) === null || _props$config$collect3 === void 0 ? void 0 : _props$config$collect3[props.collection];\n  if (!collectionConfig) notFound();\n  const schema = useMemo(() => object(collectionConfig.schema), [collectionConfig.schema]);\n  const yjsInfo = useYjs();\n  const state = useYJsValue(schema, props.map);\n  const previewProps = useMemo(() => createGetPreviewPropsFromY(schema, props.map, yjsInfo.awareness), [props.map, schema, yjsInfo.awareness])(state);\n  const slug = getSlugFromState(collectionConfig, state);\n  const formatInfo = getCollectionFormat(props.config, props.collection);\n  const basePath = getCollectionItemPath(props.config, props.collection, slug);\n  const [createResult, _createItem, resetCreateItemState] = useUpsertItem({\n    state,\n    basePath,\n    initialFiles: undefined,\n    config: props.config,\n    schema: collectionConfig.schema,\n    format: formatInfo,\n    currentLocalTreeKey: undefined,\n    slug: {\n      field: collectionConfig.slugField,\n      value: slug\n    }\n  });\n  const createItem = useEventCallback(_createItem);\n  return /*#__PURE__*/jsx(CreateItemInner, {\n    basePath: props.basePath,\n    collection: props.collection,\n    createResult: createResult,\n    createItem: createItem,\n    resetCreateItemState: resetCreateItemState,\n    state: state,\n    slug: slug,\n    previewProps: previewProps,\n    onReset: () => {\n      props.map.doc.transact(() => {\n        for (const [key, value] of Object.entries(collectionConfig.schema)) {\n          var _props$initialState$k, _props$initialState2;\n          const val = getYjsValFromParsedValue(value, (_props$initialState$k = (_props$initialState2 = props.initialState) === null || _props$initialState2 === void 0 ? void 0 : _props$initialState2[key]) !== null && _props$initialState$k !== void 0 ? _props$initialState$k : getInitialPropsValue(value));\n          props.map.set(key, val);\n        }\n      });\n    }\n  });\n}\nfunction CreateItemInner(props) {\n  const stringFormatter = useLocalizedStringFormatter(l10nMessages);\n  const router = useRouter();\n  const config = useConfig();\n  const collectionConfig = config.collections[props.collection];\n  const schema = useMemo(() => object(collectionConfig.schema), [collectionConfig]);\n  const [forceValidation, setForceValidation] = useState(false);\n  const formatInfo = getCollectionFormat(config, props.collection);\n  const baseCommit = useBaseCommit();\n  let collectionPath = `${props.basePath}/collection/${encodeURIComponent(props.collection)}`;\n  const {\n    createResult\n  } = props;\n  const currentSlug = createResult.kind === 'updated' || createResult.kind === 'loading' ? props.slug : undefined;\n  const slugInfo = useSlugFieldInfo(props.collection, currentSlug);\n  const onCreate = async () => {\n    if (createResult.kind === 'loading') return;\n    if (!clientSideValidateProp(schema, props.state, slugInfo)) {\n      setForceValidation(true);\n      return;\n    }\n    if (await props.createItem()) {\n      const slug = getSlugFromState(collectionConfig, props.state);\n      router.push(`${collectionPath}/item/${encodeURIComponent(slug)}`);\n      toastQueue.positive('Entry created', {\n        timeout: 5000\n      }); // TODO: l10n\n    }\n  };\n\n  // note we're still \"loading\" when it's already been created\n  // since we're waiting to go to the item page\n  const isLoading = createResult.kind === 'loading' || createResult.kind === 'updated';\n  const formID = 'item-create-form';\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [/*#__PURE__*/jsxs(PageRoot, {\n      containerWidth: containerWidthForEntryLayout(collectionConfig),\n      children: [/*#__PURE__*/jsxs(PageHeader, {\n        children: [/*#__PURE__*/jsxs(Breadcrumbs, {\n          size: \"medium\",\n          flex: true,\n          minWidth: 0,\n          onAction: key => {\n            if (key === 'collection') {\n              router.push(collectionPath);\n            }\n          },\n          children: [/*#__PURE__*/jsx(Item, {\n            children: collectionConfig.label\n          }, \"collection\"), /*#__PURE__*/jsx(Item, {\n            children: stringFormatter.format('add')\n          }, \"current\")]\n        }), /*#__PURE__*/jsx(PresenceAvatars, {}), isLoading && /*#__PURE__*/jsx(ProgressCircle, {\n          \"aria-label\": \"Creating entry\",\n          isIndeterminate: true,\n          size: \"small\"\n        }), /*#__PURE__*/jsxs(TooltipTrigger, {\n          children: [/*#__PURE__*/jsx(Button, {\n            prominence: \"low\",\n            \"aria-label\": \"Reset\",\n            onPress: () => {\n              props.onReset();\n              setForceValidation(false);\n            },\n            children: /*#__PURE__*/jsx(Icon, {\n              src: historyIcon\n            })\n          }), /*#__PURE__*/jsx(Tooltip, {\n            children: \"Reset\"\n          })]\n        }), /*#__PURE__*/jsx(Button, {\n          isDisabled: isLoading,\n          prominence: \"high\",\n          type: \"submit\",\n          form: formID,\n          marginStart: \"auto\",\n          children: stringFormatter.format('create')\n        })]\n      }), /*#__PURE__*/jsxs(Flex, {\n        id: formID,\n        elementType: \"form\",\n        onSubmit: event => {\n          if (event.target !== event.currentTarget) return;\n          event.preventDefault();\n          onCreate();\n        },\n        direction: \"column\",\n        gap: \"xxlarge\",\n        height: \"100%\",\n        minHeight: 0,\n        minWidth: 0,\n        children: [createResult.kind === 'error' && /*#__PURE__*/jsx(Notice, {\n          tone: \"critical\",\n          children: createResult.error.message\n        }), /*#__PURE__*/jsx(FormForEntry, {\n          previewProps: props.previewProps,\n          forceValidation: forceValidation,\n          entryLayout: collectionConfig.entryLayout,\n          formatInfo: formatInfo,\n          slugField: slugInfo\n        })]\n      })]\n    }), /*#__PURE__*/jsx(DialogContainer\n    // ideally this would be a popover on desktop but using a DialogTrigger\n    // wouldn't work since this doesn't open on click but after doing a\n    // network request and it failing and manually wiring about a popover\n    // and modal would be a pain\n    , {\n      onDismiss: props.resetCreateItemState,\n      children: createResult.kind === 'needs-new-branch' && /*#__PURE__*/jsx(CreateBranchDuringUpdateDialog, {\n        branchOid: baseCommit,\n        onCreate: async newBranch => {\n          router.push(`/keystatic/branch/${encodeURIComponent(newBranch)}/collection/${encodeURIComponent(props.collection)}/create`);\n          if (await props.createItem({\n            branch: newBranch,\n            sha: baseCommit\n          })) {\n            const slug = getSlugFromState(collectionConfig, props.state);\n            router.push(`/keystatic/branch/${encodeURIComponent(newBranch)}/collection/${encodeURIComponent(props.collection)}/item/${encodeURIComponent(slug)}`);\n          }\n        },\n        reason: createResult.reason,\n        onDismiss: props.resetCreateItemState\n      })\n    }), /*#__PURE__*/jsx(DialogContainer\n    // ideally this would be a popover on desktop but using a DialogTrigger\n    // wouldn't work since this doesn't open on click but after doing a\n    // network request and it failing and manually wiring about a popover\n    // and modal would be a pain\n    , {\n      onDismiss: props.resetCreateItemState,\n      children: createResult.kind === 'needs-fork' && isGitHubConfig(config) && /*#__PURE__*/jsx(ForkRepoDialog, {\n        onCreate: async () => {\n          if (await props.createItem()) {\n            const slug = getSlugFromState(collectionConfig, props.state);\n            router.push(`${collectionPath}/item/${encodeURIComponent(slug)}`);\n          }\n        },\n        onDismiss: props.resetCreateItemState,\n        config: config\n      })\n    })]\n  });\n}\n\nconst DashboardSection = ({\n  children,\n  title\n}) => {\n  return /*#__PURE__*/jsxs(Flex, {\n    elementType: \"section\",\n    direction: \"column\",\n    gap: \"medium\",\n    children: [/*#__PURE__*/jsx(Text, {\n      casing: \"uppercase\",\n      color: \"neutralTertiary\",\n      size: \"small\",\n      weight: \"bold\",\n      elementType: \"h2\",\n      children: title\n    }), children]\n  });\n};\nconst FILL_COLS = 'fill';\nconst DashboardGrid = props => {\n  return /*#__PURE__*/jsx(\"div\", {\n    className: css({\n      display: 'grid',\n      gap: tokenSchema.size.space.large,\n      gridAutoRows: tokenSchema.size.element.xlarge,\n      gridTemplateColumns: `[${FILL_COLS}-start] 1fr [${FILL_COLS}-end]`,\n      [containerQueries.above.mobile]: {\n        gridTemplateColumns: `[${FILL_COLS}-start] 1fr 1fr [${FILL_COLS}-end]`\n      },\n      [containerQueries.above.tablet]: {\n        gridTemplateColumns: `[${FILL_COLS}-start] 1fr 1fr 1fr [${FILL_COLS}-end]`\n      }\n    }),\n    ...props\n  });\n};\nconst DashboardCard = props => {\n  const ref = useRef(null);\n  const {\n    linkProps\n  } = useLink(props, ref);\n  return /*#__PURE__*/jsxs(Flex, {\n    alignItems: \"center\",\n    backgroundColor: \"canvas\",\n    padding: \"large\",\n    position: \"relative\",\n    children: [/*#__PURE__*/jsxs(Flex, {\n      direction: \"column\",\n      gap: \"medium\",\n      flex: true,\n      children: [/*#__PURE__*/jsx(Heading, {\n        elementType: \"h3\",\n        size: \"small\",\n        truncate: true,\n        children: /*#__PURE__*/jsx(\"a\", {\n          ref: ref,\n          href: props.href,\n          ...linkProps,\n          className: classNames(css({\n            color: tokenSchema.color.foreground.neutral,\n            outline: 'none',\n            '&:hover': {\n              color: tokenSchema.color.foreground.neutralEmphasis,\n              '::before': {\n                backgroundColor: tokenSchema.color.alias.backgroundIdle,\n                borderColor: tokenSchema.color.border.neutral\n              }\n            },\n            '&:active': {\n              '::before': {\n                backgroundColor: tokenSchema.color.alias.backgroundHovered,\n                borderColor: tokenSchema.color.alias.borderHovered\n              }\n            },\n            '&:focus-visible::before': {\n              outline: `${tokenSchema.size.alias.focusRing} solid ${tokenSchema.color.alias.focusRing}`,\n              outlineOffset: tokenSchema.size.alias.focusRingGap\n            },\n            // fill the available space so that the card is clickable\n            '::before': {\n              border: `${tokenSchema.size.border.regular} solid ${tokenSchema.color.border.muted}`,\n              borderRadius: tokenSchema.size.radius.medium,\n              content: '\"\"',\n              position: 'absolute',\n              inset: 0,\n              transition: transition(['background-color', 'border-color'])\n            }\n          })),\n          children: props.label\n        })\n      }), props.children]\n    }), props.endElement]\n  });\n};\n\nfunction useLocalizedString() {\n  let stringFormatter = useLocalizedStringFormatter(l10nMessages);\n  return stringFormatter;\n}\n\nfunction BranchSection(props) {\n  let branchInfo = useBranchInfo();\n  let router = useRouter();\n  let localizedString = useLocalizedString();\n  if (isLocalConfig(props.config)) {\n    return null;\n  }\n  let repoURL = getRepoUrl(branchInfo);\n  let isDefaultBranch = branchInfo.currentBranch === branchInfo.defaultBranch;\n  return /*#__PURE__*/jsxs(DashboardSection, {\n    title: localizedString.format('currentBranch'),\n    children: [/*#__PURE__*/jsxs(Flex, {\n      alignItems: \"center\",\n      gap: \"regular\",\n      border: \"muted\",\n      borderRadius: \"medium\",\n      backgroundColor: \"canvas\",\n      padding: \"large\",\n      children: [/*#__PURE__*/jsx(Icon, {\n        src: gitBranchIcon,\n        color: \"neutralTertiary\"\n      }), /*#__PURE__*/jsx(Text, {\n        size: \"medium\",\n        weight: \"semibold\",\n        children: branchInfo.currentBranch\n      })]\n    }), /*#__PURE__*/jsxs(Flex, {\n      gap: \"regular\",\n      wrap: true,\n      children: [/*#__PURE__*/jsxs(DialogTrigger, {\n        children: [/*#__PURE__*/jsxs(ActionButton, {\n          children: [/*#__PURE__*/jsx(Icon, {\n            src: gitBranchPlusIcon\n          }), /*#__PURE__*/jsx(Text, {\n            children: localizedString.format('newBranch')\n          })]\n        }), close => /*#__PURE__*/jsx(CreateBranchDialog, {\n          onDismiss: close,\n          onCreate: branchName => {\n            close();\n            router.push(router.href.replace(/\\/branch\\/[^/]+/, '/branch/' + encodeURIComponent(branchName)));\n          }\n        })]\n      }), !isDefaultBranch && (branchInfo.pullRequestNumber === undefined ? /*#__PURE__*/jsxs(ActionButton, {\n        href: `${repoURL}/pull/new/${branchInfo.currentBranch}`,\n        target: \"_blank\",\n        children: [/*#__PURE__*/jsx(Icon, {\n          src: gitPullRequestIcon\n        }), /*#__PURE__*/jsx(Text, {\n          children: localizedString.format('createPullRequest')\n        })]\n      }) : /*#__PURE__*/jsxs(ActionButton, {\n        href: `${repoURL}/pull/${branchInfo.pullRequestNumber}`,\n        target: \"_blank\",\n        children: [/*#__PURE__*/jsx(Icon, {\n          src: gitPullRequestIcon\n        }), /*#__PURE__*/jsxs(Text, {\n          children: [\"Pull request #\", branchInfo.pullRequestNumber]\n        })]\n      }))]\n    })]\n  });\n}\n\nfunction DashboardCards() {\n  const navItems = useNavItems();\n  const hasSections = navItems.some(item => 'children' in item);\n  const items = navItems.map(item => renderItemOrGroup(item));\n  return hasSections ? /*#__PURE__*/jsx(Fragment, {\n    children: items\n  }) : /*#__PURE__*/jsx(DashboardSection, {\n    title: \"Content\",\n    children: /*#__PURE__*/jsx(DashboardGrid, {\n      children: items\n    })\n  });\n}\nlet dividerCount = 0;\nfunction renderItemOrGroup(itemOrGroup) {\n  if ('isDivider' in itemOrGroup) {\n    return /*#__PURE__*/jsx(Flex, {\n      gridColumn: FILL_COLS,\n      children: /*#__PURE__*/jsx(Divider, {\n        alignSelf: \"center\",\n        size: \"medium\",\n        width: \"alias.singleLineWidth\"\n      })\n    }, dividerCount++);\n  }\n  if ('children' in itemOrGroup) {\n    return /*#__PURE__*/jsx(DashboardSection, {\n      title: itemOrGroup.title,\n      children: /*#__PURE__*/jsx(DashboardGrid, {\n        children: itemOrGroup.children.map(child => renderItemOrGroup(child))\n      })\n    }, itemOrGroup.title);\n  }\n  let changeElement = (() => {\n    if (!itemOrGroup.changed) {\n      return undefined;\n    }\n    return typeof itemOrGroup.changed === 'number' ? /*#__PURE__*/jsx(Badge, {\n      tone: \"accent\",\n      marginStart: \"auto\",\n      children: pluralize(itemOrGroup.changed, {\n        singular: 'change',\n        plural: 'changes'\n      })\n    }) : /*#__PURE__*/jsx(Badge, {\n      tone: \"accent\",\n      children: \"Changed\"\n    });\n  })();\n  let endElement = (() => {\n    // entry counts are only available for collections\n    if (typeof itemOrGroup.entryCount !== 'number') {\n      return changeElement;\n    }\n    return /*#__PURE__*/jsxs(Flex, {\n      gap: \"medium\",\n      alignItems: \"center\",\n      children: [changeElement, /*#__PURE__*/jsx(ActionButton, {\n        \"aria-label\": \"Add\",\n        href: `${itemOrGroup.href}/create`,\n        children: /*#__PURE__*/jsx(Icon, {\n          src: plusIcon\n        })\n      })]\n    });\n  })();\n  return /*#__PURE__*/jsx(DashboardCard, {\n    label: itemOrGroup.label,\n    href: itemOrGroup.href,\n    endElement: endElement,\n    children: typeof itemOrGroup.entryCount === 'number' ? /*#__PURE__*/jsx(Text, {\n      color: \"neutralSecondary\",\n      children: pluralize(itemOrGroup.entryCount, {\n        singular: 'entry',\n        plural: 'entries'\n      })\n    }) : null\n  }, itemOrGroup.key);\n}\n\nfunction DashboardPage(props) {\n  var _viewer$name;\n  const stringFormatter = useLocalizedStringFormatter(l10nMessages);\n  const viewer = useViewer();\n  const cloudInfo = useCloudInfo();\n  const user = viewer ? {\n    name: (_viewer$name = viewer.name) !== null && _viewer$name !== void 0 ? _viewer$name : viewer.login,\n    avatarUrl: viewer.avatarUrl\n  } : cloudInfo === null || cloudInfo === void 0 ? void 0 : cloudInfo.user;\n  return /*#__PURE__*/jsxs(PageRoot, {\n    containerWidth: \"large\",\n    children: [/*#__PURE__*/jsx(PageHeader, {\n      children: /*#__PURE__*/jsx(Heading, {\n        elementType: \"h1\",\n        id: \"page-title\",\n        size: \"small\",\n        children: stringFormatter.format('dashboard')\n      })\n    }), /*#__PURE__*/jsx(PageBody, {\n      isScrollable: true,\n      children: /*#__PURE__*/jsxs(Flex, {\n        direction: \"column\",\n        gap: \"xxlarge\",\n        children: [user && /*#__PURE__*/jsx(UserInfo, {\n          user: user,\n          manageAccount: !!cloudInfo\n        }), /*#__PURE__*/jsx(BranchSection, {\n          config: props.config\n        }), /*#__PURE__*/jsx(DashboardCards, {})]\n      })\n    })]\n  });\n}\nfunction UserInfo({\n  user,\n  manageAccount\n}) {\n  return /*#__PURE__*/jsxs(Flex, {\n    alignItems: \"center\",\n    gap: \"medium\",\n    isHidden: {\n      below: 'tablet'\n    },\n    children: [/*#__PURE__*/jsx(Avatar, {\n      src: user.avatarUrl,\n      name: user.name,\n      size: \"large\"\n    }), /*#__PURE__*/jsxs(VStack, {\n      gap: \"medium\",\n      children: [/*#__PURE__*/jsxs(Heading, {\n        size: \"medium\",\n        elementType: \"p\",\n        UNSAFE_style: {\n          fontWeight: tokenSchema.typography.fontWeight.bold\n        },\n        children: [\"Hello, \", user.name, \"!\"]\n      }), manageAccount && /*#__PURE__*/jsx(TextLink, {\n        href: \"https://keystatic.cloud/account\",\n        children: \"Manage Account\"\n      })]\n    })]\n  });\n}\n\nconst MainPanelLayout = props => {\n  let isBelowDesktop = useMediaQuery(breakpointQueries.below.desktop);\n  let sidebarState = useSidebar();\n  let ref = useRef(null);\n  let context = useContentPanelState(ref);\n  return /*#__PURE__*/jsx(ContentPanelProvider, {\n    value: context,\n    children: /*#__PURE__*/jsxs(SplitView, {\n      autoSaveId: \"keystatic-app-split-view\",\n      isCollapsed: isBelowDesktop || !sidebarState.isOpen,\n      onCollapseChange: sidebarState.toggle,\n      defaultSize: 260,\n      minSize: 180,\n      maxSize: 400\n      // styles\n      ,\n      height: \"100vh\",\n      children: [isBelowDesktop ? /*#__PURE__*/jsx(SidebarDialog, {}) : /*#__PURE__*/jsx(SplitPanePrimary, {\n        children: /*#__PURE__*/jsx(SidebarPanel, {})\n      }), /*#__PURE__*/jsx(SplitPaneSecondary, {\n        ref: ref,\n        children: props.children\n      })]\n    })\n  });\n};\n\nconst AppShell = props => {\n  const content = /*#__PURE__*/jsx(AppShellErrorContext.Consumer, {\n    children: error => error && !(error !== null && error !== void 0 && error.graphQLErrors.some(err => {\n      var _err$originalError;\n      return (err === null || err === void 0 || (_err$originalError = err.originalError) === null || _err$originalError === void 0 ? void 0 : _err$originalError.type) === 'NOT_FOUND';\n    })) ? /*#__PURE__*/jsx(EmptyState, {\n      icon: alertCircleIcon,\n      title: \"Failed to load shell\",\n      message: error.message\n    }) : props.children\n  });\n  const inner = /*#__PURE__*/jsx(ConfigContext.Provider, {\n    value: props.config,\n    children: /*#__PURE__*/jsx(AppStateContext.Provider, {\n      value: {\n        basePath: props.basePath\n      },\n      children: /*#__PURE__*/jsx(SidebarProvider, {\n        children: /*#__PURE__*/jsx(MainPanelLayout, {\n          children: content\n        })\n      })\n    })\n  });\n  if (isGitHubConfig(props.config) || props.config.storage.kind === 'cloud') {\n    return /*#__PURE__*/jsx(GitHubAppShellProvider, {\n      currentBranch: props.currentBranch,\n      config: props.config,\n      children: inner\n    });\n  }\n  if (isLocalConfig(props.config)) {\n    return /*#__PURE__*/jsx(LocalAppShellProvider, {\n      config: props.config,\n      children: inner\n    });\n  }\n  return null;\n};\n\nfunction SingletonPageInner(props) {\n  var _getPathPrefix, _getPathPrefix2;\n  const isBelowTablet = useMediaQuery(breakpointQueries.below.tablet);\n  const singletonConfig = props.config.singletons[props.singleton];\n  const branchInfo = useBranchInfo();\n  const [forceValidation, setForceValidation] = useState(false);\n  const schema = useMemo(() => object(singletonConfig.schema), [singletonConfig.schema]);\n  const router = useRouter();\n  const previewHref = useMemo(() => {\n    if (!singletonConfig.previewUrl) return undefined;\n    return singletonConfig.previewUrl.replace('{branch}', branchInfo.currentBranch);\n  }, [branchInfo.currentBranch, singletonConfig.previewUrl]);\n  const isGitHub = isGitHubConfig(props.config) || isCloudConfig(props.config);\n  const formatInfo = getSingletonFormat(props.config, props.singleton);\n  const singletonExists = !!props.initialState;\n  const singletonPath = getSingletonPath(props.config, props.singleton);\n  const viewHref = isGitHub && singletonExists ? `${getRepoUrl(branchInfo)}${formatInfo.dataLocation === 'index' ? `/tree/${branchInfo.currentBranch}/${(_getPathPrefix = getPathPrefix(props.config.storage)) !== null && _getPathPrefix !== void 0 ? _getPathPrefix : ''}${singletonPath}` : `/blob/${(_getPathPrefix2 = getPathPrefix(props.config.storage)) !== null && _getPathPrefix2 !== void 0 ? _getPathPrefix2 : ''}${branchInfo.currentBranch}/${singletonPath}${getDataFileExtension(formatInfo)}`}` : undefined;\n  const menuActions = useMemo(() => {\n    const actions = [{\n      key: 'reset',\n      label: 'Reset',\n      icon: historyIcon\n    }];\n    if (previewHref) {\n      actions.push({\n        key: 'preview',\n        label: 'Preview',\n        icon: externalLinkIcon,\n        href: previewHref,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      });\n    }\n    if (viewHref) {\n      actions.push({\n        key: 'view',\n        label: 'View on GitHub',\n        icon: githubIcon,\n        href: viewHref,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      });\n    }\n    return actions;\n  }, [previewHref, viewHref]);\n  const formID = 'singleton-form';\n  const baseCommit = useBaseCommit();\n  const isCreating = props.initialState === null;\n  const onCreate = async () => {\n    if (props.updateResult.kind === 'loading' || !props.hasChanged) return;\n    if (!clientSideValidateProp(schema, props.state, undefined)) {\n      setForceValidation(true);\n      return;\n    }\n    await props.onUpdate();\n  };\n  return /*#__PURE__*/jsxs(PageRoot, {\n    containerWidth: containerWidthForEntryLayout(singletonConfig),\n    children: [/*#__PURE__*/jsxs(PageHeader, {\n      children: [/*#__PURE__*/jsxs(Flex, {\n        flex: true,\n        alignItems: \"center\",\n        gap: \"regular\",\n        children: [/*#__PURE__*/jsx(Heading, {\n          elementType: \"h1\",\n          id: \"page-title\",\n          size: \"small\",\n          children: singletonConfig.label\n        }), props.updateResult.kind === 'loading' ? /*#__PURE__*/jsx(ProgressCircle, {\n          \"aria-label\": `Updating ${singletonConfig.label}`,\n          isIndeterminate: true,\n          size: \"small\",\n          alignSelf: \"center\"\n        }) : props.hasChanged && /*#__PURE__*/jsx(Badge, {\n          tone: \"pending\",\n          children: \"Unsaved\"\n        })]\n      }), /*#__PURE__*/jsx(ActionGroup, {\n        buttonLabelBehavior: \"hide\",\n        overflowMode: \"collapse\",\n        prominence: \"low\",\n        density: \"compact\",\n        maxWidth: isBelowTablet ? 'element.regular' : undefined // force switch to action menu on small devices\n        ,\n        items: menuActions,\n        disabledKeys: props.hasChanged ? [] : ['reset'],\n        onAction: key => {\n          switch (key) {\n            case 'reset':\n              props.onReset();\n              break;\n          }\n        },\n        children: item => /*#__PURE__*/jsxs(Item$1, {\n          textValue: item.label,\n          href: item.href,\n          target: item.target,\n          rel: item.rel,\n          children: [/*#__PURE__*/jsx(Icon, {\n            src: item.icon\n          }), /*#__PURE__*/jsx(Text, {\n            children: item.label\n          })]\n        }, item.key)\n      }), /*#__PURE__*/jsx(Button, {\n        form: formID,\n        isDisabled: props.updateResult.kind === 'loading',\n        prominence: \"high\",\n        type: \"submit\",\n        children: isCreating ? 'Create' : 'Save'\n      })]\n    }), /*#__PURE__*/jsxs(Flex, {\n      elementType: \"form\",\n      id: formID,\n      onSubmit: event => {\n        if (event.target !== event.currentTarget) return;\n        event.preventDefault();\n        onCreate();\n      },\n      direction: \"column\",\n      gap: \"xxlarge\",\n      height: \"100%\",\n      minHeight: 0,\n      minWidth: 0,\n      children: [props.updateResult.kind === 'error' && /*#__PURE__*/jsx(Notice, {\n        tone: \"critical\",\n        children: props.updateResult.error.message\n      }), /*#__PURE__*/jsx(FormForEntry, {\n        previewProps: props.previewProps,\n        forceValidation: forceValidation,\n        entryLayout: singletonConfig.entryLayout,\n        formatInfo: formatInfo,\n        slugField: undefined\n      }), /*#__PURE__*/jsx(DialogContainer\n      // ideally this would be a popover on desktop but using a DialogTrigger wouldn't work since\n      // this doesn't open on click but after doing a network request and it failing and manually wiring about a popover and modal would be a pain\n      , {\n        onDismiss: props.onResetUpdateItem,\n        children: props.updateResult.kind === 'needs-new-branch' && /*#__PURE__*/jsx(CreateBranchDuringUpdateDialog, {\n          branchOid: baseCommit,\n          onCreate: async newBranch => {\n            router.push(`/keystatic/branch/${encodeURIComponent(newBranch)}/singleton/${encodeURIComponent(props.singleton)}`);\n            props.onUpdate({\n              branch: newBranch,\n              sha: baseCommit\n            });\n          },\n          reason: props.updateResult.reason,\n          onDismiss: props.onResetUpdateItem\n        })\n      }), /*#__PURE__*/jsx(DialogContainer\n      // ideally this would be a popover on desktop but using a DialogTrigger\n      // wouldn't work since this doesn't open on click but after doing a\n      // network request and it failing and manually wiring about a popover\n      // and modal would be a pain\n      , {\n        onDismiss: props.onResetUpdateItem,\n        children: props.updateResult.kind === 'needs-fork' && isGitHubConfig(props.config) && /*#__PURE__*/jsx(ForkRepoDialog, {\n          onCreate: async () => {\n            props.onUpdate();\n          },\n          onDismiss: props.onResetUpdateItem,\n          config: props.config\n        })\n      })]\n    })]\n  });\n}\nfunction LocalSingletonPage(props) {\n  const {\n    singleton,\n    initialFiles,\n    initialState,\n    localTreeKey,\n    config,\n    draft\n  } = props;\n  const singletonConfig = config.singletons[singleton];\n  const schema = useMemo(() => object(singletonConfig.schema), [singletonConfig.schema]);\n  const singletonPath = getSingletonPath(config, singleton);\n  const [{\n    state,\n    localTreeKey: localTreeKeyInState\n  }, setState] = useState(() => {\n    var _draft$state;\n    return {\n      localTreeKey: localTreeKey,\n      state: (_draft$state = draft === null || draft === void 0 ? void 0 : draft.state) !== null && _draft$state !== void 0 ? _draft$state : initialState === null ? getInitialPropsValue(schema) : initialState\n    };\n  });\n  useEffect(() => {\n    if (draft && state === draft.state) {\n      showDraftRestoredToast(draft.savedAt, localTreeKey !== draft.treeKey);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [draft]);\n  if (localTreeKeyInState !== localTreeKey) {\n    setState({\n      localTreeKey: localTreeKey,\n      state: initialState === null ? getInitialPropsValue(schema) : initialState\n    });\n  }\n  const isCreating = initialState === null;\n  const hasChanged = useHasChanged({\n    initialState,\n    state,\n    schema,\n    slugField: undefined\n  }) || isCreating;\n  useEffect(() => {\n    const key = ['singleton', singleton];\n    if (hasChanged) {\n      const serialized = serializeEntryToFiles({\n        basePath: singletonPath,\n        config,\n        format: getSingletonFormat(config, singleton),\n        schema: singletonConfig.schema,\n        slug: undefined,\n        state\n      });\n      const files = new Map(serialized.map(x => [x.path, x.contents]));\n      const data = {\n        beforeTreeKey: localTreeKey,\n        files,\n        savedAt: new Date(),\n        version: 1\n      };\n      setDraft(key, data);\n    } else {\n      delDraft(key);\n    }\n  }, [config, localTreeKey, state, hasChanged, singleton, singletonPath, singletonConfig]);\n  const previewProps = useMemo(() => createGetPreviewProps(schema, stateUpdater => {\n    setState(state => ({\n      localTreeKey: state.localTreeKey,\n      state: stateUpdater(state.state)\n    }));\n  }, () => undefined), [schema])(state);\n  const formatInfo = getSingletonFormat(config, singleton);\n  const [updateResult, _update, resetUpdateItem] = useUpsertItem({\n    state,\n    initialFiles,\n    config,\n    schema: singletonConfig.schema,\n    basePath: singletonPath,\n    format: formatInfo,\n    currentLocalTreeKey: localTreeKey,\n    slug: undefined\n  });\n  const update = useEventCallback(_update);\n  const onReset = () => setState({\n    localTreeKey: localTreeKey,\n    state: initialState === null ? getInitialPropsValue(schema) : initialState\n  });\n  return /*#__PURE__*/jsx(SingletonPageInner, {\n    ...props,\n    hasChanged: hasChanged,\n    onReset: onReset,\n    onUpdate: update,\n    onResetUpdateItem: resetUpdateItem,\n    updateResult: updateResult,\n    state: state,\n    previewProps: previewProps\n  });\n}\nfunction CollabSingletonPage(props) {\n  const {\n    singleton,\n    initialFiles,\n    initialState,\n    localTreeKey,\n    config\n  } = props;\n  const singletonConfig = config.singletons[singleton];\n  const schema = useMemo(() => object(singletonConfig.schema), [singletonConfig.schema]);\n  const singletonPath = getSingletonPath(config, singleton);\n  const yjsInfo = useYjs();\n  const state = useYJsValue(schema, props.map);\n  const previewProps = useMemo(() => createGetPreviewPropsFromY(schema, props.map, yjsInfo.awareness), [props.map, schema, yjsInfo.awareness])(state);\n  const isCreating = initialState === null;\n  const hasChanged = useHasChanged({\n    initialState,\n    state,\n    schema,\n    slugField: undefined\n  }) || isCreating;\n  const formatInfo = getSingletonFormat(config, singleton);\n  const [updateResult, _update, resetUpdateItem] = useUpsertItem({\n    state,\n    initialFiles,\n    config,\n    schema: singletonConfig.schema,\n    basePath: singletonPath,\n    format: formatInfo,\n    currentLocalTreeKey: localTreeKey,\n    slug: undefined\n  });\n  const update = useEventCallback(_update);\n  const onReset = () => {\n    props.map.doc.transact(() => {\n      for (const [key, value] of Object.entries(singletonConfig.schema)) {\n        var _props$initialState$k, _props$initialState;\n        const val = getYjsValFromParsedValue(value, (_props$initialState$k = (_props$initialState = props.initialState) === null || _props$initialState === void 0 ? void 0 : _props$initialState[key]) !== null && _props$initialState$k !== void 0 ? _props$initialState$k : getInitialPropsValue(value));\n        props.map.set(key, val);\n      }\n    });\n  };\n  return /*#__PURE__*/jsx(SingletonPageInner, {\n    ...props,\n    hasChanged: hasChanged,\n    onReset: onReset,\n    onUpdate: update,\n    onResetUpdateItem: resetUpdateItem,\n    updateResult: updateResult,\n    state: state,\n    previewProps: previewProps\n  });\n}\nconst storedValSchema = z.object({\n  version: z.literal(1),\n  savedAt: z.date(),\n  beforeTreeKey: z.string().optional(),\n  files: z.map(z.string(), z.instanceof(Uint8Array))\n});\nfunction SingletonPageWrapper(props) {\n  var _props$config$singlet;\n  const singletonConfig = (_props$config$singlet = props.config.singletons) === null || _props$config$singlet === void 0 ? void 0 : _props$config$singlet[props.singleton];\n  if (!singletonConfig) notFound();\n  const header = /*#__PURE__*/jsx(PageHeader, {\n    children: /*#__PURE__*/jsx(Heading, {\n      elementType: \"h1\",\n      id: \"page-title\",\n      size: \"small\",\n      children: singletonConfig.label\n    })\n  });\n  const format = useMemo(() => getSingletonFormat(props.config, props.singleton), [props.config, props.singleton]);\n  const dirpath = getSingletonPath(props.config, props.singleton);\n  const draftData = useData(useCallback(async () => {\n    const raw = await getDraft(['singleton', props.singleton]);\n    if (!raw) throw new Error('No draft found');\n    const stored = storedValSchema.parse(raw);\n    const parsed = parseEntry({\n      config: props.config,\n      dirpath,\n      format,\n      schema: singletonConfig.schema,\n      slug: undefined\n    }, stored.files);\n    return {\n      state: parsed.initialState,\n      savedAt: stored.savedAt,\n      treeKey: stored.beforeTreeKey\n    };\n  }, [dirpath, format, props.config, props.singleton, singletonConfig.schema]));\n  const itemData = useItemData({\n    config: props.config,\n    dirpath,\n    schema: singletonConfig.schema,\n    format,\n    slug: undefined\n  });\n  const branchInfo = useBranchInfo();\n  const key = `${branchInfo.currentBranch}/${props.singleton}`;\n  const yjsInfo = useYjsIfAvailable();\n  const mapData = useData(useCallback(async () => {\n    if (!yjsInfo) return;\n    if (yjsInfo === 'loading') return LOADING;\n    await yjsInfo.doc.whenSynced;\n    if (itemData.kind !== 'loaded') return LOADING;\n    let doc = yjsInfo.data.get(key);\n    if (doc instanceof Y.Doc) {\n      const promise = doc.whenLoaded;\n      doc.load();\n      await promise;\n    } else {\n      doc = new Y.Doc();\n      yjsInfo.data.set(key, doc);\n    }\n    const data = doc.getMap('data');\n    if (!data.size) {\n      doc.transact(() => {\n        for (const [key, value] of Object.entries(singletonConfig.schema)) {\n          const val = getYjsValFromParsedValue(value, itemData.data === 'not-found' ? getInitialPropsValue(value) : itemData.data.initialState[key]);\n          data.set(key, val);\n        }\n      });\n    }\n    return data;\n  }, [singletonConfig, itemData, key, yjsInfo]));\n  if (itemData.kind === 'error') {\n    return /*#__PURE__*/jsxs(PageRoot, {\n      children: [header, /*#__PURE__*/jsx(PageBody, {\n        children: /*#__PURE__*/jsx(Notice, {\n          margin: \"xxlarge\",\n          tone: \"critical\",\n          children: itemData.error.message\n        })\n      })]\n    });\n  }\n  if (mapData.kind === 'error') {\n    return /*#__PURE__*/jsxs(PageRoot, {\n      children: [header, /*#__PURE__*/jsx(PageBody, {\n        children: /*#__PURE__*/jsx(Notice, {\n          margin: \"xxlarge\",\n          tone: \"critical\",\n          children: mapData.error.message\n        })\n      })]\n    });\n  }\n  if (itemData.kind === 'loading' || draftData.kind === 'loading' || mapData.kind === 'loading') {\n    return /*#__PURE__*/jsxs(PageRoot, {\n      children: [header, /*#__PURE__*/jsx(PageBody, {\n        children: /*#__PURE__*/jsx(Flex, {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minHeight: \"scale.3000\",\n          children: /*#__PURE__*/jsx(ProgressCircle, {\n            \"aria-label\": `Loading ${singletonConfig.label}`,\n            isIndeterminate: true,\n            size: \"large\"\n          })\n        })\n      })]\n    });\n  }\n  if (mapData.data) {\n    return /*#__PURE__*/jsx(CollabSingletonPage, {\n      singleton: props.singleton,\n      config: props.config,\n      initialState: itemData.data === 'not-found' ? null : itemData.data.initialState,\n      initialFiles: itemData.data === 'not-found' ? [] : itemData.data.initialFiles,\n      localTreeKey: itemData.data === 'not-found' ? undefined : itemData.data.localTreeKey,\n      map: mapData.data\n    });\n  }\n  return /*#__PURE__*/jsx(LocalSingletonPage, {\n    singleton: props.singleton,\n    config: props.config,\n    initialState: itemData.data === 'not-found' ? null : itemData.data.initialState,\n    initialFiles: itemData.data === 'not-found' ? [] : itemData.data.initialFiles,\n    localTreeKey: itemData.data === 'not-found' ? undefined : itemData.data.localTreeKey,\n    draft: draftData.kind === 'loaded' ? draftData.data : undefined\n  });\n}\n\nfunction CreatedGitHubApp(props) {\n  return /*#__PURE__*/jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"xxlarge\",\n    children: /*#__PURE__*/jsxs(Flex, {\n      backgroundColor: \"surface\",\n      padding: \"large\",\n      border: \"color.alias.borderIdle\",\n      borderRadius: \"medium\",\n      direction: \"column\",\n      justifyContent: \"center\",\n      gap: \"xlarge\",\n      maxWidth: \"scale.4600\",\n      children: [/*#__PURE__*/jsx(Heading, {\n        children: \"You've installed Keystatic! \\uD83C\\uDF89\"\n      }), /*#__PURE__*/jsx(Text, {\n        children: \"To start using Keystatic, you need to install the GitHub app you've created.\"\n      }), /*#__PURE__*/jsxs(Text, {\n        children: [\"Make sure to add the App to the\", ' ', /*#__PURE__*/jsx(\"code\", {\n          children: serializeRepoConfig(props.config.storage.repo)\n        }), ' ', \"repository.\"]\n      }), /*#__PURE__*/jsx(InstallGitHubApp, {\n        config: props.config\n      })]\n    })\n  });\n}\n\nfunction KeystaticSetup(props) {\n  const [deployedURL, setDeployedURL] = useState('');\n  const [organization, setOrganization] = useState('');\n  return /*#__PURE__*/jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"xxlarge\",\n    children: /*#__PURE__*/jsxs(Flex, {\n      backgroundColor: \"surface\",\n      padding: \"large\",\n      border: \"color.alias.borderIdle\",\n      borderRadius: \"medium\",\n      direction: \"column\",\n      justifyContent: \"center\",\n      gap: \"xlarge\",\n      maxWidth: \"scale.4600\",\n      elementType: \"form\",\n      action: `https://github.com${organization ? `/organizations/${organization}` : ''}/settings/apps/new`,\n      method: \"post\",\n      children: [/*#__PURE__*/jsx(Flex, {\n        justifyContent: \"center\",\n        children: /*#__PURE__*/jsx(Heading, {\n          children: \"Keystatic Setup\"\n        })\n      }), /*#__PURE__*/jsx(Text, {\n        children: \"Keystatic doesn't have the required config.\"\n      }), /*#__PURE__*/jsx(Text, {\n        children: \"If you've already created your GitHub app, make sure to add the following environment variables:\"\n      }), /*#__PURE__*/jsxs(Box, {\n        elementType: \"ul\",\n        children: [/*#__PURE__*/jsx(\"li\", {\n          children: /*#__PURE__*/jsx(\"code\", {\n            children: \"KEYSTATIC_GITHUB_CLIENT_ID\"\n          })\n        }), /*#__PURE__*/jsx(\"li\", {\n          children: /*#__PURE__*/jsx(\"code\", {\n            children: \"KEYSTATIC_GITHUB_CLIENT_SECRET\"\n          })\n        }), /*#__PURE__*/jsx(\"li\", {\n          children: /*#__PURE__*/jsx(\"code\", {\n            children: \"KEYSTATIC_SECRET\"\n          })\n        })]\n      }), /*#__PURE__*/jsx(Text, {\n        children: \"If you haven't created your GitHub app for Keystatic, you can create one below.\"\n      }), /*#__PURE__*/jsx(TextField, {\n        label: \"Deployed App URL\",\n        description: \"This should the root of your domain. If you're not sure where Keystatic will be deployed, leave this blank and you can update the GitHub app later.\",\n        value: deployedURL,\n        onChange: setDeployedURL\n      }), /*#__PURE__*/jsx(TextField, {\n        label: \"GitHub organization (if any)\",\n        description: \"You must be an owner or GitHub App manager in the organization to create the GitHub App. Leave this blank to create the app in your personal account.\",\n        value: organization,\n        onChange: setOrganization\n      }), /*#__PURE__*/jsxs(Text, {\n        children: [\"After visiting GitHub to create the GitHub app, you'll be redirected back here and secrets generated from GitHub will be written to your\", ' ', /*#__PURE__*/jsx(\"code\", {\n          children: \".env\"\n        }), \" file.\"]\n      }), /*#__PURE__*/jsx(\"input\", {\n        type: \"text\",\n        name: \"manifest\",\n        className: css({\n          display: 'none'\n        }),\n        value: JSON.stringify({\n          name: `${parseRepoConfig(props.config.storage.repo).owner} Keystatic`,\n          url: deployedURL ? `${deployedURL}/keystatic` : `${window.location.origin}/keystatic`,\n          public: true,\n          redirect_url: `${window.location.origin}/api/keystatic/github/created-app`,\n          callback_urls: [`${window.location.origin}/api/keystatic/github/oauth/callback`, `http://127.0.0.1/api/keystatic/github/oauth/callback`, ...(deployedURL ? [`${deployedURL}/api/keystatic/github/oauth/callback`] : [])],\n          request_oauth_on_install: true,\n          default_permissions: {\n            contents: 'write',\n            metadata: 'read',\n            pull_requests: 'read'\n          }\n        })\n      }), /*#__PURE__*/jsx(Button, {\n        prominence: \"high\",\n        type: \"submit\",\n        children: \"Create GitHub App\"\n      })]\n    })\n  });\n}\n\nfunction RepoNotFound(props) {\n  const repo = serializeRepoConfig(props.config.storage.repo);\n  return /*#__PURE__*/jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"xxlarge\",\n    children: /*#__PURE__*/jsxs(Flex, {\n      backgroundColor: \"surface\",\n      padding: \"large\",\n      border: \"color.alias.borderIdle\",\n      borderRadius: \"medium\",\n      direction: \"column\",\n      justifyContent: \"center\",\n      gap: \"xlarge\",\n      maxWidth: \"scale.4600\",\n      children: [/*#__PURE__*/jsx(Flex, {\n        justifyContent: \"center\",\n        children: /*#__PURE__*/jsx(Heading, {\n          children: \"Repo not found\"\n        })\n      }), /*#__PURE__*/jsxs(Text, {\n        children: [\"Keystatic is configured for the\", ' ', /*#__PURE__*/jsx(\"a\", {\n          href: `https://github.com/${repo}`,\n          children: repo\n        }), \" GitHub repo but Keystatic isn't able to access this repo. This is either because you don't have access to this repo or you haven't added the GitHub app to it.\"]\n      }), /*#__PURE__*/jsx(InstallGitHubApp, {\n        config: props.config\n      })]\n    })\n  });\n}\n\nconst storedStateSchema = z.object({\n  state: z.string(),\n  from: z.string(),\n  code_verifier: z.string()\n});\nconst tokenResponseSchema = z.object({\n  access_token: z.string(),\n  token_type: z.string(),\n  expires_in: z.number()\n});\nfunction KeystaticCloudAuthCallback({\n  config\n}) {\n  var _config$cloud2;\n  const router = useRouter();\n  const url = new URL(window.location.href);\n  const code = url.searchParams.get('code');\n  const state = url.searchParams.get('state');\n  const storedState = useMemo(() => {\n    const _storedState = localStorage.getItem('keystatic-cloud-state');\n    const storedState = storedStateSchema.safeParse((() => {\n      try {\n        return JSON.parse(_storedState || '');\n      } catch {\n        return null;\n      }\n    })());\n    return storedState;\n  }, []);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    var _config$cloud;\n    if (code && state && storedState.success && (_config$cloud = config.cloud) !== null && _config$cloud !== void 0 && _config$cloud.project) {\n      const {\n        project\n      } = config.cloud;\n      (async () => {\n        const res = await fetch(`${KEYSTATIC_CLOUD_API_URL}/oauth/token`, {\n          method: 'POST',\n          body: new URLSearchParams({\n            code,\n            client_id: project,\n            redirect_uri: `${window.location.origin}/keystatic/cloud/oauth/callback`,\n            code_verifier: storedState.data.code_verifier,\n            grant_type: 'authorization_code'\n          }).toString(),\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            ...KEYSTATIC_CLOUD_HEADERS\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`Bad response: ${res.status} ${res.statusText}\\n\\n${await res.text()}`);\n        }\n        const data = await res.json();\n        const parsed = tokenResponseSchema.parse(data);\n        localStorage.setItem('keystatic-cloud-access-token', JSON.stringify({\n          token: parsed.access_token,\n          project,\n          validUntil: Date.now() + parsed.expires_in * 1000\n        }));\n        router.push(`/keystatic/${storedState.data.from}`);\n      })().catch(error => {\n        setError(error);\n      });\n    }\n  }, [code, state, router, storedState, config]);\n  if (!((_config$cloud2 = config.cloud) !== null && _config$cloud2 !== void 0 && _config$cloud2.project)) {\n    return /*#__PURE__*/jsx(Text, {\n      children: \"Missing Keystatic Cloud config\"\n    });\n  }\n  if (!code || !state) {\n    return /*#__PURE__*/jsx(Text, {\n      children: \"Missing code or state\"\n    });\n  }\n  if (storedState.success === false || state !== storedState.data.state) {\n    return /*#__PURE__*/jsx(Text, {\n      children: \"Invalid state\"\n    });\n  }\n  if (error) {\n    return /*#__PURE__*/jsx(Text, {\n      children: error.message\n    });\n  }\n  return /*#__PURE__*/jsx(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: /*#__PURE__*/jsx(ProgressCircle, {\n      size: \"large\",\n      isIndeterminate: true,\n      \"aria-label\": \"Authenticating\"\n    })\n  });\n}\n\nfunction parseParamsWithoutBranch(params) {\n  if (params.length === 0) {\n    return {};\n  }\n  if (params.length === 2 && params[0] === 'singleton') {\n    return {\n      singleton: params[1]\n    };\n  }\n  if (params.length < 2 || params[0] !== 'collection') return null;\n  const collection = params[1];\n  if (params.length === 2) {\n    return {\n      collection\n    };\n  }\n  if (params.length === 3 && params[2] === 'create') {\n    return {\n      collection,\n      kind: 'create'\n    };\n  }\n  if (params.length === 4 && params[2] === 'item') {\n    const slug = params[3];\n    return {\n      collection,\n      kind: 'edit',\n      slug\n    };\n  }\n  return null;\n}\nfunction RedirectToBranch(props) {\n  const {\n    push\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useContext(GitHubAppShellDataContext);\n  useEffect(() => {\n    var _error$response, _data$repository, _data$repository2, _error$graphQLErrors, _error$graphQLErrors2;\n    if ((error === null || error === void 0 || (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      if (props.config.storage.kind === 'github') {\n        window.location.href = '/api/keystatic/github/login';\n      } else {\n        redirectToCloudAuth('', props.config);\n      }\n    }\n    if (data !== null && data !== void 0 && (_data$repository = data.repository) !== null && _data$repository !== void 0 && _data$repository.defaultBranchRef) {\n      push(`/keystatic/branch/${encodeURIComponent(data.repository.defaultBranchRef.name)}`);\n    }\n    if (props.config.storage.kind === 'github' && !(data !== null && data !== void 0 && (_data$repository2 = data.repository) !== null && _data$repository2 !== void 0 && _data$repository2.id) && (error === null || error === void 0 || (_error$graphQLErrors = error.graphQLErrors) === null || _error$graphQLErrors === void 0 || (_error$graphQLErrors = _error$graphQLErrors[0]) === null || _error$graphQLErrors === void 0 || (_error$graphQLErrors = _error$graphQLErrors.originalError) === null || _error$graphQLErrors === void 0 ? void 0 : _error$graphQLErrors.type) === 'NOT_FOUND' || (error === null || error === void 0 || (_error$graphQLErrors2 = error.graphQLErrors) === null || _error$graphQLErrors2 === void 0 || (_error$graphQLErrors2 = _error$graphQLErrors2[0]) === null || _error$graphQLErrors2 === void 0 || (_error$graphQLErrors2 = _error$graphQLErrors2.originalError) === null || _error$graphQLErrors2 === void 0 ? void 0 : _error$graphQLErrors2.type) === 'FORBIDDEN') {\n      window.location.href = '/api/keystatic/github/repo-not-found';\n    }\n  }, [data, error, push, props.config]);\n  return null;\n}\nfunction PageInner({\n  config\n}) {\n  var _config$cloud;\n  const {\n    params\n  } = useRouter();\n  let branch = null,\n    parsedParams,\n    basePath;\n  if (params.join('/') === 'cloud/oauth/callback') {\n    return /*#__PURE__*/jsx(KeystaticCloudAuthCallback, {\n      config: config\n    });\n  }\n  let wrapper = x => x;\n  if (isCloudConfig(config) || isLocalConfig(config) && (_config$cloud = config.cloud) !== null && _config$cloud !== void 0 && _config$cloud.project) {\n    wrapper = element => /*#__PURE__*/jsx(CloudInfoProvider, {\n      config: config,\n      children: element\n    });\n  }\n  if (isGitHubConfig(config) || isCloudConfig(config)) {\n    const origWrapper = wrapper;\n    wrapper = element => /*#__PURE__*/jsx(AuthWrapper, {\n      config: config,\n      children: /*#__PURE__*/jsx(GitHubAppShellDataProvider, {\n        config: config,\n        children: origWrapper(element)\n      })\n    });\n    if (params.length === 0) {\n      return wrapper( /*#__PURE__*/jsx(RedirectToBranch, {\n        config: config\n      }));\n    }\n    if (params.length === 1 && isGitHubConfig(config)) {\n      if (params[0] === 'setup') return /*#__PURE__*/jsx(KeystaticSetup, {\n        config: config\n      });\n      if (params[0] === 'repo-not-found') {\n        return /*#__PURE__*/jsx(RepoNotFound, {\n          config: config\n        });\n      }\n      if (params[0] === 'created-github-app') {\n        return /*#__PURE__*/jsx(CreatedGitHubApp, {\n          config: config\n        });\n      }\n    }\n    if (params[0] !== 'branch' || params.length < 2) {\n      return /*#__PURE__*/jsx(Text, {\n        children: \"Not found\"\n      });\n    }\n    branch = params[1];\n    basePath = `/keystatic/branch/${encodeURIComponent(branch)}`;\n    parsedParams = parseParamsWithoutBranch(params.slice(2));\n  } else {\n    parsedParams = parseParamsWithoutBranch(params);\n    basePath = '/keystatic';\n  }\n  return wrapper( /*#__PURE__*/jsx(AppShell, {\n    config: config,\n    currentBranch: branch || '',\n    basePath: basePath,\n    children: /*#__PURE__*/jsx(NotFoundBoundary, {\n      fallback: /*#__PURE__*/jsx(PageRoot, {\n        children: /*#__PURE__*/jsx(PageBody, {\n          children: /*#__PURE__*/jsx(EmptyState, {\n            icon: fileX2Icon,\n            title: \"Not found\",\n            message: \"This page could not be found.\"\n          })\n        })\n      }),\n      children: parsedParams === null ? /*#__PURE__*/jsx(AlwaysNotFound, {}) : parsedParams.collection ? parsedParams.kind === 'create' ? /*#__PURE__*/jsx(CreateItemWrapper, {\n        collection: parsedParams.collection,\n        config: config,\n        basePath: basePath\n      }, parsedParams.collection) : parsedParams.kind === 'edit' ? /*#__PURE__*/jsx(ItemPageWrapper, {\n        collection: parsedParams.collection,\n        basePath: basePath,\n        config: config,\n        itemSlug: parsedParams.slug\n      }, parsedParams.collection) : /*#__PURE__*/jsx(CollectionPage, {\n        basePath: basePath,\n        collection: parsedParams.collection,\n        config: config\n      }, parsedParams.collection) : parsedParams.singleton ? /*#__PURE__*/jsx(SingletonPageWrapper, {\n        config: config,\n        singleton: parsedParams.singleton\n      }, parsedParams.singleton) : /*#__PURE__*/jsx(DashboardPage, {\n        config: config,\n        basePath: basePath\n      })\n    })\n  }));\n}\nfunction AlwaysNotFound() {\n  notFound();\n}\nfunction AuthWrapper(props) {\n  const [state, setState] = useState('unknown');\n  const router = useRouter();\n  useEffect(() => {\n    getAuth(props.config).then(auth => {\n      if (auth) {\n        setState('valid');\n        return;\n      }\n      setState('explicit-auth');\n    });\n  }, [props.config]);\n  if (state === 'valid') {\n    return props.children;\n  }\n  if (state === 'explicit-auth') {\n    if (props.config.storage.kind === 'github') {\n      return /*#__PURE__*/jsx(Flex, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        children: /*#__PURE__*/jsxs(Button, {\n          href: `/api/keystatic/github/login${router.params.length ? `?${new URLSearchParams({\n            from: router.params.map(encodeURIComponent).join('/')\n          })}` : ''}`\n          // even though we'll never be in an iframe, so this isn't really distinct from _self\n          // it makes react-aria avoid using client-side routing which we need here\n          ,\n          target: \"_top\",\n          children: [/*#__PURE__*/jsx(Icon, {\n            src: githubIcon\n          }), /*#__PURE__*/jsx(Text, {\n            children: \"Log in with GitHub\"\n          })]\n        })\n      });\n    }\n    if (props.config.storage.kind === 'cloud') {\n      return /*#__PURE__*/jsx(Flex, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        children: /*#__PURE__*/jsx(Button, {\n          onPress: () => {\n            redirectToCloudAuth(router.params.map(encodeURIComponent).join('/'), props.config);\n          },\n          children: /*#__PURE__*/jsx(Text, {\n            children: \"Log in with Keystatic Cloud\"\n          })\n        })\n      });\n    }\n  }\n  return null;\n}\nfunction RedirectToLoopback(props) {\n  useEffect(() => {\n    if (window.location.hostname === 'localhost') {\n      window.location.href = window.location.href.replace('localhost', '127.0.0.1');\n    }\n  }, []);\n  if (window.location.hostname === 'localhost') {\n    return null;\n  }\n  return props.children;\n}\nfunction Keystatic(props) {\n  if (props.config.storage.kind === 'github') {\n    assertValidRepoConfig(props.config.storage.repo);\n  }\n  return /*#__PURE__*/jsx(ClientOnly, {\n    children: /*#__PURE__*/jsx(RedirectToLoopback, {\n      children: /*#__PURE__*/jsx(AppSlugProvider, {\n        value: props.appSlug,\n        children: /*#__PURE__*/jsx(RouterProvider, {\n          children: /*#__PURE__*/jsx(Provider, {\n            config: props.config,\n            children: /*#__PURE__*/jsx(PageInner, {\n              config: props.config\n            })\n          })\n        })\n      })\n    })\n  });\n}\nfunction ClientOnly(props) {\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  if (!mounted) return null;\n  return props.children;\n}\n\nexport { Keystatic };\n", "import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\n\nconst fileX2Icon = /*#__PURE__*/jsxs(Fragment, {\n  children: [/*#__PURE__*/jsx(\"path\", {\n    d: \"M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4\"\n  }), /*#__PURE__*/jsx(\"path\", {\n    d: \"M14 2v4a2 2 0 0 0 2 2h4M8 12.5l-5 5M3 12.5l5 5\"\n  })]\n});\n\nexport { fileX2Icon };\n", "import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\n\nconst alertCircleIcon = /*#__PURE__*/jsxs(Fragment, {\n  children: [/*#__PURE__*/jsx(\"circle\", {\n    cx: 12,\n    cy: 12,\n    r: 10\n  }), /*#__PURE__*/jsx(\"path\", {\n    d: \"M12 8v4M12 16h.01\"\n  })]\n});\n\nexport { alertCircleIcon };\n", "import { jsx } from 'react/jsx-runtime';\n\nconst listXIcon = /*#__PURE__*/jsx(\"path\", {\n  d: \"M11 12H3M16 6H3M16 18H3M19 10l-4 4M15 10l4 4\"\n});\n\nexport { listXIcon };\n", "import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\n\nconst searchIcon = /*#__PURE__*/jsxs(Fragment, {\n  children: [/*#__PURE__*/jsx(\"circle\", {\n    cx: 11,\n    cy: 11,\n    r: 8\n  }), /*#__PURE__*/jsx(\"path\", {\n    d: \"m21 21-4.3-4.3\"\n  })]\n});\n\nexport { searchIcon };\n", "import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\n\nconst searchXIcon = /*#__PURE__*/jsxs(Fragment, {\n  children: [/*#__PURE__*/jsx(\"path\", {\n    d: \"m13.5 8.5-5 5M8.5 8.5l5 5\"\n  }), /*#__PURE__*/jsx(\"circle\", {\n    cx: 11,\n    cy: 11,\n    r: 8\n  }), /*#__PURE__*/jsx(\"path\", {\n    d: \"m21 21-4.3-4.3\"\n  })]\n});\n\nexport { searchXIcon };\n", "import { jsx } from 'react/jsx-runtime';\n\nconst diffIcon = /*#__PURE__*/jsx(\"path\", {\n  d: \"M12 3v14M5 10h14M5 21h14\"\n});\n\nexport { diffIcon };\n", "import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\n\nconst plusSquareIcon = /*#__PURE__*/jsxs(Fragment, {\n  children: [/*#__PURE__*/jsx(\"rect\", {\n    width: 18,\n    height: 18,\n    x: 3,\n    y: 3,\n    rx: 2\n  }), /*#__PURE__*/jsx(\"path\", {\n    d: \"M8 12h8M12 8v8\"\n  })]\n});\n\nexport { plusSquareIcon };\n", "import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\n\nconst dotSquareIcon = /*#__PURE__*/jsxs(Fragment, {\n  children: [/*#__PURE__*/jsx(\"rect\", {\n    width: 18,\n    height: 18,\n    x: 3,\n    y: 3,\n    rx: 2\n  }), /*#__PURE__*/jsx(\"circle\", {\n    cx: 12,\n    cy: 12,\n    r: 1\n  })]\n});\n\nexport { dotSquareIcon };\n", "{\n  \"Clear search\": \"مسح البحث\"\n}\n", "{\n  \"Clear search\": \"Изчистване на търсене\"\n}\n", "{\n  \"Clear search\": \"Vymazat hledání\"\n}\n", "{\n  \"Clear search\": \"Ryd søgning\"\n}\n", "{\n  \"Clear search\": \"Suche zurücksetzen\"\n}\n", "{\n  \"Clear search\": \"Απαλοιφή αναζήτησης\"\n}\n", "{\n  \"Clear search\": \"Clear search\"\n}\n", "{\n  \"Clear search\": \"Borrar búsqueda\"\n}\n", "{\n  \"Clear search\": \"Tühjenda otsing\"\n}\n", "{\n  \"Clear search\": \"Tyhjennä haku\"\n}\n", "{\n  \"Clear search\": \"Effacer la recherche\"\n}\n", "{\n  \"Clear search\": \"נקה חיפוש\"\n}\n", "{\n  \"Clear search\": \"Obriši pretragu\"\n}\n", "{\n  \"Clear search\": \"Keresés törlése\"\n}\n", "{\n  \"Clear search\": \"Cancella ricerca\"\n}\n", "{\n  \"Clear search\": \"検索をクリア\"\n}\n", "{\n  \"Clear search\": \"검색 지우기\"\n}\n", "{\n  \"Clear search\": \"Išvalyti iešką\"\n}\n", "{\n  \"Clear search\": \"Notīrīt meklēšanu\"\n}\n", "{\n  \"Clear search\": \"Tøm søk\"\n}\n", "{\n  \"Clear search\": \"Zoekactie wissen\"\n}\n", "{\n  \"Clear search\": \"Wyczyść zawartość wyszukiwania\"\n}\n", "{\n  \"Clear search\": \"Limpar pesquisa\"\n}\n", "{\n  \"Clear search\": \"Limpar pesquisa\"\n}\n", "{\n  \"Clear search\": \"Ştergeţi căutarea\"\n}\n", "{\n  \"Clear search\": \"Очистить поиск\"\n}\n", "{\n  \"Clear search\": \"Vymazať vyhľadávanie\"\n}\n", "{\n  \"Clear search\": \"Počisti iskanje\"\n}\n", "{\n  \"Clear search\": \"Obriši pretragu\"\n}\n", "{\n  \"Clear search\": \"Rensa sökning\"\n}\n", "{\n  \"Clear search\": \"Aramayı temizle\"\n}\n", "{\n  \"Clear search\": \"Очистити пошук\"\n}\n", "{\n  \"Clear search\": \"清除搜索\"\n}\n", "{\n  \"Clear search\": \"清除搜尋條件\"\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useSearchField} from './useSearchField';\nexport type {AriaSearchFieldProps} from '@react-types/searchfield';\nexport type {SearchFieldAria} from './useSearchField';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaSearchFieldProps} from '@react-types/searchfield';\nimport {chain} from '@react-aria/utils';\nimport {DOMAttributes, ValidationResult} from '@react-types/shared';\nimport {InputHTMLAttributes, LabelHTMLAttributes, RefObject} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {SearchFieldState} from '@react-stately/searchfield';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useTextField} from '@react-aria/textfield';\n\nexport interface SearchFieldAria extends ValidationResult {\n  /** Props for the text field's visible label element (if any). */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Props for the clear button. */\n  clearButtonProps: AriaButtonProps,\n  /** Props for the searchfield's description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the searchfield's error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a search field.\n * @param props - Props for the search field.\n * @param state - State for the search field, as returned by `useSearchFieldState`.\n * @param inputRef - A ref to the input element.\n */\nexport function useSearchField(\n  props: AriaSearchFieldProps,\n  state: SearchFieldState,\n  inputRef: RefObject<HTMLInputElement>\n): SearchFieldAria {\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/searchfield');\n  let {\n    isDisabled,\n    isReadOnly,\n    onSubmit = () => {},\n    onClear,\n    type = 'search'\n  } = props;\n\n  let onKeyDown = (e) => {\n    const key = e.key;\n\n    if (key === 'Enter') {\n      e.preventDefault();\n    }\n\n    if (isDisabled || isReadOnly) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      onSubmit(state.value);\n    }\n\n    if (key === 'Escape') {\n      if (state.value === '') {\n        e.continuePropagation();\n      } else {\n        state.setValue('');\n        if (onClear) {\n          onClear();\n        }\n      }\n    }\n  };\n\n  let onClearButtonClick = () => {\n    state.setValue('');\n\n    if (onClear) {\n      onClear();\n    }\n  };\n\n  let onPressStart = () => {\n    // this is in PressStart for mobile so that touching the clear button doesn't remove focus from\n    // the input and close the keyboard\n    inputRef.current?.focus();\n  };\n\n  let {labelProps, inputProps, descriptionProps, errorMessageProps, ...validation} = useTextField({\n    ...props,\n    value: state.value,\n    onChange: state.setValue,\n    onKeyDown: !isReadOnly ? chain(onKeyDown, props.onKeyDown) : props.onKeyDown,\n    type\n  }, inputRef);\n\n  return {\n    labelProps,\n    inputProps: {\n      ...inputProps,\n      // already handled by useSearchFieldState\n      defaultValue: undefined\n    },\n    clearButtonProps: {\n      'aria-label': stringFormatter.format('Clear search'),\n      excludeFromTabOrder: true,\n      // @ts-ignore\n      preventFocusOnPress: true,\n      isDisabled: isDisabled || isReadOnly,\n      onPress: onClearButtonClick,\n      onPressStart\n    },\n    descriptionProps,\n    errorMessageProps,\n    ...validation\n  };\n}\n", "const _temp0 = require(\"../intl/ar-AE.json\");\nconst _temp1 = require(\"../intl/bg-BG.json\");\nconst _temp2 = require(\"../intl/cs-CZ.json\");\nconst _temp3 = require(\"../intl/da-DK.json\");\nconst _temp4 = require(\"../intl/de-DE.json\");\nconst _temp5 = require(\"../intl/el-GR.json\");\nconst _temp6 = require(\"../intl/en-US.json\");\nconst _temp7 = require(\"../intl/es-ES.json\");\nconst _temp8 = require(\"../intl/et-EE.json\");\nconst _temp9 = require(\"../intl/fi-FI.json\");\nconst _temp10 = require(\"../intl/fr-FR.json\");\nconst _temp11 = require(\"../intl/he-IL.json\");\nconst _temp12 = require(\"../intl/hr-HR.json\");\nconst _temp13 = require(\"../intl/hu-HU.json\");\nconst _temp14 = require(\"../intl/it-IT.json\");\nconst _temp15 = require(\"../intl/ja-JP.json\");\nconst _temp16 = require(\"../intl/ko-KR.json\");\nconst _temp17 = require(\"../intl/lt-LT.json\");\nconst _temp18 = require(\"../intl/lv-LV.json\");\nconst _temp19 = require(\"../intl/nb-NO.json\");\nconst _temp20 = require(\"../intl/nl-NL.json\");\nconst _temp21 = require(\"../intl/pl-PL.json\");\nconst _temp22 = require(\"../intl/pt-BR.json\");\nconst _temp23 = require(\"../intl/pt-PT.json\");\nconst _temp24 = require(\"../intl/ro-RO.json\");\nconst _temp25 = require(\"../intl/ru-RU.json\");\nconst _temp26 = require(\"../intl/sk-SK.json\");\nconst _temp27 = require(\"../intl/sl-SI.json\");\nconst _temp28 = require(\"../intl/sr-SP.json\");\nconst _temp29 = require(\"../intl/sv-SE.json\");\nconst _temp30 = require(\"../intl/tr-TR.json\");\nconst _temp31 = require(\"../intl/uk-UA.json\");\nconst _temp32 = require(\"../intl/zh-CN.json\");\nconst _temp33 = require(\"../intl/zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useSearchFieldState} from './useSearchFieldState';\n\nexport type {SearchFieldProps} from '@react-types/searchfield';\nexport type {SearchFieldState} from './useSearchFieldState';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {SearchFieldProps} from '@react-types/searchfield';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface SearchFieldState {\n  /** The current value of the search field. */\n  readonly value: string,\n\n  /** Sets the value of the search field. */\n  setValue(value: string): void\n}\n\n/**\n * Provides state management for a search field.\n */\nexport function useSearchFieldState(props: SearchFieldProps): SearchFieldState {\n  let [value, setValue] = useControlledState(toString(props.value), toString(props.defaultValue) || '', props.onChange);\n\n  return {\n    value,\n    setValue\n  };\n}\n\nfunction toString(val) {\n  if (val == null) {\n    return;\n  }\n\n  return val.toString();\n}\n", "'use client';\nimport { useSearchField } from '@react-aria/searchfield';\nimport { useObjectRef } from '@react-aria/utils';\nimport { useSearchFieldState } from '@react-stately/searchfield';\nimport { forwardRef } from 'react';\nimport { ClearButton } from '@keystar/ui/button';\nimport { searchIcon } from '@keystar/ui/icon/icons/searchIcon';\nimport { Icon } from '@keystar/ui/icon';\nimport { Flex } from '@keystar/ui/layout';\nimport { css } from '@keystar/ui/style';\nimport { TextFieldPrimitive } from '@keystar/ui/text-field';\nimport { jsx } from 'react/jsx-runtime';\n\n/** Search fields are text fields, specifically designed for search behaviour. */\nconst SearchField = /*#__PURE__*/forwardRef(function SearchField(props, forwardedRef) {\n  const {\n    autoFocus,\n    description,\n    errorMessage,\n    id,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    label,\n    showIcon = true,\n    ...styleProps\n  } = props;\n  let domRef = useObjectRef(forwardedRef);\n  let state = useSearchFieldState(props);\n  let {\n    labelProps,\n    inputProps,\n    clearButtonProps,\n    descriptionProps,\n    errorMessageProps\n  } = useSearchField(props, state, domRef);\n  let clearButtonVisible = state.value !== '' && !props.isReadOnly;\n  let clearButton = /*#__PURE__*/jsx(ClearButton, {\n    ...clearButtonProps,\n    preventFocus: true,\n    isDisabled: isDisabled\n  });\n  let startElement = /*#__PURE__*/jsx(Flex, {\n    alignItems: \"center\",\n    flexShrink: 0,\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    width: \"element.regular\",\n    children: /*#__PURE__*/jsx(Icon, {\n      src: searchIcon,\n      color: props.isDisabled ? 'color.alias.foregroundDisabled' : 'neutralSecondary'\n    })\n  });\n  return /*#__PURE__*/jsx(TextFieldPrimitive, {\n    ref: domRef,\n    ...styleProps,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired,\n    label: label,\n    labelProps: labelProps,\n    inputProps: inputProps,\n    inputWrapperProps: {\n      className: css({\n        input: {\n          '&[data-adornment=\"start\"]': {\n            paddingInlineStart: 0\n          },\n          '&[data-adornment=\"end\"]': {\n            paddingInlineEnd: 0\n          },\n          '&[data-adornment=\"both\"]': {\n            paddingInline: 0\n          }\n        }\n      })\n    },\n    description: description,\n    descriptionProps: descriptionProps,\n    errorMessage: errorMessage,\n    errorMessageProps: errorMessageProps,\n    startElement: showIcon && startElement,\n    endElement: clearButtonVisible && clearButton\n  });\n});\n\nexport { SearchField };\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useGridState} from './useGridState';\nexport {GridCollection} from './GridCollection';\n\nexport type {GridStateOptions, GridState} from './useGridState';\n", "import {getChildNodes, getFirstItem, getLastItem} from '@react-stately/collections';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {Key} from '@react-types/shared';\nimport {MultipleSelectionStateProps, SelectionManager, useMultipleSelectionState} from '@react-stately/selection';\nimport {useEffect, useMemo, useRef} from 'react';\n\nexport interface GridState<T, C extends GridCollection<T>> {\n  collection: C,\n  /** A set of keys for rows that are disabled. */\n  disabledKeys: Set<Key>,\n  /** A selection manager to read and update row selection state. */\n  selectionManager: SelectionManager,\n  /** Whether keyboard navigation is disabled, such as when the arrow keys should be handled by a component within a cell. */\n  isKeyboardNavigationDisabled: boolean\n}\n\nexport interface GridStateOptions<T, C extends GridCollection<T>> extends MultipleSelectionStateProps {\n  collection: C,\n  disabledKeys?: Iterable<Key>,\n  focusMode?: 'row' | 'cell'\n}\n\n/**\n * Provides state management for a grid component. Handles row selection and focusing a grid cell's focusable child if applicable.\n */\nexport function useGridState<T extends object, C extends GridCollection<T>>(props: GridStateOptions<T, C>): GridState<T, C> {\n  let {collection, focusMode} = props;\n  let selectionState = useMultipleSelectionState(props);\n  let disabledKeys = useMemo(() =>\n      props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n    , [props.disabledKeys]);\n\n  let setFocusedKey = selectionState.setFocusedKey;\n  selectionState.setFocusedKey = (key, child) => {\n    // If focusMode is cell and an item is focused, focus a child cell instead.\n    if (focusMode === 'cell' && key != null) {\n      let item = collection.getItem(key);\n      if (item?.type === 'item') {\n        let children = getChildNodes(item, collection);\n        if (child === 'last') {\n          key = getLastItem(children)?.key;\n        } else {\n          key = getFirstItem(children)?.key;\n        }\n      }\n    }\n\n    setFocusedKey(key, child);\n  };\n\n  let selectionManager = useMemo(() =>\n    new SelectionManager(collection, selectionState)\n    , [collection, selectionState]\n  );\n\n  // Reset focused key if that item is deleted from the collection.\n  const cachedCollection = useRef(null);\n  useEffect(() => {\n    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {\n      const node = cachedCollection.current.getItem(selectionState.focusedKey);\n      const parentNode =\n        node.parentKey != null && (node.type === 'cell' || node.type === 'rowheader' || node.type === 'column') ?\n        cachedCollection.current.getItem(node.parentKey) :\n        node;\n      const cachedRows = cachedCollection.current.rows;\n      const rows = collection.rows;\n      const diff = cachedRows.length - rows.length;\n      let index = Math.min(\n        (\n          diff > 1 ?\n          Math.max(parentNode.index - diff + 1, 0) :\n          parentNode.index\n        ),\n        rows.length - 1);\n      let newRow:GridNode<T>;\n      while (index >= 0) {\n        if (!selectionManager.isDisabled(rows[index].key) && rows[index].type !== 'headerrow') {\n          newRow = rows[index];\n          break;\n        }\n        // Find next, not disabled row.\n        if (index < rows.length - 1) {\n          index++;\n        // Otherwise, find previous, not disabled row.\n        } else {\n          if (index > parentNode.index) {\n            index = parentNode.index;\n          }\n          index--;\n        }\n      }\n      if (newRow) {\n        const childNodes = newRow.hasChildNodes ? [...getChildNodes(newRow, collection)] : [];\n        const keyToFocus =\n          newRow.hasChildNodes &&\n          parentNode !== node &&\n          node.index < childNodes.length ?\n          childNodes[node.index].key :\n          newRow.key;\n        selectionState.setFocusedKey(keyToFocus);\n      } else {\n        selectionState.setFocusedKey(null);\n      }\n    }\n    cachedCollection.current = collection;\n  }, [collection, selectionManager, selectionState, selectionState.focusedKey]);\n\n  return {\n    collection,\n    disabledKeys,\n    isKeyboardNavigationDisabled: false,\n    selectionManager\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridNode, GridRow, GridCollection as IGridCollection} from '@react-types/grid';\nimport {Key} from '@react-types/shared';\n\ninterface GridCollectionOptions<T> {\n  columnCount: number,\n  items: GridRow<T>[],\n  visitNode?: (cell: GridNode<T>) => GridNode<T>\n}\n\nexport class GridCollection<T> implements IGridCollection<T> {\n  keyMap: Map<Key, GridNode<T>> = new Map();\n  columnCount: number;\n  rows: GridNode<T>[];\n\n  constructor(opts?: GridCollectionOptions<T>) {\n    this.keyMap = new Map();\n    this.columnCount = opts?.columnCount;\n    this.rows = [];\n\n    let visit = (node: GridNode<T>) => {\n      // If the node is the same object as the previous node for the same key,\n      // we can skip this node and its children. We always visit columns though,\n      // because we depend on order to build the columns array.\n      let prevNode = this.keyMap.get(node.key);\n      if (opts.visitNode) {\n        node = opts.visitNode(node);\n      }\n\n      this.keyMap.set(node.key, node);\n\n      let childKeys = new Set();\n      let last: GridNode<T>;\n      for (let child of node.childNodes) {\n        if (child.type === 'cell' && child.parentKey == null) {\n          // if child is a cell parent key isn't already established by the collection, match child node to parent row\n          child.parentKey = node.key;\n        }\n        childKeys.add(child.key);\n\n        if (last) {\n          last.nextKey = child.key;\n          child.prevKey = last.key;\n        } else {\n          child.prevKey = null;\n        }\n\n        visit(child);\n        last = child;\n      }\n\n      if (last) {\n        last.nextKey = null;\n      }\n\n      // Remove deleted nodes and their children from the key map\n      if (prevNode) {\n        for (let child of prevNode.childNodes) {\n          if (!childKeys.has(child.key)) {\n            remove(child);\n          }\n        }\n      }\n    };\n\n    let remove = (node: GridNode<T>) => {\n      this.keyMap.delete(node.key);\n      for (let child of node.childNodes) {\n        if (this.keyMap.get(child.key) === child) {\n          remove(child);\n        }\n      }\n    };\n\n    let last: GridNode<T>;\n    opts.items.forEach((node, i) => {\n      let rowNode = {\n        level: 0,\n        key: 'row-' + i,\n        type: 'row',\n        value: undefined,\n        hasChildNodes: true,\n        childNodes: [...node.childNodes],\n        rendered: undefined,\n        textValue: undefined,\n        ...node\n      } as GridNode<T>;\n\n      if (last) {\n        last.nextKey = rowNode.key;\n        rowNode.prevKey = last.key;\n      } else {\n        rowNode.prevKey = null;\n      }\n\n      this.rows.push(rowNode);\n      visit(rowNode);\n\n      last = rowNode;\n    });\n\n    if (last) {\n      last.nextKey = null;\n    }\n  }\n\n  *[Symbol.iterator]() {\n    yield* [...this.rows];\n  }\n\n  get size() {\n    return [...this.rows].length;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.prevKey : null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.nextKey : null;\n  }\n\n  getFirstKey() {\n    return [...this.rows][0]?.key;\n  }\n\n  getLastKey() {\n    let rows = [...this.rows];\n    return rows[rows.length - 1]?.key;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key);\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n\n  getChildren(key: Key): Iterable<GridNode<T>> {\n    let node = this.keyMap.get(key);\n    return node?.childNodes || [];\n  }\n}\n", "/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet _tableNestedRows = false;\n\nexport function enableTableNestedRows() {\n  _tableNestedRows = true;\n}\n\nexport function tableNestedRows() {\n  return _tableNestedRows;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type {TableColumnResizeState, TableColumnResizeStateProps} from './useTableColumnResizeState';\nexport type {TableState, CollectionBuilderContext, TableStateProps} from './useTableState';\nexport type {TableHeaderProps, TableBodyProps, ColumnProps, RowProps, CellProps} from '@react-types/table';\nexport type {TreeGridState, TreeGridStateProps} from './useTreeGridState';\n\nexport {useTableColumnResizeState} from './useTableColumnResizeState';\nexport {useTableState} from './useTableState';\nexport {TableHeader} from './TableHeader';\nexport {TableBody} from './TableBody';\nexport {Column} from './Column';\nexport {Row} from './Row';\nexport {Cell} from './Cell';\nexport {Section} from '@react-stately/collections';\nexport {TableCollection, buildHeaderRows} from './TableCollection';\nexport {TableColumnLayout} from './TableColumnLayout';\nexport {UNSTABLE_useTreeGridState} from './useTreeGridState';\n", "/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ColumnSize} from '@react-types/table';\nimport {GridNode} from '@react-types/grid';\nimport {Key} from '@react-types/shared';\nimport {TableColumnLayout} from './TableColumnLayout';\nimport {TableState} from './useTableState';\nimport {useCallback, useMemo, useState} from 'react';\n\nexport interface TableColumnResizeStateProps<T> {\n  /**\n   * Current width of the table or table viewport that the columns\n   * should be calculated against.\n   */\n  tableWidth: number,\n  /** A function that is called to find the default width for a given column. */\n  getDefaultWidth?: (node: GridNode<T>) => ColumnSize | null | undefined,\n  /** A function that is called to find the default minWidth for a given column. */\n  getDefaultMinWidth?: (node: GridNode<T>) => ColumnSize | null | undefined\n}\nexport interface TableColumnResizeState<T> {\n  /**\n   * Called to update the state that a resize event has occurred.\n   * Returns the new widths for all columns based on the resized column.\n   */\n  updateResizedColumns: (key: Key, width: number) => Map<Key, ColumnSize>,\n  /** Callback for when onColumnResize has started. */\n  startResize: (key: Key) => void,\n  /** Callback for when onColumnResize has ended. */\n  endResize: () => void,\n  /** Gets the current width for the specified column. */\n  getColumnWidth: (key: Key) => number,\n  /** Gets the current minWidth for the specified column. */\n  getColumnMinWidth: (key: Key) => number,\n  /** Gets the current maxWidth for the specified column. */\n  getColumnMaxWidth: (key: Key) => number,\n  /** Key of the currently resizing column. */\n  resizingColumn: Key | null,\n  /** A reference to the table state. */\n  tableState: TableState<T>\n}\n\n/**\n * Provides column width state management for a table component with column resizing support. Handles building\n * a map of column widths calculated from the table's width and any provided column width information from the collection.\n * In addition, it tracks the currently resizing column and provides callbacks for updating the widths upon resize operations.\n * @param props - Props for the table.\n * @param state - State for the table, as returned by `useTableState`.\n */\nexport function useTableColumnResizeState<T>(props: TableColumnResizeStateProps<T>, state: TableState<T>): TableColumnResizeState<T> {\n  let {\n    getDefaultWidth,\n    getDefaultMinWidth,\n    tableWidth = 0\n  } = props;\n\n  let [resizingColumn, setResizingColumn] = useState<Key | null>(null);\n  let columnLayout = useMemo(\n    () => new TableColumnLayout({\n      getDefaultWidth,\n      getDefaultMinWidth\n    }),\n    [getDefaultWidth, getDefaultMinWidth]\n  );\n\n  let [controlledColumns, uncontrolledColumns] = useMemo(() =>\n      columnLayout.splitColumnsIntoControlledAndUncontrolled(state.collection.columns)\n  , [state.collection.columns, columnLayout]);\n\n  // uncontrolled column widths\n  let [uncontrolledWidths, setUncontrolledWidths] = useState(() =>\n    columnLayout.getInitialUncontrolledWidths(uncontrolledColumns)\n  );\n\n  // Update uncontrolled widths if the columns changed.\n  let [lastColumns, setLastColumns] = useState(state.collection.columns);\n  if (state.collection.columns !== lastColumns) {\n    if (\n      state.collection.columns.length !== lastColumns.length ||\n      state.collection.columns.some((c, i) => c.key !== lastColumns[i].key)\n    ) {\n      let newUncontrolledWidths = columnLayout.getInitialUncontrolledWidths(uncontrolledColumns);\n      setUncontrolledWidths(newUncontrolledWidths);\n    }\n    setLastColumns(state.collection.columns);\n  }\n\n  // combine columns back into one map that maintains same order as the columns\n  let colWidths = useMemo(() =>\n      columnLayout.recombineColumns(state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns)\n  , [state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns, columnLayout]);\n\n  let startResize = useCallback((key: Key) => {\n    setResizingColumn(key);\n  }, [setResizingColumn]);\n\n  let updateResizedColumns = useCallback((key: Key, width: number): Map<Key, ColumnSize> => {\n    let newControlled = new Map(Array.from(controlledColumns).map(([key, entry]) => [key, entry.props.width]));\n    let newSizes = columnLayout.resizeColumnWidth(tableWidth, state.collection, newControlled, uncontrolledWidths, key, width);\n\n    let map = new Map(Array.from(uncontrolledColumns).map(([key]) => [key, newSizes.get(key)]));\n    map.set(key, width);\n    setUncontrolledWidths(map);\n    return newSizes;\n  }, [controlledColumns, uncontrolledColumns, setUncontrolledWidths, tableWidth, columnLayout, state.collection, uncontrolledWidths]);\n\n  let endResize = useCallback(() => {\n    setResizingColumn(null);\n  }, [setResizingColumn]);\n\n  useMemo(() =>\n    columnLayout.buildColumnWidths(tableWidth, state.collection, colWidths)\n  , [tableWidth, state.collection, colWidths, columnLayout]);\n\n  return useMemo(() => ({\n    resizingColumn,\n    updateResizedColumns,\n    startResize,\n    endResize,\n    getColumnWidth: (key: Key) =>\n      columnLayout.getColumnWidth(key),\n    getColumnMinWidth: (key: Key) =>\n      columnLayout.getColumnMinWidth(key),\n    getColumnMaxWidth: (key: Key) =>\n      columnLayout.getColumnMaxWidth(key),\n    tableState: state\n  }), [\n    columnLayout,\n    resizingColumn,\n    updateResizedColumns,\n    startResize,\n    endResize,\n    state\n  ]);\n}\n", "/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  calculateColumnSizes,\n  getMaxWidth,\n  getMinWidth,\n  isStatic,\n  parseFractionalUnit\n} from './TableUtils';\nimport {ColumnSize, TableCollection} from '@react-types/table';\nimport {GridNode} from '@react-types/grid';\nimport {Key} from '@react-types/shared';\n\nexport interface TableColumnLayoutOptions<T> {\n  getDefaultWidth?: (column: GridNode<T>) => ColumnSize | null | undefined,\n  getDefaultMinWidth?: (column: GridNode<T>) => ColumnSize | null | undefined\n}\n\nexport class TableColumnLayout<T> {\n  getDefaultWidth: (column: GridNode<T>) => ColumnSize | null | undefined;\n  getDefaultMinWidth: (column: GridNode<T>) => ColumnSize | null | undefined;\n  columnWidths: Map<Key, number> = new Map();\n  columnMinWidths: Map<Key, number> = new Map();\n  columnMaxWidths: Map<Key, number> = new Map();\n\n  constructor(options: TableColumnLayoutOptions<T>) {\n    this.getDefaultWidth = options?.getDefaultWidth ?? (() => '1fr');\n    this.getDefaultMinWidth = options?.getDefaultMinWidth ?? (() => 75);\n  }\n\n  /** Takes an array of columns and splits it into 2 maps of columns with controlled and columns with uncontrolled widths. */\n  splitColumnsIntoControlledAndUncontrolled(columns: Array<GridNode<T>>): [Map<Key, GridNode<T>>, Map<Key, GridNode<T>>] {\n    return columns.reduce((acc, col) => {\n      if (col.props.width != null) {\n        acc[0].set(col.key, col);\n      } else {\n        acc[1].set(col.key, col);\n      }\n      return acc;\n    }, [new Map(), new Map()]);\n  }\n\n  /** Takes uncontrolled and controlled widths and joins them into a single Map. */\n  recombineColumns(columns: Array<GridNode<T>>, uncontrolledWidths: Map<Key, ColumnSize>, uncontrolledColumns: Map<Key, GridNode<T>>, controlledColumns: Map<Key, GridNode<T>>): Map<Key, ColumnSize> {\n    return new Map(columns.map(col => {\n      if (uncontrolledColumns.has(col.key)) {\n        return [col.key, uncontrolledWidths.get(col.key)];\n      } else {\n        return [col.key, controlledColumns.get(col.key).props.width];\n      }\n    }));\n  }\n\n  /** Used to make an initial Map of the uncontrolled widths based on default widths. */\n  getInitialUncontrolledWidths(uncontrolledColumns: Map<Key, GridNode<T>>): Map<Key, ColumnSize> {\n    return new Map(Array.from(uncontrolledColumns).map(([key, col]) =>\n      [key, col.props.defaultWidth ?? this.getDefaultWidth?.(col) ?? '1fr']\n    ));\n  }\n\n  getColumnWidth(key: Key): number {\n    return this.columnWidths.get(key) ?? 0;\n  }\n\n  getColumnMinWidth(key: Key): number {\n    return this.columnMinWidths.get(key) ?? 0;\n  }\n\n  getColumnMaxWidth(key: Key): number {\n    return this.columnMaxWidths.get(key) ?? 0;\n  }\n\n  resizeColumnWidth(tableWidth: number, collection: TableCollection<T>, controlledWidths: Map<Key, ColumnSize>, uncontrolledWidths: Map<Key, ColumnSize>, col = null, width: number): Map<Key, ColumnSize> {\n    let prevColumnWidths = this.columnWidths;\n    // resizing a column\n    let resizeIndex = Infinity;\n    let resizingChanged = new Map<Key, ColumnSize>([...controlledWidths, ...uncontrolledWidths]);\n    let percentKeys = new Map();\n    let frKeysToTheRight = new Map();\n    let minWidths = new Map();\n    // freeze columns to the left to their previous pixel value\n    collection.columns.forEach((column, i) => {\n      let frKey;\n      let frValue;\n      minWidths.set(column.key, this.getDefaultMinWidth(collection.columns[i]));\n      if (col !== column.key && !column.props.width && !isStatic(uncontrolledWidths.get(column.key))) {\n        // uncontrolled don't have props.width for us, so instead get from our state\n        frKey = column.key;\n        frValue = parseFractionalUnit(uncontrolledWidths.get(column.key) as string);\n      } else if (col !== column.key && !isStatic(column.props.width) && !uncontrolledWidths.get(column.key)) {\n        // controlledWidths will be the same in the collection\n        frKey = column.key;\n        frValue = parseFractionalUnit(column.props.width);\n      } else if (col !== column.key && column.props.width?.endsWith?.('%')) {\n        percentKeys.set(column.key, column.props.width);\n      }\n      // don't freeze columns to the right of the resizing one\n      if (resizeIndex < i) {\n        if (frKey) {\n          frKeysToTheRight.set(frKey, frValue);\n        }\n        return;\n      }\n      // we already know the new size of the resizing column\n      if (column.key === col) {\n        resizeIndex = i;\n        resizingChanged.set(column.key, Math.floor(width));\n        return;\n      }\n      // freeze column to previous value\n      resizingChanged.set(column.key, prevColumnWidths.get(column.key));\n    });\n\n    // predict pixels sizes for all columns based on resize\n    let columnWidths = calculateColumnSizes(\n      tableWidth,\n      collection.columns.map(col => ({...col.props, key: col.key})),\n      resizingChanged,\n      (i) => this.getDefaultWidth(collection.columns[i]),\n      (i) => this.getDefaultMinWidth(collection.columns[i])\n    );\n\n    // set all new column widths for onResize event\n    // columns going in will be the same order as the columns coming out\n    let newWidths = new Map<Key, ColumnSize>();\n    // set all column widths based on calculateColumnSize\n    columnWidths.forEach((width, index) => {\n      let key = collection.columns[index].key;\n      newWidths.set(key, width);\n    });\n\n    // add FR's back as they were to columns to the right\n    Array.from(frKeysToTheRight).forEach(([key]) => {\n      newWidths.set(key, `${frKeysToTheRight.get(key)}fr`);\n    });\n\n    // put back in percents\n    Array.from(percentKeys).forEach(([key, width]) => {\n      // resizing locks a column to a px width\n      if (key === col) {\n        return;\n      }\n      newWidths.set(key, width);\n    });\n    return newWidths;\n  }\n\n  buildColumnWidths(tableWidth: number, collection: TableCollection<T>, widths: Map<Key, ColumnSize>) {\n    this.columnWidths = new Map();\n    this.columnMinWidths = new Map();\n    this.columnMaxWidths = new Map();\n\n    // initial layout or table/window resizing\n    let columnWidths = calculateColumnSizes(\n      tableWidth,\n      collection.columns.map(col => ({...col.props, key: col.key})),\n      widths,\n      (i) => this.getDefaultWidth(collection.columns[i]),\n      (i) => this.getDefaultMinWidth(collection.columns[i])\n    );\n\n    // columns going in will be the same order as the columns coming out\n    columnWidths.forEach((width, index) => {\n      let key = collection.columns[index].key;\n      let column = collection.columns[index];\n      this.columnWidths.set(key, width);\n      this.columnMinWidths.set(key, getMinWidth(column.props.minWidth ?? this.getDefaultMinWidth(column), tableWidth));\n      this.columnMaxWidths.set(key, getMaxWidth(column.props.maxWidth, tableWidth));\n    });\n    return this.columnWidths;\n  }\n}\n", "/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ColumnSize} from '@react-types/table';\nimport {Key} from '@react-types/shared';\n\n// numbers and percents are considered static. *fr units or a lack of units are considered dynamic.\nexport function isStatic(width: number | string): boolean {\n  return width != null && (!isNaN(width as number) || (String(width)).match(/^(\\d+)(?=%$)/) !== null);\n}\n\nexport function parseFractionalUnit(width: string): number {\n  if (!width) {\n    return 1;\n  }\n  let match = width.match(/^(.+)(?=fr$)/);\n  // if width is the incorrect format, just default it to a 1fr\n  if (!match) {\n    console.warn(`width: ${width} is not a supported format, width should be a number (ex. 150), percentage (ex. '50%') or fr unit (ex. '2fr')`,\n      'defaulting to \\'1fr\\'');\n    return 1;\n  }\n  return parseFloat(match[0]);\n}\n\nexport function parseStaticWidth(width: number | string, tableWidth: number): number {\n  if (typeof width === 'string') {\n    let match = width.match(/^(\\d+)(?=%$)/);\n    if (!match) {\n      throw new Error('Only percentages or numbers are supported for static column widths');\n    }\n    return tableWidth * (parseFloat(match[0]) / 100);\n  }\n  return width;\n}\n\n\nexport function getMaxWidth(maxWidth: number | string, tableWidth: number): number {\n  return maxWidth != null\n    ? parseStaticWidth(maxWidth, tableWidth)\n    : Number.MAX_SAFE_INTEGER;\n}\n\n// cannot support FR units, we'd need to know everything else in the table to do that\nexport function getMinWidth(minWidth: number | string, tableWidth: number): number {\n  return minWidth != null\n    ? parseStaticWidth(minWidth, tableWidth)\n    : 0;\n}\n\n\nexport interface IColumn {\n  minWidth?: number | string,\n  maxWidth?: number | string,\n  width?: number | string,\n  defaultWidth?: number | string,\n  key?: Key\n}\n\n/**\n * Implements the flex algorithm described in https://www.w3.org/TR/css-flexbox-1/#layout-algorithm\n * It makes a few constraint/assumptions:\n * 1. All basis values are 0 unless it is a static width, then the basis is the static width\n * 2. All flex grow and shrink values are equal to the FR specified on the column, grow and shrink for the same column are equal\n * 3. We only have one row\n * An example of the setup can be seen here https://jsfiddle.net/snowystinger/wv0ymjaf/61/ where I let the browser figure out the\n * flex of the columns.\n * Note: We differ in one key aspect, all of our column widths must be whole numbers, so we avoid browser\n * sub pixel rounding errors. To do this, we use a cascading rounding algorithm to ensure that the sum of the widths is maintained\n * while distributing the rounding remainder across the columns.\n *\n * As noted in the chrome source code, this algorithm is very accurate, but has the potential to be quadratic.\n * They have deemed this to be acceptable because the number of elements is usually small and the flex factors\n * are usually not high variance. I believe we can make the same assumptions. Particularly once resizing is\n * started, it will convert all columns to the left to static widths, so it will cut down on the number of FR columns.\n *\n * There are likely faster ways to do this, I've chosen to stick to the spec as closely as possible for readability, accuracy, and for the\n * note that this behaving quadratically is unlikely to be a problem.\n * @param availableWidth - The visible width of the table.\n * @param columns - The table defined columns.\n * @param changedColumns - Any columns we want to override, for example, during resizing.\n * @param getDefaultWidth - A function that returns the default width of a column by its index.\n * @param getDefaultMinWidth - A function that returns the default min width of a column by its index.\n */\nexport function calculateColumnSizes(availableWidth: number, columns: IColumn[], changedColumns: Map<Key, ColumnSize>, getDefaultWidth, getDefaultMinWidth) {\n  let hasNonFrozenItems = false;\n  let flexItems = columns.map((column, index) => {\n    let width = changedColumns.get(column.key) != null ? changedColumns.get(column.key) : column.width ?? column.defaultWidth ?? getDefaultWidth?.(index) ?? '1fr';\n    let frozen = false;\n    let baseSize = 0;\n    let flex = 0;\n    let targetMainSize = null;\n    if (isStatic(width)) {\n      baseSize = parseStaticWidth(width, availableWidth);\n      frozen = true;\n    } else {\n      flex = parseFractionalUnit(width);\n      if (flex <= 0) {\n        frozen = true;\n      }\n    }\n\n    let min = getMinWidth(column.minWidth ?? getDefaultMinWidth?.(index) ?? 0, availableWidth);\n    let max = getMaxWidth(column.maxWidth, availableWidth);\n    let hypotheticalMainSize = Math.max(min, Math.min(baseSize, max));\n\n    // 9.7.1\n    // We don't make use of flex basis, it's always 0, so we are always in 'grow' mode.\n    // 9.7.2\n    if (frozen) {\n      targetMainSize = hypotheticalMainSize;\n    } else if (baseSize > hypotheticalMainSize) {\n      frozen = true;\n      targetMainSize = hypotheticalMainSize;\n    }\n\n    // 9.7.3\n    if (!frozen) {\n      hasNonFrozenItems = true;\n    }\n    return {\n      frozen,\n      baseSize,\n      hypotheticalMainSize,\n      min,\n      max,\n      flex,\n      targetMainSize,\n      violation: 0\n    };\n  });\n\n  // 9.7.4\n  // 9.7.4.a\n  while (hasNonFrozenItems) {\n    // 9.7.4.b\n    /**\n     * Calculate the remaining free space as for initial free space,\n     * above (9.7.3). If the sum of the unfrozen flex items’ flex factors is\n     * less than one, multiply the initial free space by this sum (of flex factors).\n     * If the magnitude of this value is less than the magnitude of\n     * the remaining free space, use this as the remaining free space.\n     */\n    let usedWidth = 0;\n    let flexFactors = 0;\n    flexItems.forEach(item => {\n      if (item.frozen) {\n        usedWidth += item.targetMainSize;\n      } else {\n        usedWidth += item.baseSize;\n        flexFactors += item.flex;\n      }\n    });\n\n    let remainingFreeSpace = availableWidth - usedWidth;\n    // we only support integer FR's, and because of hasNonFrozenItems, we know that flexFactors > 0\n    // so no need to check for flexFactors < 1\n    // 9.7.4.c\n    /**\n     * If the remaining free space is zero\n     * - Do nothing.\n     * Else // remember, we're always in grow mode\n     * - Find the ratio of the item’s flex grow factor to the\n     * sum of the flex grow factors of all unfrozen items on\n     * the line. Set the item’s target main size to its flex\n     * base size plus a fraction of the remaining free space\n     * proportional to the ratio.\n     */\n    if (remainingFreeSpace > 0) {\n      flexItems.forEach((item) => {\n        if (!item.frozen) {\n          let ratio = item.flex / flexFactors;\n          item.targetMainSize = item.baseSize + (ratio * remainingFreeSpace);\n        }\n      });\n    }\n\n    // 9.7.4.d\n    /**\n     * Fix min/max violations. Clamp each non-frozen item’s\n     * target main size by its used min and max main sizes\n     * and floor its content-box size at zero. If the item’s\n     * target main size was made smaller by this, it’s a max\n     * violation. If the item’s target main size was made\n     * larger by this, it’s a min violation.\n     */\n    let totalViolation = 0;\n    flexItems.forEach(item => {\n      item.violation = 0;\n      if (!item.frozen) {\n        let {min, max, targetMainSize} = item;\n        item.targetMainSize = Math.max(min, Math.min(targetMainSize, max));\n\n        item.violation = item.targetMainSize - targetMainSize;\n        totalViolation += item.violation;\n      }\n    });\n\n    // 9.7.4.e\n    /**\n     * Freeze over-flexed items. The total violation is the\n     * sum of the adjustments from the previous step\n     * ∑(clamped size - unclamped size). If the total violation is:\n     * Zero\n     * - Freeze all items.\n     *\n     * Positive\n     * - Freeze all the items with min violations.\n     *\n     * Negative\n     * - Freeze all the items with max violations.\n     */\n    hasNonFrozenItems = false;\n    flexItems.forEach(item => {\n      if (totalViolation === 0 || Math.sign(totalViolation) === Math.sign(item.violation)) {\n        item.frozen = true;\n      } else if (!item.frozen) {\n        hasNonFrozenItems = true;\n      }\n    });\n  }\n\n  return cascadeRounding(flexItems);\n}\n\nfunction cascadeRounding(flexItems): number[] {\n  /*\n  Given an array of floats that sum to an integer, this rounds the floats\n  and returns an array of integers with the same sum.\n  */\n\n  let fpTotal = 0;\n  let intTotal = 0;\n  let roundedArray = [];\n  flexItems.forEach(function (item) {\n    let float = item.targetMainSize;\n    let integer = Math.round(float + fpTotal) - intTotal;\n    fpTotal += float;\n    intTotal += integer;\n    roundedArray.push(integer);\n  });\n\n  return roundedArray;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridState, useGridState} from '@react-stately/grid';\nimport {TableCollection as ITableCollection, TableBodyProps, TableHeaderProps} from '@react-types/table';\nimport {Key, Node, SelectionMode, Sortable, SortDescriptor, SortDirection} from '@react-types/shared';\nimport {MultipleSelectionStateProps} from '@react-stately/selection';\nimport {ReactElement, useCallback, useMemo, useState} from 'react';\nimport {TableCollection} from './TableCollection';\nimport {useCollection} from '@react-stately/collections';\n\nexport interface TableState<T> extends GridState<T, ITableCollection<T>> {\n  /** A collection of rows and columns in the table. */\n  collection: ITableCollection<T>,\n  /** Whether the row selection checkboxes should be displayed. */\n  showSelectionCheckboxes: boolean,\n  /** The current sorted column and direction. */\n  sortDescriptor: SortDescriptor,\n  /** Calls the provided onSortChange handler with the provided column key and sort direction. */\n  sort(columnKey: Key, direction?: 'ascending' | 'descending'): void,\n  /** Whether keyboard navigation is disabled, such as when the arrow keys should be handled by a component within a cell. */\n  isKeyboardNavigationDisabled: boolean,\n  /** Set whether keyboard navigation is disabled, such as when the arrow keys should be handled by a component within a cell. */\n  setKeyboardNavigationDisabled: (val: boolean) => void\n}\n\nexport interface CollectionBuilderContext<T> {\n  showSelectionCheckboxes: boolean,\n  showDragButtons: boolean,\n  selectionMode: SelectionMode,\n  columns: Node<T>[]\n}\n\nexport interface TableStateProps<T> extends MultipleSelectionStateProps, Sortable {\n  /** The elements that make up the table. Includes the TableHeader, TableBody, Columns, and Rows. */\n  children?: [ReactElement<TableHeaderProps<T>>, ReactElement<TableBodyProps<T>>],\n  /** A list of row keys to disable. */\n  disabledKeys?: Iterable<Key>,\n  /** A pre-constructed collection to use instead of building one from items and children. */\n  collection?: ITableCollection<T>,\n  /** Whether the row selection checkboxes should be displayed. */\n  showSelectionCheckboxes?: boolean,\n  /** Whether the row drag button should be displayed.\n   * @private\n   */\n  showDragButtons?: boolean\n}\n\nconst OPPOSITE_SORT_DIRECTION = {\n  ascending: 'descending' as SortDirection,\n  descending: 'ascending' as SortDirection\n};\n\n/**\n * Provides state management for a table component. Handles building a collection\n * of columns and rows from props. In addition, it tracks row selection and manages sort order changes.\n */\nexport function useTableState<T extends object>(props: TableStateProps<T>): TableState<T> {\n  let [isKeyboardNavigationDisabled, setKeyboardNavigationDisabled] = useState(false);\n  let {selectionMode = 'none', showSelectionCheckboxes, showDragButtons} = props;\n\n  let context = useMemo(() => ({\n    showSelectionCheckboxes: showSelectionCheckboxes && selectionMode !== 'none',\n    showDragButtons: showDragButtons,\n    selectionMode,\n    columns: []\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }), [props.children, showSelectionCheckboxes, selectionMode, showDragButtons]);\n\n  let collection = useCollection<T, ITableCollection<T>>(\n    props,\n    useCallback((nodes) => new TableCollection(nodes, null, context), [context]),\n    context\n  );\n  let {disabledKeys, selectionManager} = useGridState({\n    ...props,\n    collection,\n    disabledBehavior: props.disabledBehavior || 'selection'\n  });\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager,\n    showSelectionCheckboxes: props.showSelectionCheckboxes || false,\n    sortDescriptor: props.sortDescriptor,\n    isKeyboardNavigationDisabled: collection.size === 0 || isKeyboardNavigationDisabled,\n    setKeyboardNavigationDisabled,\n    sort(columnKey: Key, direction?: 'ascending' | 'descending') {\n      props.onSortChange({\n        column: columnKey,\n        direction: direction ?? (props.sortDescriptor?.column === columnKey\n          ? OPPOSITE_SORT_DIRECTION[props.sortDescriptor.direction]\n          : 'ascending')\n      });\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getFirstItem, getLastItem} from '@react-stately/collections';\nimport {GridCollection} from '@react-stately/grid';\nimport {GridNode} from '@react-types/grid';\nimport {TableCollection as ITableCollection} from '@react-types/table';\nimport {Key} from '@react-types/shared';\n\ninterface GridCollectionOptions {\n  showSelectionCheckboxes?: boolean,\n  showDragButtons?: boolean\n}\n\nconst ROW_HEADER_COLUMN_KEY = 'row-header-column-' + Math.random().toString(36).slice(2);\nlet ROW_HEADER_COLUMN_KEY_DRAG = 'row-header-column-' + Math.random().toString(36).slice(2);\nwhile (ROW_HEADER_COLUMN_KEY === ROW_HEADER_COLUMN_KEY_DRAG) {\n  ROW_HEADER_COLUMN_KEY_DRAG = 'row-header-column-' + Math.random().toString(36).slice(2);\n}\n\n/** @private */\nexport function buildHeaderRows<T>(keyMap: Map<Key, GridNode<T>>, columnNodes: GridNode<T>[]): GridNode<T>[] {\n  if (columnNodes.length === 0) {\n    return [];\n  }\n\n  let columns: GridNode<T>[][] = [];\n  let seen = new Map();\n  for (let column of columnNodes) {\n    let parentKey = column.parentKey;\n    let col = [column];\n\n    while (parentKey) {\n      let parent: GridNode<T> = keyMap.get(parentKey);\n      if (!parent) {\n        break;\n      }\n\n      // If we've already seen this parent, than it is shared\n      // with a previous column. If the current column is taller\n      // than the previous column, than we need to shift the parent\n      // in the previous column so it's level with the current column.\n      if (seen.has(parent)) {\n        parent.colspan++;\n\n        let {column, index} = seen.get(parent);\n        if (index > col.length) {\n          break;\n        }\n\n        for (let i = index; i < col.length; i++) {\n          column.splice(i, 0, null);\n        }\n\n        // Adjust shifted indices\n        for (let i = col.length; i < column.length; i++) {\n          // eslint-disable-next-line max-depth\n          if (column[i] && seen.has(column[i])) {\n            seen.get(column[i]).index = i;\n          }\n        }\n      } else {\n        parent.colspan = 1;\n        col.push(parent);\n        seen.set(parent, {column: col, index: col.length - 1});\n      }\n\n      parentKey = parent.parentKey;\n    }\n\n    columns.push(col);\n    column.index = columns.length - 1;\n  }\n\n  let maxLength = Math.max(...columns.map(c => c.length));\n  let headerRows = Array(maxLength).fill(0).map(() => []);\n\n  // Convert columns into rows.\n  let colIndex = 0;\n  for (let column of columns) {\n    let i = maxLength - 1;\n    for (let item of column) {\n      if (item) {\n        // Fill the space up until the current column with a placeholder\n        let row = headerRows[i];\n        let rowLength = row.reduce((p, c) => p + c.colspan, 0);\n        if (rowLength < colIndex) {\n          let placeholder: GridNode<T> = {\n            type: 'placeholder',\n            key: 'placeholder-' + item.key,\n            colspan: colIndex - rowLength,\n            index: rowLength,\n            value: null,\n            rendered: null,\n            level: i,\n            hasChildNodes: false,\n            childNodes: [],\n            textValue: null\n          };\n\n          // eslint-disable-next-line max-depth\n          if (row.length > 0) {\n            row[row.length - 1].nextKey = placeholder.key;\n            placeholder.prevKey = row[row.length - 1].key;\n          }\n\n          row.push(placeholder);\n        }\n\n        if (row.length > 0) {\n          row[row.length - 1].nextKey = item.key;\n          item.prevKey = row[row.length - 1].key;\n        }\n\n        item.level = i;\n        item.colIndex = colIndex;\n        row.push(item);\n      }\n\n      i--;\n    }\n\n    colIndex++;\n  }\n\n  // Add placeholders at the end of each row that is shorter than the maximum\n  let i = 0;\n  for (let row of headerRows) {\n    let rowLength = row.reduce((p, c) => p + c.colspan, 0);\n    if (rowLength < columnNodes.length) {\n      let placeholder: GridNode<T> = {\n        type: 'placeholder',\n        key: 'placeholder-' + row[row.length - 1].key,\n        colspan: columnNodes.length - rowLength,\n        index: rowLength,\n        value: null,\n        rendered: null,\n        level: i,\n        hasChildNodes: false,\n        childNodes: [],\n        textValue: null,\n        prevKey: row[row.length - 1].key\n      };\n\n      row.push(placeholder);\n    }\n\n    i++;\n  }\n\n  return headerRows.map((childNodes, index) => {\n    let row: GridNode<T> = {\n      type: 'headerrow',\n      key: 'headerrow-' + index,\n      index,\n      value: null,\n      rendered: null,\n      level: 0,\n      hasChildNodes: true,\n      childNodes,\n      textValue: null\n    };\n\n    return row;\n  });\n}\n\nexport class TableCollection<T> extends GridCollection<T> implements ITableCollection<T> {\n  headerRows: GridNode<T>[];\n  columns: GridNode<T>[];\n  rowHeaderColumnKeys: Set<Key>;\n  body: GridNode<T>;\n  _size: number = 0;\n\n  constructor(nodes: Iterable<GridNode<T>>, prev?: ITableCollection<T>, opts?: GridCollectionOptions) {\n    let rowHeaderColumnKeys: Set<Key> = new Set();\n    let body: GridNode<T>;\n    let columns: GridNode<T>[] = [];\n    // Add cell for selection checkboxes if needed.\n    if (opts?.showSelectionCheckboxes) {\n      let rowHeaderColumn: GridNode<T> = {\n        type: 'column',\n        key: ROW_HEADER_COLUMN_KEY,\n        value: null,\n        textValue: '',\n        level: 0,\n        index: opts?.showDragButtons ? 1 : 0,\n        hasChildNodes: false,\n        rendered: null,\n        childNodes: [],\n        props: {\n          isSelectionCell: true\n        }\n      };\n\n      columns.unshift(rowHeaderColumn);\n    }\n\n    // Add cell for drag buttons if needed.\n    if (opts?.showDragButtons) {\n      let rowHeaderColumn: GridNode<T> = {\n        type: 'column',\n        key: ROW_HEADER_COLUMN_KEY_DRAG,\n        value: null,\n        textValue: '',\n        level: 0,\n        index: 0,\n        hasChildNodes: false,\n        rendered: null,\n        childNodes: [],\n        props: {\n          isDragButtonCell: true\n        }\n      };\n\n      columns.unshift(rowHeaderColumn);\n    }\n\n    let rows = [];\n    let columnKeyMap = new Map();\n    let visit = (node: GridNode<T>) => {\n      switch (node.type) {\n        case 'body':\n          body = node;\n          break;\n        case 'column':\n          columnKeyMap.set(node.key, node);\n          if (!node.hasChildNodes) {\n            columns.push(node);\n\n            if (node.props.isRowHeader) {\n              rowHeaderColumnKeys.add(node.key);\n            }\n          }\n          break;\n        case 'item':\n          rows.push(node);\n          return; // do not go into childNodes\n      }\n      for (let child of node.childNodes) {\n        visit(child);\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let headerRows = buildHeaderRows(columnKeyMap, columns) as GridNode<T>[];\n    headerRows.forEach((row, i) => rows.splice(i, 0, row));\n\n    super({\n      columnCount: columns.length,\n      items: rows,\n      visitNode: node => {\n        node.column = columns[node.index];\n        return node;\n      }\n    });\n    this.columns = columns;\n    this.rowHeaderColumnKeys = rowHeaderColumnKeys;\n    this.body = body;\n    this.headerRows = headerRows;\n    this._size = [...body.childNodes].length;\n\n    // Default row header column to the first one.\n    if (this.rowHeaderColumnKeys.size === 0) {\n      this.rowHeaderColumnKeys.add(this.columns.find(column => !column.props?.isDragButtonCell && !column.props?.isSelectionCell).key);\n    }\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.body.childNodes;\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.prevKey : null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.nextKey : null;\n  }\n\n  getFirstKey() {\n    return getFirstItem(this.body.childNodes)?.key;\n  }\n\n  getLastKey() {\n    return getLastItem(this.body.childNodes)?.key;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key);\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n\n  getTextValue(key: Key): string {\n    let row = this.getItem(key);\n    if (!row) {\n      return '';\n    }\n\n    // If the row has a textValue, use that.\n    if (row.textValue) {\n      return row.textValue;\n    }\n\n    // Otherwise combine the text of each of the row header columns.\n    let rowHeaderColumnKeys = this.rowHeaderColumnKeys;\n    if (rowHeaderColumnKeys) {\n      let text = [];\n      for (let cell of row.childNodes) {\n        let column = this.columns[cell.index];\n        if (rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          text.push(cell.textValue);\n        }\n\n        if (text.length === rowHeaderColumnKeys.size) {\n          break;\n        }\n      }\n\n      return text.join(' ');\n    }\n\n    return '';\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBuilderContext} from './useTableState';\nimport {PartialNode} from '@react-stately/collections';\nimport React, {JSX, ReactElement} from 'react';\nimport {TableHeaderProps} from '@react-types/table';\n\nfunction TableHeader<T>(props: TableHeaderProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nTableHeader.getCollectionNode = function* getCollectionNode<T>(props: TableHeaderProps<T>, context: CollectionBuilderContext<T>): Generator<PartialNode<T>, void, any> {\n  let {children, columns} = props;\n\n  // Clear columns so they aren't double added in strict mode.\n  context.columns = [];\n\n  if (typeof children === 'function') {\n    if (!columns) {\n      throw new Error('props.children was a function but props.columns is missing');\n    }\n\n    for (let column of columns) {\n      yield {\n        type: 'column',\n        value: column,\n        renderer: children\n      };\n    }\n  } else {\n    let columns: PartialNode<T>[] = [];\n    React.Children.forEach(children, column => {\n      columns.push({\n        type: 'column',\n        element: column\n      });\n    });\n\n    yield* columns;\n  }\n};\n\n/**\n * A TableHeader is a container for the Column elements in a Table. Columns can be statically defined\n * as children, or generated dynamically using a function based on the data passed to the `columns` prop.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _TableHeader = TableHeader as <T>(props: TableHeaderProps<T>) => JSX.Element;\nexport {_TableHeader as TableHeader};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from '@react-stately/collections';\nimport React, {JSX, ReactElement} from 'react';\nimport {TableBodyProps} from '@react-types/table';\n\nfunction TableBody<T>(props: TableBodyProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nTableBody.getCollectionNode = function* getCollectionNode<T>(props: TableBodyProps<T>): Generator<PartialNode<T>> {\n  let {children, items} = props;\n  yield {\n    type: 'body',\n    hasChildNodes: true,\n    props,\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n\n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, item => {\n          items.push({\n            type: 'item',\n            element: item\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n/**\n * A TableBody is a container for the Row elements of a Table. Rows can be statically defined\n * as children, or generated dynamically using a function based on the data passed to the `items` prop.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _TableBody = TableBody as <T>(props: TableBodyProps<T>) => JSX.Element;\nexport {_TableBody as TableBody};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBuilderContext} from './useTableState';\nimport {ColumnProps} from '@react-types/table';\nimport {GridNode} from '@react-types/grid';\nimport {PartialNode} from '@react-stately/collections';\nimport React, {JSX, ReactElement} from 'react';\n\nfunction Column<T>(props: ColumnProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nColumn.getCollectionNode = function* getCollectionNode<T>(props: ColumnProps<T>, context: CollectionBuilderContext<T>): Generator<PartialNode<T>, void, GridNode<T>[]> {\n  let {title, children, childColumns} = props;\n\n  let rendered = title || children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'];\n\n  let fullNodes = yield {\n    type: 'column',\n    hasChildNodes: !!childColumns || (title && React.Children.count(children) > 0),\n    rendered,\n    textValue,\n    props,\n    *childNodes() {\n      if (childColumns) {\n        for (let child of childColumns) {\n          yield {\n            type: 'column',\n            value: child\n          };\n        }\n      } else if (title) {\n        let childColumns: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          childColumns.push({\n            type: 'column',\n            element: child as ReactElement<ColumnProps<T>>\n          });\n        });\n\n        yield* childColumns;\n      }\n    },\n    shouldInvalidate(newContext: CollectionBuilderContext<T>) {\n      // This is a bit of a hack, but it works.\n      // If this method is called, then there's a cached version of this node available.\n      // But, we need to keep the list of columns in the new context up to date.\n      updateContext(newContext);\n      return false;\n    }\n  };\n\n  let updateContext = (context: CollectionBuilderContext<T>) => {\n    // register leaf columns on the context so that <Row> can access them\n    for (let node of fullNodes) {\n      if (!node.hasChildNodes) {\n        context.columns.push(node);\n      }\n    }\n  };\n\n  updateContext(context);\n};\n\n/**\n * A Column represents a field of each item within a Table. Columns may also contain nested\n * Column elements to represent column groups. Nested columns can be statically defined as\n * children, or dynamically generated using a function based on the `childColumns` prop.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Column = Column as <T>(props: ColumnProps<T>) => JSX.Element;\nexport {_Column as Column};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBuilderContext} from './useTableState';\nimport {PartialNode} from '@react-stately/collections';\nimport React, {JSX, ReactElement} from 'react';\nimport {RowProps} from '@react-types/table';\n\nfunction Row<T>(props: RowProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nRow.getCollectionNode = function* getCollectionNode<T>(props: RowProps<T>, context: CollectionBuilderContext<T>): Generator<PartialNode<T>> {\n  let {children, textValue, UNSTABLE_childItems} = props;\n\n  yield {\n    type: 'item',\n    props: props,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: true,\n    *childNodes() {\n      // Process cells first\n      if (context.showDragButtons) {\n        yield {\n          type: 'cell',\n          key: 'header-drag', // this is combined with the row key by CollectionBuilder\n          props: {\n            isDragButtonCell: true\n          }\n        };\n      }\n\n      if (context.showSelectionCheckboxes && context.selectionMode !== 'none') {\n        yield {\n          type: 'cell',\n          key: 'header', // this is combined with the row key by CollectionBuilder\n          props: {\n            isSelectionCell: true\n          }\n        };\n      }\n\n      if (typeof children === 'function') {\n        for (let column of context.columns) {\n          yield {\n            type: 'cell',\n            element: children(column.key),\n            key: column.key // this is combined with the row key by CollectionBuilder\n          };\n        }\n\n        if (UNSTABLE_childItems) {\n          for (let child of UNSTABLE_childItems) {\n            // Note: in order to reuse the render function of TableBody for our child rows, we just need to yield a type and a value here. CollectionBuilder will then look up\n            // the parent renderer and use that to build the full node of this child row, using the value provided here to generate the cells\n            yield {\n              type: 'item',\n              value: child\n            };\n          }\n        }\n      } else {\n        let cells: PartialNode<T>[] = [];\n        let childRows: PartialNode<T>[] = [];\n        React.Children.forEach(children, node => {\n          if (node.type === Row) {\n            if (cells.length < context.columns.length) {\n              throw new Error('All of a Row\\'s child Cells must be positioned before any child Rows.');\n            }\n\n            childRows.push({\n              type: 'item',\n              element: node\n            });\n          } else {\n            cells.push({\n              type: 'cell',\n              element: node\n            });\n          }\n        });\n\n        if (cells.length !== context.columns.length) {\n          throw new Error(`Cell count must match column count. Found ${cells.length} cells and ${context.columns.length} columns.`);\n        }\n\n        yield* cells;\n        yield* childRows;\n      }\n    },\n    shouldInvalidate(newContext: CollectionBuilderContext<T>) {\n      // Invalidate all rows if the columns changed.\n      return newContext.columns.length !== context.columns.length ||\n        newContext.columns.some((c, i) => c.key !== context.columns[i].key) ||\n        newContext.showSelectionCheckboxes !== context.showSelectionCheckboxes ||\n        newContext.showDragButtons !== context.showDragButtons ||\n        newContext.selectionMode !== context.selectionMode;\n    }\n  };\n};\n\n/**\n * A Row represents a single item in a Table and contains Cell elements for each column.\n * Cells can be statically defined as children, or generated dynamically using a function\n * based on the columns defined in the TableHeader.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Row = Row as <T>(props: RowProps<T>) => JSX.Element;\nexport {_Row as Row};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CellProps} from '@react-types/table';\nimport {JSX, ReactElement} from 'react';\nimport {PartialNode} from '@react-stately/collections';\n\nfunction Cell(props: CellProps): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nCell.getCollectionNode = function* getCollectionNode<T>(props: CellProps): Generator<PartialNode<T>> {\n  let {children} = props;\n\n  let textValue = props.textValue || (typeof children === 'string' ? children : '') || props['aria-label'] || '';\n  yield {\n    type: 'cell',\n    props: props,\n    rendered: children,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: false\n  };\n};\n\n/**\n * A Cell represents the value of a single Column within a Table Row.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Cell = Cell as (props: CellProps) => JSX.Element;\nexport {_Cell as Cell};\n", "/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBuilder} from '@react-stately/collections';\nimport {GridNode} from '@react-types/grid';\nimport {Key} from '@react-types/shared';\nimport {ReactElement, useMemo} from 'react';\nimport {TableCollection} from './TableCollection';\nimport {tableNestedRows} from '@react-stately/flags';\nimport {TableState, TableStateProps, useTableState} from './useTableState';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface TreeGridState<T> extends TableState<T> {\n  /** A set of keys for items that are expanded. */\n  expandedKeys: 'all' | Set<Key>,\n  /** Toggles the expanded state for a row by its key. */\n  toggleKey(key: Key): void,\n  /** The key map containing nodes representing the collection's tree grid structure. */\n  keyMap: Map<Key, GridNode<T>>,\n  /** The number of leaf columns provided by the user. */\n  userColumnCount: number\n}\n\nexport interface TreeGridStateProps<T> extends Omit<TableStateProps<T>, 'collection'> {\n  /** The currently expanded keys in the collection (controlled). */\n  UNSTABLE_expandedKeys?: 'all' | Iterable<Key>,\n  /** The initial expanded keys in the collection (uncontrolled). */\n  UNSTABLE_defaultExpandedKeys?: 'all' | Iterable<Key>,\n  /** Handler that is called when items are expanded or collapsed. */\n  UNSTABLE_onExpandedChange?: (keys: Set<Key>) => any\n}\n\n/**\n * Provides state management for a tree grid component. Handles building a collection\n * of columns and rows from props. In addition, it tracks and manages expanded rows, row selection, and sort order changes.\n */\nexport function UNSTABLE_useTreeGridState<T extends object>(props: TreeGridStateProps<T>): TreeGridState<T> {\n  let {\n    selectionMode = 'none',\n    showSelectionCheckboxes,\n    showDragButtons,\n    UNSTABLE_expandedKeys: propExpandedKeys,\n    UNSTABLE_defaultExpandedKeys: propDefaultExpandedKeys,\n    UNSTABLE_onExpandedChange,\n    children\n  } = props;\n\n  if (!tableNestedRows()) {\n    throw new Error('Feature flag for table nested rows must be enabled to use useTreeGridState.');\n  }\n\n  let [expandedKeys, setExpandedKeys] = useControlledState(\n    propExpandedKeys ? convertExpanded(propExpandedKeys) : undefined,\n    propDefaultExpandedKeys ? convertExpanded(propDefaultExpandedKeys) : new Set(),\n    UNSTABLE_onExpandedChange\n  );\n\n  let context = useMemo(() => ({\n    showSelectionCheckboxes: showSelectionCheckboxes && selectionMode !== 'none',\n    showDragButtons: showDragButtons,\n    selectionMode,\n    columns: []\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }), [children, showSelectionCheckboxes, selectionMode, showDragButtons]);\n\n  let builder = useMemo(() => new CollectionBuilder<T>(), []);\n  let nodes = useMemo(() => builder.build({children: children as ReactElement[]}, context), [builder, children, context]);\n  let treeGridCollection = useMemo(() => {\n    return generateTreeGridCollection<T>(nodes, {showSelectionCheckboxes, showDragButtons, expandedKeys});\n  }, [nodes, showSelectionCheckboxes, showDragButtons, expandedKeys]);\n\n  let onToggle = (key: Key) => {\n    setExpandedKeys(toggleKey(expandedKeys, key, treeGridCollection));\n  };\n\n  let collection = useMemo(() => {\n    return new TableCollection(treeGridCollection.tableNodes, null, context);\n  }, [context, treeGridCollection.tableNodes]);\n\n  let tableState = useTableState({...props, collection});\n  return {\n    ...tableState,\n    keyMap: treeGridCollection.keyMap,\n    userColumnCount: treeGridCollection.userColumnCount,\n    expandedKeys,\n    toggleKey: onToggle\n  };\n}\n\nfunction toggleKey<T>(currentExpandedKeys: 'all' | Set<Key>, key: Key, collection: TreeGridCollection<T>): Set<Key> {\n  let updatedExpandedKeys: Set<Key>;\n  if (currentExpandedKeys === 'all') {\n    updatedExpandedKeys = new Set(collection.flattenedRows.filter(row => row.props.UNSTABLE_childItems || row.props.children.length > collection.userColumnCount).map(row => row.key));\n    updatedExpandedKeys.delete(key);\n  } else {\n    updatedExpandedKeys = new Set(currentExpandedKeys);\n    if (updatedExpandedKeys.has(key)) {\n      updatedExpandedKeys.delete(key);\n    } else {\n      updatedExpandedKeys.add(key);\n    }\n  }\n\n  return updatedExpandedKeys;\n}\n\nfunction convertExpanded(expanded: 'all' | Iterable<Key>): 'all' | Set<Key> {\n  if (!expanded) {\n    return new Set<Key>();\n  }\n\n  return expanded === 'all'\n    ? 'all'\n    : new Set(expanded);\n}\n\ninterface TreeGridCollectionOptions {\n  showSelectionCheckboxes?: boolean,\n  showDragButtons?: boolean,\n  expandedKeys: 'all' | Set<Key>\n}\n\ninterface TreeGridCollection<T> {\n  keyMap: Map<Key, GridNode<T>>,\n  tableNodes: GridNode<T>[],\n  flattenedRows: GridNode<T>[],\n  userColumnCount: number\n}\nfunction generateTreeGridCollection<T>(nodes, opts: TreeGridCollectionOptions): TreeGridCollection<T> {\n  let {\n    expandedKeys = new Set()\n  } = opts;\n\n  let body: GridNode<T>;\n  let flattenedRows = [];\n  let columnCount = 0;\n  let userColumnCount = 0;\n  let originalColumns = [];\n  let keyMap = new Map();\n\n  if (opts?.showSelectionCheckboxes) {\n    columnCount++;\n  }\n\n  if (opts?.showDragButtons) {\n    columnCount++;\n  }\n\n  let topLevelRows = [];\n  let visit = (node: GridNode<T>) => {\n    switch (node.type) {\n      case 'body':\n        body = node;\n        keyMap.set(body.key, body);\n        break;\n      case 'column':\n        if (!node.hasChildNodes) {\n          userColumnCount++;\n        }\n        break;\n      case 'item':\n        topLevelRows.push(node);\n        return;\n    }\n\n    for (let child of node.childNodes) {\n      visit(child);\n    }\n  };\n\n  for (let node of nodes) {\n    if (node.type === 'column') {\n      originalColumns.push(node);\n    }\n    visit(node);\n  }\n  columnCount += userColumnCount;\n\n  // Update each grid node in the treegrid table with values specific to a treegrid structure. Also store a set of flattened row nodes for TableCollection to consume\n  let globalRowCount = 0;\n  let visitNode = (node: GridNode<T>, i?: number) => {\n    // Clone row node and its children so modifications to the node for treegrid specific values aren't applied on the nodes provided\n    // to TableCollection. Index, level, and parent keys are all changed to reflect a flattened row structure rather than the treegrid structure\n    // values automatically calculated via CollectionBuilder\n    if (node.type === 'item') {\n      let childNodes = [];\n      for (let child of node.childNodes) {\n        if (child.type === 'cell') {\n          let cellClone = {...child};\n          if (cellClone.index + 1 === columnCount) {\n            cellClone.nextKey = null;\n          }\n          childNodes.push({...cellClone});\n        }\n      }\n      let clone = {...node, childNodes: childNodes, parentKey: body.key, level: 1, index: globalRowCount++};\n      flattenedRows.push(clone);\n    }\n\n    let newProps = {};\n\n    // Assign indexOfType to cells and rows for aria-posinset\n    if (node.type !== 'placeholder' && node.type !== 'column') {\n      newProps['indexOfType'] = i;\n    }\n\n    // Use Object.assign instead of spread to preserve object reference for keyMap. Also ensures retrieving nodes\n    // via .childNodes returns the same object as the one found via keyMap look up\n    Object.assign(node, newProps);\n    keyMap.set(node.key, node);\n\n    let lastNode: GridNode<T>;\n    let rowIndex = 0;\n    for (let child of node.childNodes) {\n      if (!(child.type === 'item' && expandedKeys !== 'all' && !expandedKeys.has(node.key))) {\n        if (child.parentKey == null) {\n          // if child is a cell/expanded row/column and the parent key isn't already established by the collection, match child node to parent row\n          child.parentKey = node.key;\n        }\n\n        if (lastNode) {\n          lastNode.nextKey = child.key;\n          child.prevKey = lastNode.key;\n        } else {\n          child.prevKey = null;\n        }\n\n        if (child.type === 'item') {\n          visitNode(child, rowIndex++);\n        } else {\n          // We enforce that the cells come before rows so can just reuse cell index\n          visitNode(child, child.index);\n        }\n\n        lastNode = child;\n      }\n    }\n\n    if (lastNode) {\n      lastNode.nextKey = null;\n    }\n  };\n\n  let last: GridNode<T>;\n  topLevelRows.forEach((node: GridNode<T>, i) => {\n    visitNode(node as GridNode<T>, i);\n\n    if (last) {\n      last.nextKey = node.key;\n      node.prevKey = last.key;\n    } else {\n      node.prevKey = null;\n    }\n\n    last = node;\n  });\n\n  if (last) {\n    last.nextKey = null;\n  }\n\n  return {\n    keyMap,\n    userColumnCount,\n    flattenedRows,\n    tableNodes: [...originalColumns, {...body, childNodes: flattenedRows}]\n  };\n}\n", "'use client';\nimport { useTableState, TableColumnLayout, Column } from '@react-stately/table';\nexport { Cell, Row, TableBody, TableHeader } from '@react-stately/table';\nimport { useRef, useCallback, useMemo, forwardRef, createContext, useContext } from 'react';\nimport { FocusScope, useFocusRing } from '@react-aria/focus';\nimport { useLocale, useLocalizedStringFormatter } from '@react-aria/i18n';\nimport { useHover, usePress } from '@react-aria/interactions';\nimport { useTable, useTableRowGroup, useTableHeaderRow, useTableColumnHeader, useTableRow, useTableCell, useTableSelectionCheckbox, useTableSelectAllCheckbox } from '@react-aria/table';\nimport { mergeProps, filterDOMProps } from '@react-aria/utils';\nimport { setScrollLeft, useVirtualizer, ScrollView, layoutInfoToStyle, VirtualizerItem } from '@react-aria/virtualizer';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { TableLayout } from '@react-stately/layout';\nimport { useVirtualizerState } from '@react-stately/virtualizer';\nimport { Checkbox } from '@keystar/ui/checkbox';\nimport { ProgressCircle } from '@keystar/ui/progress';\nimport { SlotProvider } from '@keystar/ui/slots';\nimport { ClassList, tokenSchema, useStyleProps, toDataAttributes, classNames, css, transition } from '@keystar/ui/style';\nimport { TooltipTrigger, Tooltip } from '@keystar/ui/tooltip';\nimport { Text } from '@keystar/ui/typography';\nimport { isReactText } from '@keystar/ui/utils';\nimport { arrowUpIcon } from '@keystar/ui/icon/icons/arrowUpIcon';\nimport { Icon } from '@keystar/ui/icon';\nimport { jsx, jsxs } from 'react/jsx-runtime';\n\nvar localizedMessages = {\n\t\"ar-AE\": {\n\t\tloading: \"جارٍ التحميل...\",\n\t\tloadingMore: \"جارٍ تحميل المزيد...\"\n\t},\n\t\"bg-BG\": {\n\t\tloading: \"Зареждане...\",\n\t\tloadingMore: \"Зареждане на още...\"\n\t},\n\t\"cs-CZ\": {\n\t\tloading: \"Načítání...\",\n\t\tloadingMore: \"Načítání dalších...\"\n\t},\n\t\"da-DK\": {\n\t\tloading: \"Indlæser...\",\n\t\tloadingMore: \"Indlæser flere...\"\n\t},\n\t\"de-DE\": {\n\t\tloading: \"Laden...\",\n\t\tloadingMore: \"Mehr laden ...\"\n\t},\n\t\"el-GR\": {\n\t\tloading: \"Φόρτωση...\",\n\t\tloadingMore: \"Φόρτωση περισσότερων...\"\n\t},\n\t\"en-US\": {\n\t\tloading: \"Loading…\",\n\t\tloadingMore: \"Loading more…\"\n\t},\n\t\"es-ES\": {\n\t\tloading: \"Cargando…\",\n\t\tloadingMore: \"Cargando más…\"\n\t},\n\t\"et-EE\": {\n\t\tloading: \"Laadimine...\",\n\t\tloadingMore: \"Laadi rohkem...\"\n\t},\n\t\"fi-FI\": {\n\t\tloading: \"Ladataan…\",\n\t\tloadingMore: \"Ladataan lisää…\"\n\t},\n\t\"fr-FR\": {\n\t\tloading: \"Chargement...\",\n\t\tloadingMore: \"Chargement supplémentaire...\"\n\t},\n\t\"he-IL\": {\n\t\tloading: \"טוען...\",\n\t\tloadingMore: \"טוען עוד...\"\n\t},\n\t\"hr-HR\": {\n\t\tloading: \"Učitavam...\",\n\t\tloadingMore: \"Učitavam još...\"\n\t},\n\t\"hu-HU\": {\n\t\tloading: \"Betöltés folyamatban…\",\n\t\tloadingMore: \"Továbbiak betöltése folyamatban…\"\n\t},\n\t\"it-IT\": {\n\t\tloading: \"Caricamento...\",\n\t\tloadingMore: \"Caricamento altri...\"\n\t},\n\t\"ja-JP\": {\n\t\tloading: \"読み込み中...\",\n\t\tloadingMore: \"さらに読み込み中...\"\n\t},\n\t\"ko-KR\": {\n\t\tloading: \"로드 중…\",\n\t\tloadingMore: \"추가 로드 중…\"\n\t},\n\t\"lt-LT\": {\n\t\tloading: \"Įkeliama...\",\n\t\tloadingMore: \"Įkeliama daugiau...\"\n\t},\n\t\"lv-LV\": {\n\t\tloading: \"Notiek ielāde...\",\n\t\tloadingMore: \"Tiek ielādēts vēl...\"\n\t},\n\t\"nb-NO\": {\n\t\tloading: \"Laster inn ...\",\n\t\tloadingMore: \"Laster inn flere ...\"\n\t},\n\t\"nl-NL\": {\n\t\tloading: \"Laden...\",\n\t\tloadingMore: \"Meer laden...\"\n\t},\n\t\"pl-PL\": {\n\t\tloading: \"Ładowanie...\",\n\t\tloadingMore: \"Wczytywanie większej liczby...\"\n\t},\n\t\"pt-BR\": {\n\t\tloading: \"Carregando...\",\n\t\tloadingMore: \"Carregando mais...\"\n\t},\n\t\"pt-PT\": {\n\t\tloading: \"A carregar...\",\n\t\tloadingMore: \"A carregar mais...\"\n\t},\n\t\"ro-RO\": {\n\t\tloading: \"Se încarcă...\",\n\t\tloadingMore: \"Se încarcă mai multe...\"\n\t},\n\t\"ru-RU\": {\n\t\tloading: \"Загрузка...\",\n\t\tloadingMore: \"Дополнительная загрузка...\"\n\t},\n\t\"sk-SK\": {\n\t\tloading: \"Načítava sa...\",\n\t\tloadingMore: \"Načítava sa viac...\"\n\t},\n\t\"sl-SI\": {\n\t\tloading: \"Nalaganje ...\",\n\t\tloadingMore: \"Nalaganje več vsebine ...\"\n\t},\n\t\"sr-SP\": {\n\t\tloading: \"Učitavam...\",\n\t\tloadingMore: \"Učitavam još...\"\n\t},\n\t\"sv-SE\": {\n\t\tloading: \"Läser in...\",\n\t\tloadingMore: \"Läser in mer...\"\n\t},\n\t\"tr-TR\": {\n\t\tloading: \"Yükleniyor...\",\n\t\tloadingMore: \"Daha fazla yükleniyor...\"\n\t},\n\t\"uk-UA\": {\n\t\tloading: \"Завантаження…\",\n\t\tloadingMore: \"Завантаження інших об’єктів...\"\n\t},\n\t\"zh-CN\": {\n\t\tloading: \"正在加载...\",\n\t\tloadingMore: \"正在加载更多...\"\n\t},\n\t\"zh-T\": {\n\t\tloading: \"載入中…\",\n\t\tloadingMore: \"正在載入更多…\"\n\t}\n};\n\nconst tableViewClassList = new ClassList('TableView', ['cell', 'cell-wrapper', 'row']);\nconst SortIndicator = () => {\n  // fix alignment: reduce the space the icon takes up, w/o affecting the icon layout itself\n  let labelHeight = tokenSchema.typography.text.regular.capheight;\n  return /*#__PURE__*/jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: css({\n      alignItems: 'center',\n      display: 'flex',\n      flexShrink: 0,\n      height: labelHeight,\n      justifyContent: 'center',\n      marginInline: tokenSchema.size.space.small,\n      opacity: 0,\n      position: 'relative',\n      transition: transition(['opacity', 'transform'], {\n        easing: 'easeOut'\n      }),\n      width: labelHeight,\n      svg: {\n        position: 'absolute'\n      },\n      ['[aria-sort=\"ascending\"] &, [aria-sort=\"descending\"] &']: {\n        opacity: 1\n      },\n      ['[aria-sort=\"descending\"] &']: {\n        transform: 'rotate(180deg)'\n      }\n    }),\n    children: /*#__PURE__*/jsx(Icon, {\n      src: arrowUpIcon\n    })\n  });\n};\n\n// ============================================================================\n// HOOKS\n// ============================================================================\n\n// Table root\n// ----------------------------------------------------------------------------\n\nfunction useTableStyleProps(props) {\n  let {\n    density,\n    overflowMode,\n    prominence\n  } = props;\n  let styleProps = useStyleProps(props);\n  return {\n    ...toDataAttributes({\n      density,\n      overflowMode,\n      prominence\n    }),\n    className: classNames(tableViewClassList.element('root'), styleProps.className, css({\n      display: 'flex',\n      flexDirection: 'column',\n      isolation: 'isolate',\n      minHeight: 0,\n      minWidth: 0,\n      outline: 'none',\n      position: 'relative',\n      userSelect: 'none'\n    })),\n    style: styleProps.style\n  };\n}\n\n// Row group (head/body/foot)\n// ----------------------------------------------------------------------------\n\nfunction useHeaderWrapperStyleProps({\n  style\n} = {}) {\n  return {\n    className: css({\n      overflow: 'hidden',\n      position: 'relative',\n      boxSizing: 'content-box',\n      flex: 'none',\n      // keep aligned with the border of the body\n      [`${tableViewClassList.selector('root')}:not([data-prominence=\"low\"]) &`]: {\n        borderLeft: `${tokenSchema.size.border.regular} solid transparent`,\n        borderRight: `${tokenSchema.size.border.regular} solid transparent`\n      }\n    }),\n    style\n  };\n}\nfunction useHeadStyleProps({\n  style\n} = {}) {\n  return {\n    className: css({\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexDirection: 'column'\n    }),\n    style\n  };\n}\nfunction useBodyStyleProps({\n  style\n} = {}) {\n  return {\n    className: css({\n      [`${tableViewClassList.selector('root')}[data-prominence=\"low\"] &`]: {\n        borderBlock: `${tokenSchema.size.border.regular} solid ${tokenSchema.color.border.muted}`\n      },\n      [`${tableViewClassList.selector('root')}:not([data-prominence=\"low\"]) &`]: {\n        backgroundColor: tokenSchema.color.background.canvas,\n        border: `${tokenSchema.size.border.regular} solid ${tokenSchema.color.border.muted}`,\n        borderRadius: tokenSchema.size.radius.medium,\n        /* Fix scrollbars on iOS with sticky row headers */\n        transform: 'translate3d(0, 0, 0)'\n      }\n    }),\n    style\n  };\n}\n\n// Cell common\n// ----------------------------------------------------------------------------\n\nconst commonCellStyles = {\n  // borderBottom: `${tokenSchema.size.border.regular} solid ${tokenSchema.color.border.neutral}`,\n  boxSizing: 'border-box',\n  cursor: 'default',\n  display: 'flex',\n  height: '100%',\n  justifyContent: 'flex-start',\n  minWidth: 0,\n  outline: 0,\n  paddingInline: tokenSchema.size.space.medium,\n  position: 'relative',\n  // Density\n  paddingBlock: tokenSchema.size.space.medium,\n  [`${tableViewClassList.selector('root')}[data-density=\"compact\"] &:not([role=\"columnheader\"])`]: {\n    paddingBlock: tokenSchema.size.space.regular\n  },\n  [`${tableViewClassList.selector('root')}[data-density=\"spacious\"] &:not([role=\"columnheader\"])`]: {\n    paddingBlock: tokenSchema.size.space.large\n  },\n  // wrapping text shouldn't be centered\n  alignItems: 'center',\n  [`${tableViewClassList.selector('root')}[data-overflow-mode=\"wrap\"] &:not([role=\"columnheader\"])`]: {\n    alignItems: 'start'\n  }\n};\nfunction useCellStyleProps(props, state) {\n  const className = classNames(tableViewClassList.element('cell'), css([commonCellStyles, {\n    // Alignment\n    '&[data-align=\"end\"]': {\n      justifyContent: 'flex-end',\n      textAlign: 'end'\n    },\n    '&[data-align=\"center\"]': {\n      justifyContent: 'center',\n      textAlign: 'center'\n    },\n    // focus ring\n    '&[data-focus=\"visible\"]::after': {\n      borderRadius: tokenSchema.size.radius.small,\n      boxShadow: `inset 0 0 0 ${tokenSchema.size.alias.focusRing} ${tokenSchema.color.alias.focusRing}`,\n      content: '\"\"',\n      inset: 0,\n      position: 'absolute',\n      transition: transition(['box-shadow', 'margin'], {\n        easing: 'easeOut'\n      })\n    },\n    // HEADERS\n    '&[role=\"columnheader\"]': {\n      color: tokenSchema.color.foreground.neutralSecondary,\n      ['&[aria-sort]']: {\n        cursor: 'default',\n        '&:hover, &[data-focus=\"visible\"]': {\n          color: tokenSchema.color.foreground.neutralEmphasis\n        }\n      }\n    }\n  }]));\n  return {\n    ...toDataAttributes({\n      focus: state !== null && state !== void 0 && state.isFocusVisible ? 'visible' : undefined,\n      align: props === null || props === void 0 ? void 0 : props.align\n    }),\n    className\n    // style: getStyleFromColumn(props),\n  };\n}\nfunction useSelectionCellStyleProps() {\n  return {\n    className: classNames(tableViewClassList.element('cell'), css(commonCellStyles, {\n      alignItems: 'center',\n      flex: '0 0 auto',\n      paddingInlineStart: tokenSchema.size.space.medium,\n      width: 'auto'\n    }))\n  };\n}\n\n// Row body\n// ----------------------------------------------------------------------------\n\nfunction useRowStyleProps(props, state) {\n  let {\n    style\n  } = props;\n  let calculatedRadius = `calc(${tokenSchema.size.radius.medium} - ${tokenSchema.size.border.regular})`;\n  const className = css({\n    boxSizing: 'border-box',\n    display: 'flex',\n    position: 'relative',\n    outline: 0,\n    // separators\n    '&:not(:last-child)': {\n      backgroundColor: tokenSchema.color.border.muted,\n      paddingBottom: 1\n    },\n    // prominence\n    [`${tableViewClassList.selector('root')}:not([data-prominence=\"low\"]) &`]: {\n      '&:first-child': {\n        borderStartStartRadius: calculatedRadius,\n        borderStartEndRadius: calculatedRadius\n      },\n      '&:last-child': {\n        borderEndStartRadius: calculatedRadius,\n        borderEndEndRadius: calculatedRadius\n      }\n    },\n    // focus indicator\n    '&[data-focus=\"visible\"]': {\n      '&::before': {\n        backgroundColor: tokenSchema.color.background.accentEmphasis,\n        borderRadius: tokenSchema.size.space.small,\n        content: '\"\"',\n        insetInlineStart: tokenSchema.size.space.xsmall,\n        marginBlock: tokenSchema.size.space.xsmall,\n        marginInlineEnd: `calc(${tokenSchema.size.space.small} * -1)`,\n        position: 'sticky',\n        width: tokenSchema.size.space.small,\n        zIndex: 4\n      }\n    },\n    // interactions\n    [`&[data-interaction=\"hover\"] ${tableViewClassList.selector('cell')}`]: {\n      backgroundColor: tokenSchema.color.scale.slate2\n    },\n    [`&[data-interaction=\"press\"] ${tableViewClassList.selector('cell')}`]: {\n      backgroundColor: tokenSchema.color.scale.slate3\n      // backgroundColor: tokenSchema.color.alias.backgroundPressed,\n    },\n    // selected\n    [`&[aria-selected=\"true\"] ${tableViewClassList.selector('cell')}`]: {\n      backgroundColor: tokenSchema.color.alias.backgroundSelected\n    },\n    [`&[aria-selected=\"true\"][data-interaction=\"hover\"] ${tableViewClassList.selector('cell')}`]: {\n      backgroundColor: tokenSchema.color.alias.backgroundSelectedHovered\n    }\n  });\n  return {\n    ...toDataAttributes({\n      focus: state.isFocusVisible ? 'visible' : state.isFocusWithin ? 'within' : undefined,\n      interaction: state.isPressed ? 'press' : state.isHovered ? 'hover' : undefined\n    }),\n    className: classNames(tableViewClassList.element('row'), className),\n    style\n  };\n}\n\n// Row header\n// ----------------------------------------------------------------------------\n\nfunction useRowHeaderStyleProps({\n  style\n}) {\n  const className = css({\n    display: 'flex'\n  });\n  return {\n    className,\n    style\n  };\n}\n\n// Constants\n\nconst DEFAULT_HEADER_HEIGHT = 34;\nconst DEFAULT_HIDE_HEADER_CELL_WIDTH = 34;\nconst SELECTION_CELL_DEFAULT_WIDTH = 34;\nconst ROW_HEIGHTS = {\n  compact: 26,\n  regular: 34,\n  spacious: 42\n};\n\n// Context\n\n// @ts-ignore FIXME: generics in context?\nconst TableContext = /*#__PURE__*/createContext(null);\nfunction useTableContext() {\n  return useContext(TableContext);\n}\n\n// Main\n\nfunction TableView(props) {\n  let domRef = useRef(null);\n  let headerRef = useRef(null);\n  let bodyRef = useRef(null);\n  let {\n    direction\n  } = useLocale();\n  let stringFormatter = useLocalizedStringFormatter(localizedMessages);\n  let {\n    density = 'regular',\n    overflowMode\n  } = props;\n\n  // Renderers\n\n  // This overrides collection view's renderWrapper to support DOM hierarchy.\n\n  let renderWrapper = (parent, reusableView, children, renderChildren) => {\n    let style = layoutInfoToStyle(reusableView.layoutInfo, direction, parent && parent.layoutInfo);\n    if (style.overflow === 'hidden') {\n      style.overflow = 'visible'; // needed to support position: sticky\n    }\n    if (reusableView.viewType === 'rowgroup') {\n      return /*#__PURE__*/jsx(TableBody, {\n        style: style,\n        children: renderChildren(children)\n      }, reusableView.key);\n    }\n    if (reusableView.viewType === 'header') {\n      return /*#__PURE__*/jsx(TableHead, {\n        style: style,\n        children: renderChildren(children)\n      }, reusableView.key);\n    }\n    if (reusableView.viewType === 'row') {\n      return /*#__PURE__*/jsx(TableRow, {\n        item: reusableView.content,\n        style: style,\n        hasAction: !!props.onRowAction,\n        children: renderChildren(children)\n      }, reusableView.key);\n    }\n    if (reusableView.viewType === 'headerrow') {\n      return /*#__PURE__*/jsx(TableHeaderRow, {\n        style: style,\n        item: reusableView.content,\n        children: renderChildren(children)\n      }, reusableView.key);\n    }\n    return /*#__PURE__*/jsx(VirtualizerItem, {\n      layoutInfo: reusableView.layoutInfo,\n      virtualizer: reusableView.virtualizer,\n      parent: parent === null || parent === void 0 ? void 0 : parent.layoutInfo,\n      className: classNames(tableViewClassList.element('cell-wrapper'), css({\n        backgroundColor: tokenSchema.color.background.canvas\n      })),\n      children: reusableView.rendered\n    }, reusableView.key);\n  };\n  let renderView = (type, item) => {\n    var _item$index, _item$colspan;\n    switch (type) {\n      case 'header':\n      case 'rowgroup':\n      case 'section':\n      case 'row':\n      case 'headerrow':\n        return null;\n      case 'cell':\n        {\n          if (item.props.isSelectionCell) {\n            return /*#__PURE__*/jsx(TableCheckboxCell, {\n              cell: item\n            });\n          }\n          return /*#__PURE__*/jsx(TableCell, {\n            cell: item,\n            overflowMode: overflowMode\n          });\n        }\n      case 'placeholder':\n        return /*#__PURE__*/jsx(\"div\", {\n          role: \"gridcell\",\n          \"aria-colindex\": ((_item$index = item.index) !== null && _item$index !== void 0 ? _item$index : 0) + 1,\n          \"aria-colspan\": ((_item$colspan = item.colspan) !== null && _item$colspan !== void 0 ? _item$colspan : 0) > 1 ? item.colspan : undefined\n        });\n      case 'column':\n        if (item.props.isSelectionCell) {\n          return /*#__PURE__*/jsx(TableSelectAllCell, {\n            column: item\n          });\n        }\n        if (item.props.hideHeader) {\n          return /*#__PURE__*/jsxs(TooltipTrigger, {\n            placement: \"top\",\n            trigger: \"focus\",\n            children: [/*#__PURE__*/jsx(TableColumnHeader, {\n              column: item\n            }), /*#__PURE__*/jsx(Tooltip, {\n              children: item.rendered\n            })]\n          });\n        }\n        return /*#__PURE__*/jsx(TableColumnHeader, {\n          column: item\n        });\n      case 'loader':\n        return /*#__PURE__*/jsx(CenteredWrapper, {\n          children: /*#__PURE__*/jsx(ProgressCircle, {\n            isIndeterminate: true,\n            \"aria-label\": state.collection.size > 0 ? stringFormatter.format('loadingMore') : stringFormatter.format('loading')\n          })\n        });\n      case 'empty':\n        {\n          let emptyState = props.renderEmptyState ? props.renderEmptyState() : null;\n          if (emptyState == null) {\n            return null;\n          }\n          return /*#__PURE__*/jsx(CenteredWrapper, {\n            children: emptyState\n          });\n        }\n    }\n  };\n  let state = useTableState({\n    ...props,\n    showSelectionCheckboxes: props.selectionMode === 'multiple'\n  });\n  const getDefaultWidth = useCallback(({\n    props: {\n      hideHeader,\n      isSelectionCell\n    }\n  }) => {\n    if (hideHeader) {\n      return DEFAULT_HIDE_HEADER_CELL_WIDTH;\n    } else if (isSelectionCell) {\n      return SELECTION_CELL_DEFAULT_WIDTH;\n    }\n  }, []);\n  const getDefaultMinWidth = useCallback(({\n    props: {\n      hideHeader,\n      isSelectionCell\n    }\n  }) => {\n    if (hideHeader) {\n      return DEFAULT_HIDE_HEADER_CELL_WIDTH;\n    } else if (isSelectionCell) {\n      return SELECTION_CELL_DEFAULT_WIDTH;\n    }\n    return 75;\n  }, []);\n  let columnLayout = useMemo(() => new TableColumnLayout({\n    getDefaultWidth,\n    getDefaultMinWidth\n  }), [getDefaultWidth, getDefaultMinWidth]);\n  let tableLayout = useMemo(() => new TableLayout({\n    // If props.rowHeight is auto, then use estimated heights, otherwise use fixed heights.\n    rowHeight: overflowMode === 'wrap' ? undefined : ROW_HEIGHTS[density],\n    estimatedRowHeight: overflowMode === 'wrap' ? ROW_HEIGHTS[density] : undefined,\n    headingHeight: overflowMode === 'wrap' ? undefined : DEFAULT_HEADER_HEIGHT,\n    estimatedHeadingHeight: overflowMode === 'wrap' ? DEFAULT_HEADER_HEIGHT : undefined,\n    columnLayout,\n    initialCollection: state.collection\n  }),\n  // don't recompute when state.collection changes, only used for initial value\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [overflowMode, density, columnLayout]);\n\n  // Use a proxy so that a new object is created for each render so that alternate instances aren't affected by mutation.\n  // This can be thought of as equivalent to `{…tableLayout, tableState: state}`, but works with classes as well.\n  let layout = useMemo(() => {\n    let proxy = new Proxy(tableLayout, {\n      get(target, prop, receiver) {\n        return prop === 'tableState' ? state : Reflect.get(target, prop, receiver);\n      }\n    });\n    return proxy;\n  }, [state, tableLayout]);\n  let {\n    gridProps\n  } = useTable({\n    ...props,\n    isVirtualized: true,\n    layout\n  }, state, domRef);\n  const isEmpty = state.collection.size === 0;\n  return /*#__PURE__*/jsx(TableContext.Provider, {\n    value: {\n      isEmpty,\n      layout,\n      state\n    },\n    children: /*#__PURE__*/jsx(TableVirtualizer, {\n      layout: layout,\n      collection: state.collection,\n      renderView: renderView,\n      renderWrapper: renderWrapper,\n      bodyRef: bodyRef,\n      domRef: domRef,\n      headerRef: headerRef,\n      ...gridProps,\n      ...props\n    })\n  });\n}\nfunction TableVirtualizer(props) {\n  var _layout$getLayoutInfo;\n  let {\n    layout,\n    collection,\n    // focusedKey,\n    renderView,\n    renderWrapper,\n    domRef,\n    bodyRef,\n    headerRef,\n    disallowEmptySelection: UNUSED_disallowEmptySelection,\n    onRowAction: UNUSED_onRowAction,\n    onSelectionChange: UNUSED_onSelectionChange,\n    onSortChange: UNUSED_onSortChange,\n    overflowMode: UNUSED_overflowMode,\n    renderEmptyState: UNUSED_renderEmptyState,\n    selectedKeys: UNUSED_selectedKeys,\n    sortDescriptor: UNUSED_sortDescriptor,\n    selectionMode,\n    ...otherProps\n  } = props;\n  let {\n    direction\n  } = useLocale();\n  let loadingState = collection.body.props.loadingState;\n  let isLoading = loadingState === 'loading' || loadingState === 'loadingMore';\n  let onLoadMore = collection.body.props.onLoadMore;\n  let virtualizerState = useVirtualizerState({\n    layout,\n    collection,\n    renderView,\n    renderWrapper,\n    onVisibleRectChange(rect) {\n      let bodyEl = bodyRef.current;\n      if (bodyEl) {\n        bodyEl.scrollTop = rect.y;\n        setScrollLeft(bodyEl, direction, rect.x);\n      }\n    }\n  });\n  let styleProps = useTableStyleProps(props);\n\n  // Sync the scroll position from the table body to the header container.\n  let syncScroll = useCallback(() => {\n    let bodyEl = bodyRef.current;\n    let headerEl = headerRef.current;\n    if (bodyEl && headerEl) {\n      headerEl.scrollLeft = bodyEl.scrollLeft;\n    }\n  }, [bodyRef, headerRef]);\n  let scrollToItem = useCallback(key => {\n    let item = collection.getItem(key);\n    let column = collection.columns[0];\n    let virtualizer = virtualizerState.virtualizer;\n    virtualizer.scrollToItem(key, {\n      duration: 0,\n      // Prevent scrolling to the top when clicking on column headers.\n      shouldScrollY: (item === null || item === void 0 ? void 0 : item.type) !== 'column',\n      // Offset scroll position by width of selection cell\n      // (which is sticky and will overlap the cell we're scrolling to).\n      offsetX: column.props.isSelectionCell || column.props.isDragButtonCell ? layout.getColumnWidth(column.key) : 0\n    });\n\n    // Sync the scroll positions of the column headers and the body so scrollIntoViewport can\n    // properly decide if the column is outside the viewport or not\n    syncScroll();\n  }, [collection, layout, syncScroll, virtualizerState.virtualizer]);\n  let memoedVirtualizerProps = useMemo(() => ({\n    scrollToItem,\n    isLoading,\n    onLoadMore\n  }), [scrollToItem, isLoading, onLoadMore]);\n  let {\n    virtualizerProps,\n    scrollViewProps\n  } = useVirtualizer(memoedVirtualizerProps, virtualizerState, domRef);\n  let mergedProps = mergeProps(filterDOMProps(otherProps), virtualizerProps);\n  const [headerView, bodyView] = virtualizerState.visibleViews;\n  let headerHeight = ((_layout$getLayoutInfo = layout.getLayoutInfo('header')) === null || _layout$getLayoutInfo === void 0 ? void 0 : _layout$getLayoutInfo.rect.height) || 0;\n  let bodyStyleProps = useBodyStyleProps({\n    style: {\n      flex: 1\n    }\n  });\n  return /*#__PURE__*/jsx(FocusScope, {\n    children: /*#__PURE__*/jsxs(\"div\", {\n      ...mergedProps,\n      ...styleProps,\n      ref: domRef,\n      children: [/*#__PURE__*/jsx(TableHeaderWrapper, {\n        ref: headerRef,\n        style: {\n          height: headerHeight,\n          willChange: virtualizerState.isScrolling ? 'scroll-position' : undefined\n        },\n        children: headerView\n      }), /*#__PURE__*/jsx(ScrollView, {\n        ...scrollViewProps,\n        ...bodyStyleProps,\n        role: \"presentation\",\n        innerStyle: {\n          overflow: 'visible'\n        },\n        ref: bodyRef,\n        contentSize: virtualizerState.contentSize,\n        onScrollStart: virtualizerState.startScrolling,\n        onScrollEnd: virtualizerState.endScrolling,\n        onScroll: syncScroll,\n        children: bodyView\n      })]\n    })\n  });\n}\n\n// Styled components\n// ------------------------------\n\nfunction TableHead({\n  children,\n  style\n}) {\n  let {\n    rowGroupProps\n  } = useTableRowGroup();\n  let styleProps = useHeadStyleProps({\n    style\n  });\n  return /*#__PURE__*/jsx(\"div\", {\n    ...rowGroupProps,\n    ...styleProps,\n    children: children\n  });\n}\nfunction TableBody(props) {\n  let {\n    rowGroupProps\n  } = useTableRowGroup();\n  return /*#__PURE__*/jsx(\"div\", {\n    ...rowGroupProps,\n    ...props\n  });\n}\nconst TableHeaderWrapper = /*#__PURE__*/forwardRef(function TableHeaderWrapper(props, ref) {\n  let styleProps = useHeaderWrapperStyleProps(props);\n  return /*#__PURE__*/jsx(\"div\", {\n    ref: ref,\n    role: \"presentation\",\n    ...styleProps,\n    children: props.children\n  });\n});\nfunction TableHeaderRow(props) {\n  let ref = useRef(null);\n  let {\n    state\n  } = useTableContext();\n  let {\n    rowProps\n  } = useTableHeaderRow({\n    node: props.item,\n    isVirtualized: true\n  }, state, ref);\n  let styleProps = useRowHeaderStyleProps(props);\n  return /*#__PURE__*/jsx(\"div\", {\n    ...rowProps,\n    ...styleProps,\n    ref: ref,\n    children: props.children\n  });\n}\nfunction TableColumnHeader({\n  column\n}) {\n  let ref = useRef(null);\n  let {\n    state\n  } = useTableContext();\n  let {\n    columnHeaderProps\n  } = useTableColumnHeader({\n    node: column,\n    isVirtualized: true\n  }, state, ref);\n  let {\n    isFocusVisible,\n    focusProps\n  } = useFocusRing();\n  let columnProps = column.props;\n  let cellStyleProps = useCellStyleProps(columnProps, {\n    isFocusVisible\n  });\n  return /*#__PURE__*/jsxs(\"div\", {\n    ...mergeProps(columnHeaderProps, focusProps),\n    ...cellStyleProps,\n    ref: ref,\n    children: [columnProps.allowsSorting && columnProps.align === 'end' && /*#__PURE__*/jsx(SortIndicator, {}), columnProps.hideHeader ? /*#__PURE__*/jsx(VisuallyHidden, {\n      children: column.rendered\n    }) : isReactText(column.rendered) ? /*#__PURE__*/jsx(Text, {\n      color: \"inherit\",\n      weight: \"semibold\",\n      truncate: true,\n      children: column.rendered\n    }) : column.rendered, columnProps.allowsSorting && columnProps.align !== 'end' && /*#__PURE__*/jsx(SortIndicator, {})]\n  });\n}\nfunction TableRow({\n  children,\n  hasAction,\n  item,\n  style\n}) {\n  let ref = useRef(null);\n  let {\n    state\n  } = useTableContext();\n  let allowsInteraction = state.selectionManager.selectionMode !== 'none' || hasAction;\n  let isDisabled = !allowsInteraction || state.disabledKeys.has(item.key);\n  let {\n    rowProps\n  } = useTableRow({\n    node: item,\n    isVirtualized: true\n  }, state, ref);\n  // The row should show the focus background style when any cell inside it is focused.\n  // If the row itself is focused, then it should have a blue focus indicator on the left.\n  let {\n    isFocusVisible: isFocusWithin,\n    focusProps: focusWithinProps\n  } = useFocusRing({\n    within: true\n  });\n  let {\n    isFocusVisible,\n    focusProps\n  } = useFocusRing();\n  let {\n    hoverProps,\n    isHovered\n  } = useHover({\n    isDisabled\n  });\n  let {\n    pressProps,\n    isPressed\n  } = usePress({\n    isDisabled\n  });\n  let styleProps = useRowStyleProps({\n    style\n  }, {\n    isFocusVisible,\n    isFocusWithin,\n    isHovered,\n    isPressed\n  });\n  return /*#__PURE__*/jsx(\"div\", {\n    ...mergeProps(rowProps, focusWithinProps, focusProps, hoverProps, pressProps),\n    ...styleProps,\n    ref: ref,\n    children: children\n  });\n}\nfunction TableCell({\n  cell,\n  overflowMode\n}) {\n  let ref = useRef(null);\n  let {\n    state\n  } = useTableContext();\n  let {\n    gridCellProps\n  } = useTableCell({\n    node: cell,\n    isVirtualized: true\n  }, state, ref);\n  let {\n    isFocusVisible,\n    focusProps\n  } = useFocusRing();\n  let styleProps = useCellStyleProps(cell.column.props, {\n    isFocusVisible\n  });\n  return /*#__PURE__*/jsx(\"div\", {\n    ...mergeProps(gridCellProps, focusProps),\n    ...styleProps,\n    ref: ref,\n    children: /*#__PURE__*/jsx(SlotProvider, {\n      slots: {\n        text: {\n          truncate: overflowMode === 'truncate'\n        }\n      },\n      children: isReactText(cell.rendered) ? /*#__PURE__*/jsx(Text, {\n        children: cell.rendered\n      }) : cell.rendered\n    })\n  });\n}\nfunction TableCheckboxCell({\n  cell\n}) {\n  let ref = useRef(null);\n  let {\n    state\n  } = useTableContext();\n  let {\n    gridCellProps\n  } = useTableCell({\n    node: cell,\n    isVirtualized: true\n  }, state, ref);\n  let {\n    checkboxProps\n  } = useTableSelectionCheckbox({\n    key: cell.parentKey\n  }, state);\n  let styleProps = useSelectionCellStyleProps();\n  return /*#__PURE__*/jsx(\"div\", {\n    ...styleProps,\n    ...gridCellProps,\n    ref: ref,\n    children: /*#__PURE__*/jsx(Checkbox, {\n      ...checkboxProps\n    })\n  });\n}\nfunction TableSelectAllCell({\n  column\n}) {\n  let ref = useRef(null);\n  let {\n    state\n  } = useTableContext();\n  let {\n    columnHeaderProps\n  } = useTableColumnHeader({\n    node: column,\n    isVirtualized: true\n  }, state, ref);\n  let {\n    checkboxProps\n  } = useTableSelectAllCheckbox(state);\n  let styleProps = useSelectionCellStyleProps();\n  return /*#__PURE__*/jsx(\"div\", {\n    ...styleProps,\n    ...columnHeaderProps,\n    ref: ref,\n    children: state.selectionManager.selectionMode === 'single' ? /*#__PURE__*/jsx(Text, {\n      visuallyHidden: true,\n      children: checkboxProps['aria-label']\n    }) : /*#__PURE__*/jsx(Checkbox, {\n      ...checkboxProps\n    })\n  });\n}\nfunction CenteredWrapper({\n  children\n}) {\n  let {\n    state\n  } = useTableContext();\n  return /*#__PURE__*/jsx(\"div\", {\n    role: \"row\",\n    \"aria-rowindex\": state.collection.headerRows.length + state.collection.size + 1,\n    style: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    children: /*#__PURE__*/jsx(\"div\", {\n      role: \"rowheader\",\n      \"aria-colspan\": state.collection.columns.length,\n      children: children\n    })\n  });\n}\n\n// Override TS for Column to support Keystar UI specific props.\nconst VoussoirColumn = Column;\n\nexport { VoussoirColumn as Column, TableView };\n", "{\n  \"ascending\": \"تصاعدي\",\n  \"ascendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تصاعدي\",\n  \"columnSize\": \"{value} بالبكسل\",\n  \"descending\": \"تنازلي\",\n  \"descendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تنازلي\",\n  \"resizerDescription\": \"اضغط على مفتاح Enter لبدء تغيير الحجم\",\n  \"select\": \"تحديد\",\n  \"selectAll\": \"تحديد الكل\",\n  \"sortable\": \"عمود قابل للترتيب\"\n}\n", "{\n  \"ascending\": \"възходящ\",\n  \"ascendingSort\": \"сортирано по колона {columnName} във възходящ ред\",\n  \"columnSize\": \"{value} пиксела\",\n  \"descending\": \"низходящ\",\n  \"descendingSort\": \"сортирано по колона {columnName} в низходящ ред\",\n  \"resizerDescription\": \"Натиснете „Enter“, за да започнете да преоразмерявате\",\n  \"select\": \"Изберете\",\n  \"selectAll\": \"Изберете всичко\",\n  \"sortable\": \"сортираща колона\"\n}\n", "{\n  \"ascending\": \"vzestupně\",\n  \"ascendingSort\": \"řazeno vzestupně podle sloupce {columnName}\",\n  \"columnSize\": \"{value} pixelů\",\n  \"descending\": \"sestupně\",\n  \"descendingSort\": \"řazeno sestupně podle sloupce {columnName}\",\n  \"resizerDescription\": \"Stisknutím klávesy Enter začnete měnit velikost\",\n  \"select\": \"Vybrat\",\n  \"selectAll\": \"Vybrat vše\",\n  \"sortable\": \"sloupec s možností řazení\"\n}\n", "{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sorteret efter kolonne {columnName} i stigende rækkefølge\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"faldende\",\n  \"descendingSort\": \"sorteret efter kolonne {columnName} i faldende rækkefølge\",\n  \"resizerDescription\": \"Tryk på Enter for at ændre størrelse\",\n  \"select\": \"Vælg\",\n  \"selectAll\": \"Vælg alle\",\n  \"sortable\": \"sorterbar kolonne\"\n}\n", "{\n  \"ascending\": \"aufsteigend\",\n  \"ascendingSort\": \"sortiert nach Spalte {columnName} in aufsteigender Reihenfolge\",\n  \"columnSize\": \"{value} Pixel\",\n  \"descending\": \"absteigend\",\n  \"descendingSort\": \"sortiert nach Spalte {columnName} in absteigender Reihenfolge\",\n  \"resizerDescription\": \"Eingabetaste zum Starten der Größenänderung drücken\",\n  \"select\": \"Auswählen\",\n  \"selectAll\": \"Alles auswählen\",\n  \"sortable\": \"sortierbare Spalte\"\n}\n", "{\n  \"ascending\": \"αύξουσα\",\n  \"ascendingSort\": \"διαλογή ανά στήλη {columnName} σε αύξουσα σειρά\",\n  \"columnSize\": \"{value} pixel\",\n  \"descending\": \"φθίνουσα\",\n  \"descendingSort\": \"διαλογή ανά στήλη {columnName} σε φθίνουσα σειρά\",\n  \"resizerDescription\": \"Πατήστε Enter για έναρξη της αλλαγής μεγέθους\",\n  \"select\": \"Επιλογή\",\n  \"selectAll\": \"Επιλογή όλων\",\n  \"sortable\": \"Στήλη διαλογής\"\n}\n", "{\n  \"select\": \"Select\",\n  \"selectAll\": \"Select All\",\n  \"sortable\": \"sortable column\",\n  \"ascending\": \"ascending\",\n  \"descending\": \"descending\",\n  \"ascendingSort\": \"sorted by column {columnName} in ascending order\",\n  \"descendingSort\": \"sorted by column {columnName} in descending order\",\n  \"columnSize\": \"{value} pixels\",\n  \"resizerDescription\": \"Press Enter to start resizing\"\n}\n", "{\n  \"ascending\": \"de subida\",\n  \"ascendingSort\": \"ordenado por columna {columnName} en orden de subida\",\n  \"columnSize\": \"{value} píxeles\",\n  \"descending\": \"de bajada\",\n  \"descendingSort\": \"ordenado por columna {columnName} en orden de bajada\",\n  \"resizerDescription\": \"Pulse Intro para empezar a redimensionar\",\n  \"select\": \"Seleccionar\",\n  \"selectAll\": \"Seleccionar todos\",\n  \"sortable\": \"columna ordenable\"\n}\n", "{\n  \"ascending\": \"tõusev järjestus\",\n  \"ascendingSort\": \"sorditud veeru järgi {columnName} tõusvas järjestuses\",\n  \"columnSize\": \"{value} pikslit\",\n  \"descending\": \"laskuv järjestus\",\n  \"descendingSort\": \"sorditud veeru järgi {columnName} laskuvas järjestuses\",\n  \"resizerDescription\": \"Suuruse muutmise alustamiseks vajutage klahvi Enter\",\n  \"select\": \"Vali\",\n  \"selectAll\": \"Vali kõik\",\n  \"sortable\": \"sorditav veerg\"\n}\n", "{\n  \"ascending\": \"nouseva\",\n  \"ascendingSort\": \"lajiteltu sarakkeen {columnName} mukaan nousevassa järjestyksessä\",\n  \"columnSize\": \"{value} pikseliä\",\n  \"descending\": \"laskeva\",\n  \"descendingSort\": \"lajiteltu sarakkeen {columnName} mukaan laskevassa järjestyksessä\",\n  \"resizerDescription\": \"Aloita koon muutos painamalla Enter-näppäintä\",\n  \"select\": \"Valitse\",\n  \"selectAll\": \"Valitse kaikki\",\n  \"sortable\": \"lajiteltava sarake\"\n}\n", "{\n  \"ascending\": \"croissant\",\n  \"ascendingSort\": \"trié en fonction de la colonne {columnName} par ordre croissant\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"décroissant\",\n  \"descendingSort\": \"trié en fonction de la colonne {columnName} par ordre décroissant\",\n  \"resizerDescription\": \"Appuyez sur Entrée pour commencer le redimensionnement.\",\n  \"select\": \"Sélectionner\",\n  \"selectAll\": \"Sélectionner tout\",\n  \"sortable\": \"colonne triable\"\n}\n", "{\n  \"ascending\": \"עולה\",\n  \"ascendingSort\": \"מוין לפי עמודה {columnName} בסדר עולה\",\n  \"columnSize\": \"{value} פיקסלים\",\n  \"descending\": \"יורד\",\n  \"descendingSort\": \"מוין לפי עמודה {columnName} בסדר יורד\",\n  \"resizerDescription\": \"הקש Enter כדי לשנות את הגודל\",\n  \"select\": \"בחר\",\n  \"selectAll\": \"בחר הכול\",\n  \"sortable\": \"עמודה שניתן למיין\"\n}\n", "{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"razvrstano po stupcima {columnName} rastućem redoslijedom\",\n  \"columnSize\": \"{value} piksela\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"razvrstano po stupcima {columnName} padajućim redoslijedom\",\n  \"resizerDescription\": \"Pritisnite Enter da biste započeli promenu veličine\",\n  \"select\": \"Odaberite\",\n  \"selectAll\": \"Odaberite sve\",\n  \"sortable\": \"stupac koji se može razvrstati\"\n}\n", "{\n  \"ascending\": \"növekvő\",\n  \"ascendingSort\": \"rendezve a(z) {columnName} oszlop szerint, növekvő sorrendben\",\n  \"columnSize\": \"{value} képpont\",\n  \"descending\": \"csökkenő\",\n  \"descendingSort\": \"rendezve a(z) {columnName} oszlop szerint, csökkenő sorrendben\",\n  \"resizerDescription\": \"Nyomja le az Enter billentyűt az átméretezés megkezdéséhez\",\n  \"select\": \"Kijelölés\",\n  \"selectAll\": \"Összes kijelölése\",\n  \"sortable\": \"rendezendő oszlop\"\n}\n", "{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"in ordine crescente in base alla colonna {columnName}\",\n  \"columnSize\": \"{value} pixel\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"in ordine decrescente in base alla colonna {columnName}\",\n  \"resizerDescription\": \"Premi Invio per iniziare a ridimensionare\",\n  \"select\": \"Seleziona\",\n  \"selectAll\": \"Seleziona tutto\",\n  \"sortable\": \"colonna ordinabile\"\n}\n", "{\n  \"ascending\": \"昇順\",\n  \"ascendingSort\": \"列 {columnName} を昇順で並べ替え\",\n  \"columnSize\": \"{value} ピクセル\",\n  \"descending\": \"降順\",\n  \"descendingSort\": \"列 {columnName} を降順で並べ替え\",\n  \"resizerDescription\": \"Enter キーを押してサイズ変更を開始\",\n  \"select\": \"選択\",\n  \"selectAll\": \"すべて選択\",\n  \"sortable\": \"並べ替え可能な列\"\n}\n", "{\n  \"ascending\": \"오름차순\",\n  \"ascendingSort\": \"{columnName} 열을 기준으로 오름차순으로 정렬됨\",\n  \"columnSize\": \"{value} 픽셀\",\n  \"descending\": \"내림차순\",\n  \"descendingSort\": \"{columnName} 열을 기준으로 내림차순으로 정렬됨\",\n  \"resizerDescription\": \"크기 조정을 시작하려면 Enter를 누르세요.\",\n  \"select\": \"선택\",\n  \"selectAll\": \"모두 선택\",\n  \"sortable\": \"정렬 가능한 열\"\n}\n", "{\n  \"ascending\": \"didėjančia tvarka\",\n  \"ascendingSort\": \"surikiuota pagal stulpelį {columnName} didėjančia tvarka\",\n  \"columnSize\": \"{value} piks.\",\n  \"descending\": \"mažėjančia tvarka\",\n  \"descendingSort\": \"surikiuota pagal stulpelį {columnName} mažėjančia tvarka\",\n  \"resizerDescription\": \"Paspauskite „Enter“, kad pradėtumėte keisti dydį\",\n  \"select\": \"Pasirinkti\",\n  \"selectAll\": \"Pasirinkti viską\",\n  \"sortable\": \"rikiuojamas stulpelis\"\n}\n", "{\n  \"ascending\": \"augošā secībā\",\n  \"ascendingSort\": \"kārtots pēc kolonnas {columnName} augošā secībā\",\n  \"columnSize\": \"{value} pikseļi\",\n  \"descending\": \"dilstošā secībā\",\n  \"descendingSort\": \"kārtots pēc kolonnas {columnName} dilstošā secībā\",\n  \"resizerDescription\": \"Nospiediet Enter, lai sāktu izmēru mainīšanu\",\n  \"select\": \"Atlasīt\",\n  \"selectAll\": \"Atlasīt visu\",\n  \"sortable\": \"kārtojamā kolonna\"\n}\n", "{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sortert etter kolonne {columnName} i stigende rekkefølge\",\n  \"columnSize\": \"{value} piksler\",\n  \"descending\": \"synkende\",\n  \"descendingSort\": \"sortert etter kolonne {columnName} i synkende rekkefølge\",\n  \"resizerDescription\": \"Trykk på Enter for å starte størrelsesendring\",\n  \"select\": \"Velg\",\n  \"selectAll\": \"Velg alle\",\n  \"sortable\": \"kolonne som kan sorteres\"\n}\n", "{\n  \"ascending\": \"oplopend\",\n  \"ascendingSort\": \"gesorteerd in oplopende volgorde in kolom {columnName}\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"aflopend\",\n  \"descendingSort\": \"gesorteerd in aflopende volgorde in kolom {columnName}\",\n  \"resizerDescription\": \"Druk op Enter om het formaat te wijzigen\",\n  \"select\": \"Selecteren\",\n  \"selectAll\": \"Alles selecteren\",\n  \"sortable\": \"sorteerbare kolom\"\n}\n", "{\n  \"ascending\": \"rosnąco\",\n  \"ascendingSort\": \"posortowano według kolumny {columnName} w porządku rosnącym\",\n  \"columnSize\": \"Liczba pikseli: {value}\",\n  \"descending\": \"malejąco\",\n  \"descendingSort\": \"posortowano według kolumny {columnName} w porządku malejącym\",\n  \"resizerDescription\": \"Naciśnij Enter, aby rozpocząć zmienianie rozmiaru\",\n  \"select\": \"Zaznacz\",\n  \"selectAll\": \"Zaznacz wszystko\",\n  \"sortable\": \"kolumna z możliwością sortowania\"\n}\n", "{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"classificado pela coluna {columnName} em ordem crescente\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"classificado pela coluna {columnName} em ordem decrescente\",\n  \"resizerDescription\": \"Pressione Enter para começar a redimensionar\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"coluna classificável\"\n}\n", "{\n  \"ascending\": \"ascendente\",\n  \"ascendingSort\": \"Ordenar por coluna {columnName} em ordem ascendente\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"descendente\",\n  \"descendingSort\": \"Ordenar por coluna {columnName} em ordem descendente\",\n  \"resizerDescription\": \"Prima Enter para iniciar o redimensionamento\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"Coluna ordenável\"\n}\n", "{\n  \"ascending\": \"crescătoare\",\n  \"ascendingSort\": \"sortate după coloana {columnName} în ordine crescătoare\",\n  \"columnSize\": \"{value} pixeli\",\n  \"descending\": \"descrescătoare\",\n  \"descendingSort\": \"sortate după coloana {columnName} în ordine descrescătoare\",\n  \"resizerDescription\": \"Apăsați pe Enter pentru a începe redimensionarea\",\n  \"select\": \"Selectare\",\n  \"selectAll\": \"Selectare totală\",\n  \"sortable\": \"coloană sortabilă\"\n}\n", "{\n  \"ascending\": \"возрастание\",\n  \"ascendingSort\": \"сортировать столбец {columnName} в порядке возрастания\",\n  \"columnSize\": \"{value} пикс.\",\n  \"descending\": \"убывание\",\n  \"descendingSort\": \"сортировать столбец {columnName} в порядке убывания\",\n  \"resizerDescription\": \"Нажмите клавишу Enter для начала изменения размеров\",\n  \"select\": \"Выбрать\",\n  \"selectAll\": \"Выбрать все\",\n  \"sortable\": \"сортируемый столбец\"\n}\n", "{\n  \"ascending\": \"vzostupne\",\n  \"ascendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"columnSize\": \"Počet pixelov: {value}\",\n  \"descending\": \"zostupne\",\n  \"descendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"resizerDescription\": \"Stlačením klávesu Enter začnete zmenu veľkosti\",\n  \"select\": \"Vybrať\",\n  \"selectAll\": \"Vybrať všetko\",\n  \"sortable\": \"zoraditeľný stĺpec\"\n}\n", "{\n  \"ascending\": \"naraščajoče\",\n  \"ascendingSort\": \"razvrščeno po stolpcu {columnName} v naraščajočem vrstnem redu\",\n  \"columnSize\": \"{value} slikovnih pik\",\n  \"descending\": \"padajoče\",\n  \"descendingSort\": \"razvrščeno po stolpcu {columnName} v padajočem vrstnem redu\",\n  \"resizerDescription\": \"Pritisnite tipko Enter da začnete spreminjati velikost\",\n  \"select\": \"Izberite\",\n  \"selectAll\": \"Izberite vse\",\n  \"sortable\": \"razvrstljivi stolpec\"\n}\n", "{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"sortirano po kolonama {columnName} rastućim redosledom\",\n  \"columnSize\": \"{value} piksela\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"sortirano po kolonama {columnName} padajućim redosledom\",\n  \"resizerDescription\": \"Pritisnite Enter da biste započeli promenu veličine\",\n  \"select\": \"Izaberite\",\n  \"selectAll\": \"Izaberite sve\",\n  \"sortable\": \"kolona koja se može sortirati\"\n}\n", "{\n  \"ascending\": \"stigande\",\n  \"ascendingSort\": \"sorterat på kolumn {columnName} i stigande ordning\",\n  \"columnSize\": \"{value} pixlar\",\n  \"descending\": \"fallande\",\n  \"descendingSort\": \"sorterat på kolumn {columnName} i fallande ordning\",\n  \"resizerDescription\": \"Tryck på Retur för att börja ändra storlek\",\n  \"select\": \"Markera\",\n  \"selectAll\": \"Markera allt\",\n  \"sortable\": \"sorterbar kolumn\"\n}\n", "{\n  \"ascending\": \"artan sırada\",\n  \"ascendingSort\": \"{columnName} sütuna göre artan düzende sırala\",\n  \"columnSize\": \"{value} piksel\",\n  \"descending\": \"azalan sırada\",\n  \"descendingSort\": \"{columnName} sütuna göre azalan düzende sırala\",\n  \"resizerDescription\": \"Yeniden boyutlandırmak için Enter'a basın\",\n  \"select\": \"Seç\",\n  \"selectAll\": \"Tümünü Seç\",\n  \"sortable\": \"Sıralanabilir sütun\"\n}\n", "{\n  \"ascending\": \"висхідний\",\n  \"ascendingSort\": \"відсортовано за стовпцем {columnName} у висхідному порядку\",\n  \"columnSize\": \"{value} пікс.\",\n  \"descending\": \"низхідний\",\n  \"descendingSort\": \"відсортовано за стовпцем {columnName} у низхідному порядку\",\n  \"resizerDescription\": \"Натисніть Enter, щоб почати зміну розміру\",\n  \"select\": \"Вибрати\",\n  \"selectAll\": \"Вибрати все\",\n  \"sortable\": \"сортувальний стовпець\"\n}\n", "{\n  \"ascending\": \"升序\",\n  \"ascendingSort\": \"按列 {columnName} 升序排序\",\n  \"columnSize\": \"{value} 像素\",\n  \"descending\": \"降序\",\n  \"descendingSort\": \"按列 {columnName} 降序排序\",\n  \"resizerDescription\": \"按“输入”键开始调整大小。\",\n  \"select\": \"选择\",\n  \"selectAll\": \"全选\",\n  \"sortable\": \"可排序的列\"\n}\n", "{\n  \"ascending\": \"遞增\",\n  \"ascendingSort\": \"已依據「{columnName}」欄遞增排序\",\n  \"columnSize\": \"{value} 像素\",\n  \"descending\": \"遞減\",\n  \"descendingSort\": \"已依據「{columnName}」欄遞減排序\",\n  \"resizerDescription\": \"按 Enter 鍵以開始調整大小\",\n  \"select\": \"選取\",\n  \"selectAll\": \"全選\",\n  \"sortable\": \"可排序的欄\"\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useTable} from './useTable';\nexport {useTableColumnHeader} from './useTableColumnHeader';\nexport {useTableRow} from './useTableRow';\nexport {useTableHeaderRow} from './useTableHeaderRow';\nexport {useTableCell} from './useTableCell';\nexport {useTableSelectionCheckbox, useTableSelectAllCheckbox} from './useTableSelectionCheckbox';\nexport {useTableColumnResize} from './useTableColumnResize';\n\n// Workaround for a Parcel bug where re-exports don't work in the CommonJS output format...\n// export {useGridRowGroup as useTableRowGroup} from '@react-aria/grid';\nimport {GridRowGroupAria, useGridRowGroup} from '@react-aria/grid';\nexport function useTableRowGroup(): GridRowGroupAria {\n  return useGridRowGroup();\n}\n\nexport type {AriaTableProps} from './useTable';\nexport type {GridAria, GridRowAria, GridRowProps} from '@react-aria/grid';\nexport type {AriaTableColumnHeaderProps, TableColumnHeaderAria} from './useTableColumnHeader';\nexport type {AriaTableCellProps, TableCellAria} from './useTableCell';\nexport type {TableHeaderRowAria} from './useTableHeaderRow';\nexport type {AriaTableSelectionCheckboxProps, TableSelectionCheckboxAria, TableSelectAllCheckboxAria} from './useTableSelectionCheckbox';\nexport type {AriaTableColumnResizeProps, TableColumnResizeAria} from './useTableColumnResize';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {GridAria, GridProps, useGrid} from '@react-aria/grid';\nimport {gridIds} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Layout} from '@react-stately/virtualizer';\nimport {mergeProps, useDescription, useId, useUpdateEffect} from '@react-aria/utils';\nimport {Node} from '@react-types/shared';\nimport {RefObject, useMemo} from 'react';\nimport {TableKeyboardDelegate} from './TableKeyboardDelegate';\nimport {tableNestedRows} from '@react-stately/flags';\nimport {TableState, TreeGridState} from '@react-stately/table';\nimport {useCollator, useLocale, useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaTableProps<T> extends GridProps {\n  /** The layout object for the table. Computes what content is visible and how to position and style them. */\n  layout?: Layout<Node<T>>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a table component.\n * A table displays data in rows and columns and enables a user to navigate its contents via directional navigation keys,\n * and optionally supports row selection and sorting.\n * @param props - Props for the table.\n * @param state - State for the table, as returned by `useTableState`.\n * @param ref - The ref attached to the table element.\n */\nexport function useTable<T>(props: AriaTableProps<T>, state: TableState<T> | TreeGridState<T>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    keyboardDelegate,\n    isVirtualized,\n    layout\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let disabledBehavior = state.selectionManager.disabledBehavior;\n  let delegate = useMemo(() => keyboardDelegate || new TableKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: disabledBehavior === 'selection' ? new Set() : state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, disabledBehavior, ref, direction, collator, layout]);\n  let id = useId(props.id);\n  gridIds.set(state, id);\n\n  let {gridProps} = useGrid({\n    ...props,\n    id,\n    keyboardDelegate: delegate\n  }, state, ref);\n\n  // Override to include header rows\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  }\n\n  if (tableNestedRows() && 'expandedKeys' in state) {\n    gridProps.role = 'treegrid';\n  }\n\n  let {column, direction: sortDirection} = state.sortDescriptor || {};\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/table');\n  let sortDescription = useMemo(() => {\n    let columnName = state.collection.columns.find(c => c.key === column)?.textValue;\n    return sortDirection && column ? stringFormatter.format(`${sortDirection}Sort`, {columnName}) : undefined;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortDirection, column, state.collection.columns]);\n\n  let descriptionProps = useDescription(sortDescription);\n\n  // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n  useUpdateEffect(() => {\n    announce(sortDescription, 'assertive', 500);\n  }, [sortDescription]);\n\n  return {\n    gridProps: mergeProps(\n      gridProps,\n      descriptionProps,\n      {\n        // merge sort description with long press information\n        'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n      }\n    )\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\nimport {TableState} from '@react-stately/table';\n\nexport const gridIds = new WeakMap<TableState<unknown>, string>();\n\nfunction normalizeKey(key: Key): string {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n\n  return '' + key;\n}\n\nexport function getColumnHeaderId<T>(state: TableState<T>, columnKey: Key): string {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(columnKey)}`;\n}\n\nexport function getCellId<T>(state: TableState<T>, rowKey: Key, columnKey: Key) {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(rowKey)}-${normalizeKey(columnKey)}`;\n}\n\nexport function getRowLabelledBy<T>(state: TableState<T>, rowKey: Key): string {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey =>\n    getCellId(state, rowKey, columnKey)\n  ).join(' ');\n}\n", "const _temp0 = require(\"../intl/ar-AE.json\");\nconst _temp1 = require(\"../intl/bg-BG.json\");\nconst _temp2 = require(\"../intl/cs-CZ.json\");\nconst _temp3 = require(\"../intl/da-DK.json\");\nconst _temp4 = require(\"../intl/de-DE.json\");\nconst _temp5 = require(\"../intl/el-GR.json\");\nconst _temp6 = require(\"../intl/en-US.json\");\nconst _temp7 = require(\"../intl/es-ES.json\");\nconst _temp8 = require(\"../intl/et-EE.json\");\nconst _temp9 = require(\"../intl/fi-FI.json\");\nconst _temp10 = require(\"../intl/fr-FR.json\");\nconst _temp11 = require(\"../intl/he-IL.json\");\nconst _temp12 = require(\"../intl/hr-HR.json\");\nconst _temp13 = require(\"../intl/hu-HU.json\");\nconst _temp14 = require(\"../intl/it-IT.json\");\nconst _temp15 = require(\"../intl/ja-JP.json\");\nconst _temp16 = require(\"../intl/ko-KR.json\");\nconst _temp17 = require(\"../intl/lt-LT.json\");\nconst _temp18 = require(\"../intl/lv-LV.json\");\nconst _temp19 = require(\"../intl/nb-NO.json\");\nconst _temp20 = require(\"../intl/nl-NL.json\");\nconst _temp21 = require(\"../intl/pl-PL.json\");\nconst _temp22 = require(\"../intl/pt-BR.json\");\nconst _temp23 = require(\"../intl/pt-PT.json\");\nconst _temp24 = require(\"../intl/ro-RO.json\");\nconst _temp25 = require(\"../intl/ru-RU.json\");\nconst _temp26 = require(\"../intl/sk-SK.json\");\nconst _temp27 = require(\"../intl/sl-SI.json\");\nconst _temp28 = require(\"../intl/sr-SP.json\");\nconst _temp29 = require(\"../intl/sv-SE.json\");\nconst _temp30 = require(\"../intl/tr-TR.json\");\nconst _temp31 = require(\"../intl/uk-UA.json\");\nconst _temp32 = require(\"../intl/zh-CN.json\");\nconst _temp33 = require(\"../intl/zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}", "/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getChildNodes, getFirstItem, getNthItem} from '@react-stately/collections';\nimport {GridKeyboardDelegate} from '@react-aria/grid';\nimport {Key, Node} from '@react-types/shared';\nimport {TableCollection} from '@react-types/table';\n\nexport class TableKeyboardDelegate<T> extends GridKeyboardDelegate<T, TableCollection<T>> {\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n    if (startItem.type === 'column') {\n      let child = getFirstItem(getChildNodes(startItem, this.collection));\n      if (child) {\n        return child.key;\n      }\n\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) {\n        return;\n      }\n\n      let firstItem = this.collection.getItem(firstKey);\n      return getNthItem(getChildNodes(firstItem, this.collection), startItem.index).key;\n    }\n\n    return super.getKeyBelow(key);\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a column, focus the parent column if any\n    if (startItem.type === 'column') {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === 'column') {\n        return parent.key;\n      }\n\n      return;\n    }\n\n    // only return above row key if not header row\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== 'headerrow') {\n      return superKey;\n    }\n\n    // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n    if (this.isCell(startItem)) {\n      return this.collection.columns[startItem.index].key;\n    }\n\n    // If focus was on a row, then focus the first column header.\n    return this.collection.columns[0].key;\n  }\n\n  private findNextColumnKey(column: Node<T>) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the first column\n    let row = this.collection.headerRows[column.level];\n    for (let item of getChildNodes(row, this.collection)) {\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n  }\n\n  private findPreviousColumnKey(column: Node<T>) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the last column\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...getChildNodes(row, this.collection)];\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus was on a column, then focus the next column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findPreviousColumnKey(item)\n        : this.findNextColumnKey(item);\n    }\n\n    return super.getKeyRightOf(key);\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus was on a column, then focus the previous column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findNextColumnKey(item)\n        : this.findPreviousColumnKey(item);\n    }\n\n    return super.getKeyLeftOf(key);\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n    if (key == null) {\n      return null;\n    }\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // Check each of the row header cells in this row for a match\n      for (let cell of getChildNodes(item, this.collection)) {\n        let column = collection.columns[cell.index];\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === 'cell'\n              ? cell.key\n              : item.key;\n          }\n        }\n      }\n\n      key = this.getKeyBelow(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getColumnHeaderId} from './utils';\nimport {GridNode} from '@react-types/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {isAndroid, mergeProps, useDescription} from '@react-aria/utils';\nimport {RefObject, useEffect} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useFocusable} from '@react-aria/focus';\nimport {useGridCell} from '@react-aria/grid';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface AriaTableColumnHeaderProps<T> {\n  /** An object representing the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader). Contains all the relevant information that makes up the column header. */\n  node: GridNode<T>,\n  /** Whether the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) is contained in a virtual scroller. */\n  isVirtualized?: boolean\n}\n\nexport interface TableColumnHeaderAria {\n  /** Props for the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) element. */\n  columnHeaderProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a column header in a table.\n * @param props - Props for the column header.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the column header element.\n */\nexport function useTableColumnHeader<T>(props: AriaTableColumnHeaderProps<T>, state: TableState<T>, ref: RefObject<FocusableElement>): TableColumnHeaderAria {\n  let {node} = props;\n  let allowsSorting = node.props.allowsSorting;\n  // if there are no focusable children, the column header will focus the cell\n  let {gridCellProps} = useGridCell({...props, focusMode: 'child'}, state, ref);\n\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n\n  let {pressProps} = usePress({\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n    onPress() {\n      state.sort(node.key);\n    },\n    ref\n  });\n\n  // Needed to pick up the focusable context, enabling things like Tooltips for example\n  let {focusableProps} = useFocusable({}, ref);\n\n  let ariaSort: DOMAttributes['aria-sort'] = null;\n  let isSortedColumn = state.sortDescriptor?.column === node.key;\n  let sortDirection = state.sortDescriptor?.direction;\n  // aria-sort not supported in Android Talkback\n  if (node.props.allowsSorting && !isAndroid()) {\n    ariaSort = isSortedColumn ? sortDirection : 'none';\n  }\n\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/table');\n  let sortDescription;\n  if (allowsSorting) {\n    sortDescription = `${stringFormatter.format('sortable')}`;\n    // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n    if (isSortedColumn && sortDirection && isAndroid()) {\n      sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;\n    }\n  }\n\n  let descriptionProps = useDescription(sortDescription);\n\n  let shouldDisableFocus = state.collection.size === 0;\n  useEffect(() => {\n    if (shouldDisableFocus && state.selectionManager.focusedKey === node.key) {\n      state.selectionManager.setFocusedKey(null);\n    }\n  }, [shouldDisableFocus, state.selectionManager, node.key]);\n\n  return {\n    columnHeaderProps: {\n      ...mergeProps(\n        gridCellProps,\n        pressProps,\n        focusableProps,\n        descriptionProps,\n        // If the table is empty, make all column headers untabbable\n        shouldDisableFocus && {tabIndex: -1}\n      ),\n      role: 'columnheader',\n      id: getColumnHeaderId(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,\n      'aria-sort': ariaSort\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {getLastItem} from '@react-stately/collections';\nimport {getRowLabelledBy} from './utils';\nimport {getSyntheticLinkProps, mergeProps} from '@react-aria/utils';\nimport type {GridNode} from '@react-types/grid';\nimport {GridRowAria, GridRowProps, useGridRow} from '@react-aria/grid';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {TableCollection} from '@react-types/table';\nimport {tableNestedRows} from '@react-stately/flags';\nimport {TableState, TreeGridState} from '@react-stately/table';\nimport {useLocale} from '@react-aria/i18n';\n\nconst EXPANSION_KEYS = {\n  expand: {\n    ltr: 'ArrowRight',\n    rtl: 'ArrowLeft'\n  },\n  'collapse': {\n    ltr: 'ArrowLeft',\n    rtl: 'ArrowRight'\n  }\n};\n\n/**\n * Provides the behavior and accessibility implementation for a row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableRow<T>(props: GridRowProps<T>, state: TableState<T> | TreeGridState<T>, ref: RefObject<FocusableElement>): GridRowAria {\n  let {node, isVirtualized} = props;\n  let {rowProps, ...states} = useGridRow<T, TableCollection<T>, TableState<T>>(props, state, ref);\n  let {direction} = useLocale();\n\n  if (isVirtualized && !(tableNestedRows() && 'expandedKeys' in state)) {\n    rowProps['aria-rowindex'] = node.index + 1 + state.collection.headerRows.length; // aria-rowindex is 1 based\n  } else {\n    delete rowProps['aria-rowindex'];\n  }\n\n  let treeGridRowProps: HTMLAttributes<HTMLElement> = {};\n  if (tableNestedRows() && 'expandedKeys' in state) {\n    let treeNode = state.keyMap.get(node.key);\n    if (treeNode != null) {\n      let hasChildRows = treeNode.props?.UNSTABLE_childItems || treeNode.props?.children?.length > state.userColumnCount;\n      treeGridRowProps = {\n        onKeyDown: (e) => {\n          if ((e.key === EXPANSION_KEYS['expand'][direction]) && state.selectionManager.focusedKey === treeNode.key && hasChildRows && state.expandedKeys !== 'all' && !state.expandedKeys.has(treeNode.key)) {\n            state.toggleKey(treeNode.key);\n            e.stopPropagation();\n          } else if ((e.key === EXPANSION_KEYS['collapse'][direction]) && state.selectionManager.focusedKey === treeNode.key && hasChildRows && (state.expandedKeys === 'all' || state.expandedKeys.has(treeNode.key))) {\n            state.toggleKey(treeNode.key);\n            e.stopPropagation();\n          }\n        },\n        'aria-expanded': hasChildRows ? state.expandedKeys === 'all' || state.expandedKeys.has(node.key) : undefined,\n        'aria-level': treeNode.level,\n        'aria-posinset': treeNode.indexOfType + 1,\n        'aria-setsize': treeNode.level > 1 ?\n          (getLastItem(state.keyMap.get(treeNode?.parentKey).childNodes) as GridNode<T>).indexOfType + 1 :\n          (getLastItem(state.keyMap.get(state.collection.body.key).childNodes) as GridNode<T>).indexOfType + 1\n      };\n    }\n  }\n\n  let linkProps = states.hasAction ? getSyntheticLinkProps(node.props) : {};\n  return {\n    rowProps: {\n      ...mergeProps(rowProps, treeGridRowProps, linkProps),\n      'aria-labelledby': getRowLabelledBy(state, node.key)\n    },\n    ...states\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {GridRowProps} from '@react-aria/grid';\nimport {RefObject} from 'react';\nimport {tableNestedRows} from '@react-stately/flags';\nimport {TableState} from '@react-stately/table';\n\nexport interface TableHeaderRowAria {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a header row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useTableHeaderRow<T>(props: GridRowProps<T>, state: TableState<T>, ref: RefObject<Element>): TableHeaderRowAria {\n  let {node, isVirtualized} = props;\n  let rowProps = {\n    role: 'row'\n  };\n\n  if (isVirtualized && !(tableNestedRows() && 'expandedKeys' in state)) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getCellId} from './utils';\nimport {GridNode} from '@react-types/grid';\nimport {RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useGridCell} from '@react-aria/grid';\n\nexport interface AriaTableCellProps {\n  /** An object representing the table cell. Contains all the relevant information that makes up the row header. */\n  node: GridNode<unknown>,\n  /** Whether the cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface TableCellAria {\n  /** Props for the table cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a table.\n * @param props - Props for the cell.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the cell element.\n */\nexport function useTableCell<T>(props: AriaTableCellProps, state: TableState<T>, ref: RefObject<FocusableElement>): TableCellAria {\n  let {gridCellProps, isPressed} = useGridCell(props, state, ref);\n\n  let columnKey = props.node.column.key;\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = getCellId(state, props.node.parentKey, columnKey);\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {getRowLabelledBy} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from '@react-types/shared';\nimport {TableState} from '@react-stately/table';\nimport {useGridSelectionCheckbox} from '@react-aria/grid';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaTableSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface TableSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\nexport interface TableSelectAllCheckboxAria {\n  /** Props for the select all checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a table.\n * @param props - Props for the selection checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectionCheckbox<T>(props: AriaTableSelectionCheckboxProps, state: TableState<T>): TableSelectionCheckboxAria {\n  let {key} = props;\n  const {checkboxProps} = useGridSelectionCheckbox(props, state);\n\n  return {\n    checkboxProps: {\n      ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${getRowLabelledBy(state, key)}`\n    }\n  };\n}\n\n/**\n * Provides the behavior and accessibility implementation for the select all checkbox in a table.\n * @param props - Props for the select all checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectAllCheckbox<T>(state: TableState<T>): TableSelectAllCheckboxAria {\n  let {isEmpty, isSelectAll, selectionMode} = state.selectionManager;\n  const stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/table');\n\n  return {\n    checkboxProps: {\n      'aria-label': stringFormatter.format(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple' || state.collection.size === 0,\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ChangeEvent, RefObject, useCallback, useEffect, useRef} from 'react';\nimport {ColumnSize} from '@react-types/table';\nimport {DOMAttributes, FocusableElement, Key} from '@react-types/shared';\nimport {focusSafely} from '@react-aria/focus';\nimport {getColumnHeaderId} from './utils';\nimport {GridNode} from '@react-types/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {mergeProps, useDescription, useEffectEvent, useId} from '@react-aria/utils';\nimport {TableColumnResizeState} from '@react-stately/table';\nimport {useInteractionModality, useKeyboard, useMove, usePress} from '@react-aria/interactions';\nimport {useLocale, useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useVisuallyHidden} from '@react-aria/visually-hidden';\n\nexport interface TableColumnResizeAria {\n  /** Props for the visually hidden input element. */\n  inputProps: DOMAttributes,\n  /** Props for the resizer element. */\n  resizerProps: DOMAttributes,\n  /** Whether this column is currently being resized. */\n  isResizing: boolean\n}\n\nexport interface AriaTableColumnResizeProps<T> {\n  /** An object representing the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader). Contains all the relevant information that makes up the column header. */\n  column: GridNode<T>,\n  /** Aria label for the hidden input. Gets read when resizing. */\n  'aria-label': string,\n  /**\n   * Ref to the trigger if resizing was started from a column header menu. If it's provided,\n   * focus will be returned there when resizing is done. If it isn't provided, it is assumed that the resizer is\n   * visible at all time and keyboard resizing is started via pressing Enter on the resizer and not on focus.\n   * */\n  triggerRef?: RefObject<FocusableElement>,\n  /** If resizing is disabled. */\n  isDisabled?: boolean,\n  /** Called when resizing starts. */\n  onResizeStart?: (widths: Map<Key, ColumnSize>) => void,\n  /** Called for every resize event that results in new column sizes. */\n  onResize?: (widths: Map<Key, ColumnSize>) => void,\n  /** Called when resizing ends. */\n  onResizeEnd?: (widths: Map<Key, ColumnSize>) => void\n}\n\n/**\n * Provides the behavior and accessibility implementation for a table column resizer element.\n * @param props - Props for the resizer.\n * @param state - State for the table's resizable columns, as returned by `useTableColumnResizeState`.\n * @param ref - The ref attached to the resizer's visually hidden input element.\n */\nexport function useTableColumnResize<T>(props: AriaTableColumnResizeProps<T>, state: TableColumnResizeState<T>, ref: RefObject<HTMLInputElement>): TableColumnResizeAria {\n  let {column: item, triggerRef, isDisabled, onResizeStart, onResize, onResizeEnd, 'aria-label': ariaLabel} = props;\n  const stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/table');\n  let id = useId();\n  let isResizing = state.resizingColumn === item.key;\n  let isResizingRef = useRef(isResizing);\n  let lastSize = useRef(null);\n  let wasFocusedOnResizeStart = useRef(false);\n  let editModeEnabled = state.tableState.isKeyboardNavigationDisabled;\n\n  let {direction} = useLocale();\n  let {keyboardProps} = useKeyboard({\n    onKeyDown: (e) => {\n      if (editModeEnabled) {\n        if (e.key === 'Escape' || e.key === 'Enter' || e.key === ' ' || e.key === 'Tab') {\n          e.preventDefault();\n          endResize(item);\n        }\n      } else {\n        // Continue propagation on keydown events so they still bubbles to useSelectableCollection and are handled there\n        e.continuePropagation();\n\n        if (e.key === 'Enter') {\n          startResize(item);\n        }\n      }\n    }\n  });\n\n  let startResize = useEffectEvent((item) => {\n    if (!isResizingRef.current) {\n      lastSize.current = state.updateResizedColumns(item.key, state.getColumnWidth(item.key));\n      state.startResize(item.key);\n      state.tableState.setKeyboardNavigationDisabled(true);\n      onResizeStart?.(lastSize.current);\n    }\n    isResizingRef.current = true;\n  });\n\n  let resize = useEffectEvent((item, newWidth) => {\n    let sizes = state.updateResizedColumns(item.key, newWidth);\n    onResize?.(sizes);\n    lastSize.current = sizes;\n  });\n\n  let endResize = useEffectEvent((item) => {\n    if (isResizingRef.current) {\n      if (lastSize.current == null) {\n        lastSize.current = state.updateResizedColumns(item.key, state.getColumnWidth(item.key));\n      }\n\n      state.endResize();\n      state.tableState.setKeyboardNavigationDisabled(false);\n      onResizeEnd?.(lastSize.current);\n      isResizingRef.current = false;\n\n      if (triggerRef?.current && !wasFocusedOnResizeStart.current) {\n        // switch focus back to the column header unless the resizer was already focused when resizing started.\n        focusSafely(triggerRef.current);\n      }\n    }\n    lastSize.current = null;\n  });\n\n  const columnResizeWidthRef = useRef<number>(0);\n  const {moveProps} = useMove({\n    onMoveStart() {\n      columnResizeWidthRef.current = state.getColumnWidth(item.key);\n      startResize(item);\n    },\n    onMove(e) {\n      let {deltaX, deltaY, pointerType} = e;\n      if (direction === 'rtl') {\n        deltaX *= -1;\n      }\n      if (pointerType === 'keyboard') {\n        if (deltaY !== 0 && deltaX === 0) {\n          deltaX = deltaY * -1;\n        }\n        deltaX *= 10;\n      }\n      // if moving up/down only, no need to resize\n      if (deltaX !== 0) {\n        columnResizeWidthRef.current += deltaX;\n        resize(item, columnResizeWidthRef.current);\n      }\n    },\n    onMoveEnd(e) {\n      let {pointerType} = e;\n      columnResizeWidthRef.current = 0;\n      if (pointerType === 'mouse' || (pointerType === 'touch' && wasFocusedOnResizeStart.current)) {\n        endResize(item);\n      }\n    }\n  });\n\n  let onKeyDown = useCallback((e) => {\n    if (editModeEnabled) {\n      moveProps.onKeyDown(e);\n    }\n  }, [editModeEnabled, moveProps]);\n\n\n  let min = Math.floor(state.getColumnMinWidth(item.key));\n  let max = Math.floor(state.getColumnMaxWidth(item.key));\n  if (max === Infinity) {\n    max = Number.MAX_SAFE_INTEGER;\n  }\n  let value = Math.floor(state.getColumnWidth(item.key));\n  let modality: string = useInteractionModality();\n  if (modality === 'virtual' &&  (typeof window !== 'undefined' && 'ontouchstart' in window)) {\n    modality = 'touch';\n  }\n  let description = triggerRef?.current == null && (modality === 'keyboard' || modality === 'virtual') && !isResizing ? stringFormatter.format('resizerDescription') : undefined;\n  let descriptionProps = useDescription(description);\n  let ariaProps = {\n    'aria-label': ariaLabel,\n    'aria-orientation': 'horizontal' as 'horizontal',\n    'aria-labelledby': `${id} ${getColumnHeaderId(state.tableState, item.key)}`,\n    'aria-valuetext': stringFormatter.format('columnSize', {value}),\n    'type': 'range',\n    min,\n    max,\n    value,\n    ...descriptionProps\n  };\n\n  const focusInput = useCallback(() => {\n    if (ref.current) {\n      focusSafely(ref.current);\n    }\n  }, [ref]);\n\n  let resizingColumn = state.resizingColumn;\n  let prevResizingColumn = useRef(null);\n  useEffect(() => {\n    if (prevResizingColumn.current !== resizingColumn && resizingColumn != null && resizingColumn === item.key) {\n      wasFocusedOnResizeStart.current = document.activeElement === ref.current;\n      startResize(item);\n      // Delay focusing input until Android Chrome's delayed click after touchend happens: https://bugs.chromium.org/p/chromium/issues/detail?id=1150073\n      let timeout = setTimeout(() => focusInput(), 0);\n      // VoiceOver on iOS has problems focusing the input from a menu.\n      let VOTimeout = setTimeout(focusInput, 400);\n      return () => {\n        clearTimeout(timeout);\n        clearTimeout(VOTimeout);\n      };\n    }\n    prevResizingColumn.current = resizingColumn;\n  }, [resizingColumn, item, focusInput, ref, startResize]);\n\n  let onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    let currentWidth = state.getColumnWidth(item.key);\n    let nextValue = parseFloat(e.target.value);\n\n    if (nextValue > currentWidth) {\n      nextValue = currentWidth + 10;\n    } else {\n      nextValue = currentWidth - 10;\n    }\n    resize(item, nextValue);\n  };\n\n  let {pressProps} = usePress({\n    onPressStart: (e) => {\n      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey || e.pointerType === 'keyboard') {\n        return;\n      }\n      if (e.pointerType === 'virtual' && state.resizingColumn != null) {\n        endResize(item);\n        return;\n      }\n\n      // Sometimes onPress won't trigger for quick taps on mobile so we want to focus the input so blurring away\n      // can cancel resize mode for us.\n      focusInput();\n\n      // If resizer is always visible, mobile screenreader user can access the visually hidden resizer directly and thus we don't need\n      // to handle a virtual click to start the resizer.\n      if (e.pointerType !== 'virtual') {\n        startResize(item);\n      }\n    },\n    onPress: (e) => {\n      if (((e.pointerType === 'touch' && wasFocusedOnResizeStart.current) || e.pointerType === 'mouse') && state.resizingColumn != null) {\n        endResize(item);\n      }\n    }\n  });\n  let {visuallyHiddenProps} = useVisuallyHidden();\n\n  return {\n    resizerProps: mergeProps(\n      keyboardProps,\n      {...moveProps, onKeyDown},\n      pressProps,\n      {style: {touchAction: 'none'}}\n    ),\n    inputProps: mergeProps(\n      visuallyHiddenProps,\n      {\n        id,\n        onBlur: () => {\n          endResize(item);\n        },\n        onChange,\n        disabled: isDisabled\n      },\n      ariaProps\n    ),\n    isResizing\n  };\n}\n", "import { jsx } from 'react/jsx-runtime';\n\nconst arrowUpIcon = /*#__PURE__*/jsx(\"path\", {\n  d: \"m5 12 7-7 7 7M12 19V5\"\n});\n\nexport { arrowUpIcon };\n", "\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n", "import { assert } from 'emery';\nimport { load } from 'js-yaml';\n\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction splitFrontmatter(data) {\n  const str = textDecoder.decode(data);\n  const match = str.match(/^---(?:\\r?\\n([^]*?))?\\r?\\n---\\r?\\n?/);\n  if (match) {\n    var _match$;\n    const encoded = textEncoder.encode(match[0]);\n    return {\n      frontmatter: (_match$ = match[1]) !== null && _match$ !== void 0 ? _match$ : '',\n      content: data.slice(encoded.byteLength)\n    };\n  }\n  return null;\n}\nfunction loadDataFile(data, formatInfo) {\n  const parse = formatInfo.data === 'json' ? JSON.parse : load;\n  if (!formatInfo.contentField) {\n    const dataFile = textDecoder.decode(data);\n    return {\n      loaded: parse(dataFile)\n    };\n  }\n  const res = splitFrontmatter(data);\n  assert(res !== null, 'frontmatter not found');\n  return {\n    loaded: parse(res.frontmatter),\n    extraFakeFile: {\n      path: `${formatInfo.contentField.key}${formatInfo.contentField.config.contentExtension}`,\n      contents: res.content\n    }\n  };\n}\n\nexport { loadDataFile as l };\n", "{\n  \"breadcrumbs\": \"عناصر الواجهة\"\n}\n", "{\n  \"breadcrumbs\": \"Трохи хляб\"\n}\n", "{\n  \"breadcrumbs\": \"Popis cesty\"\n}\n", "{\n  \"breadcrumbs\": \"Brødkrummer\"\n}\n", "{\n  \"breadcrumbs\": \"Breadcrumbs\"\n}\n", "{\n  \"breadcrumbs\": \"Πλοηγήσεις breadcrumb\"\n}\n", "{\n  \"breadcrumbs\": \"Breadcrumbs\"\n}\n", "{\n  \"breadcrumbs\": \"Migas de pan\"\n}\n", "{\n  \"breadcrumbs\": \"Lingiread\"\n}\n", "{\n  \"breadcrumbs\": \"Navigointilinkit\"\n}\n", "{\n  \"breadcrumbs\": \"Chemin de navigation\"\n}\n", "{\n  \"breadcrumbs\": \"שבילי ניווט\"\n}\n", "{\n  \"breadcrumbs\": \"Navigacijski putovi\"\n}\n", "{\n  \"breadcrumbs\": \"Morzsamenü\"\n}\n", "{\n  \"breadcrumbs\": \"Breadcrumb\"\n}\n", "{\n  \"breadcrumbs\": \"パンくずリスト\"\n}\n", "{\n  \"breadcrumbs\": \"탐색 표시\"\n}\n", "{\n  \"breadcrumbs\": \"Naršymo kelias\"\n}\n", "{\n  \"breadcrumbs\": \"Atpakaļceļi\"\n}\n", "{\n  \"breadcrumbs\": \"Navigasjonsstier\"\n}\n", "{\n  \"breadcrumbs\": \"Broodkruimels\"\n}\n", "{\n  \"breadcrumbs\": \"Struktura nawigacyjna\"\n}\n", "{\n  \"breadcrumbs\": \"Caminho detalhado\"\n}\n", "{\n  \"breadcrumbs\": \"Categorias\"\n}\n", "{\n  \"breadcrumbs\": \"Miez de pâine\"\n}\n", "{\n  \"breadcrumbs\": \"Навигация\"\n}\n", "{\n  \"breadcrumbs\": \"Navigačné prvky Breadcrumbs\"\n}\n", "{\n  \"breadcrumbs\": \"Drobtine\"\n}\n", "{\n  \"breadcrumbs\": \"Putanje navigacije\"\n}\n", "{\n  \"breadcrumbs\": \"Sökvägar\"\n}\n", "{\n  \"breadcrumbs\": \"İçerik haritaları\"\n}\n", "{\n  \"breadcrumbs\": \"Навігаційна стежка\"\n}\n", "{\n  \"breadcrumbs\": \"导航栏\"\n}\n", "{\n  \"breadcrumbs\": \"導覽列\"\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useBreadcrumbItem} from './useBreadcrumbItem';\nexport {useBreadcrumbs} from './useBreadcrumbs';\nexport type {AriaBreadcrumbItemProps, AriaBreadcrumbsProps} from '@react-types/breadcrumbs';\nexport type {BreadcrumbItemAria} from './useBreadcrumbItem';\nexport type {BreadcrumbsAria} from './useBreadcrumbs';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaBreadcrumbItemProps} from '@react-types/breadcrumbs';\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {RefObject} from 'react';\nimport {useLink} from '@react-aria/link';\n\nexport interface BreadcrumbItemAria {\n  /** Props for the breadcrumb item link element. */\n  itemProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for an in a breadcrumbs component.\n * See `useBreadcrumbs` for details about breadcrumbs.\n */\nexport function useBreadcrumbItem(props: AriaBreadcrumbItemProps, ref: RefObject<FocusableElement>): BreadcrumbItemAria {\n  let {\n    isCurrent,\n    isDisabled,\n    'aria-current': ariaCurrent,\n    elementType = 'a',\n    ...otherProps\n  } = props;\n\n  let {linkProps} = useLink({isDisabled: isDisabled || isCurrent, elementType, ...otherProps}, ref);\n  let isHeading = /^h[1-6]$/.test(elementType);\n  let itemProps: DOMAttributes = {};\n\n  if (!isHeading) {\n    itemProps = linkProps;\n  }\n\n  if (isCurrent) {\n    itemProps['aria-current'] = ariaCurrent || 'page';\n    // isCurrent sets isDisabled === true for the current item,\n    // so we have to restore the tabIndex in order to support autoFocus.\n    itemProps.tabIndex = props.autoFocus ? -1 : undefined;\n  }\n\n  return {\n    itemProps: {\n      'aria-disabled': isDisabled,\n      ...itemProps\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaBreadcrumbsProps} from '@react-types/breadcrumbs';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface BreadcrumbsAria {\n  /** Props for the breadcrumbs navigation element. */\n  navProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a breadcrumbs component.\n * Breadcrumbs display a hierarchy of links to the current page or resource in an application.\n */\nexport function useBreadcrumbs(props: AriaBreadcrumbsProps): BreadcrumbsAria {\n  let {\n    'aria-label': ariaLabel,\n    ...otherProps\n  } = props;\n\n  let strings = useLocalizedStringFormatter(intlMessages, '@react-aria/breadcrumbs');\n  return {\n    navProps: {\n      ...filterDOMProps(otherProps, {labelable: true}),\n      'aria-label': ariaLabel || strings.format('breadcrumbs')\n    }\n  };\n}\n", "const _temp0 = require(\"../intl/ar-AE.json\");\nconst _temp1 = require(\"../intl/bg-BG.json\");\nconst _temp2 = require(\"../intl/cs-CZ.json\");\nconst _temp3 = require(\"../intl/da-DK.json\");\nconst _temp4 = require(\"../intl/de-DE.json\");\nconst _temp5 = require(\"../intl/el-GR.json\");\nconst _temp6 = require(\"../intl/en-US.json\");\nconst _temp7 = require(\"../intl/es-ES.json\");\nconst _temp8 = require(\"../intl/et-EE.json\");\nconst _temp9 = require(\"../intl/fi-FI.json\");\nconst _temp10 = require(\"../intl/fr-FR.json\");\nconst _temp11 = require(\"../intl/he-IL.json\");\nconst _temp12 = require(\"../intl/hr-HR.json\");\nconst _temp13 = require(\"../intl/hu-HU.json\");\nconst _temp14 = require(\"../intl/it-IT.json\");\nconst _temp15 = require(\"../intl/ja-JP.json\");\nconst _temp16 = require(\"../intl/ko-KR.json\");\nconst _temp17 = require(\"../intl/lt-LT.json\");\nconst _temp18 = require(\"../intl/lv-LV.json\");\nconst _temp19 = require(\"../intl/nb-NO.json\");\nconst _temp20 = require(\"../intl/nl-NL.json\");\nconst _temp21 = require(\"../intl/pl-PL.json\");\nconst _temp22 = require(\"../intl/pt-BR.json\");\nconst _temp23 = require(\"../intl/pt-PT.json\");\nconst _temp24 = require(\"../intl/ro-RO.json\");\nconst _temp25 = require(\"../intl/ru-RU.json\");\nconst _temp26 = require(\"../intl/sk-SK.json\");\nconst _temp27 = require(\"../intl/sl-SI.json\");\nconst _temp28 = require(\"../intl/sr-SP.json\");\nconst _temp29 = require(\"../intl/sv-SE.json\");\nconst _temp30 = require(\"../intl/tr-TR.json\");\nconst _temp31 = require(\"../intl/uk-UA.json\");\nconst _temp32 = require(\"../intl/zh-CN.json\");\nconst _temp33 = require(\"../intl/zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}", "'use client';\nexport { Item } from '@react-stately/collections';\nimport { useBreadcrumbItem, useBreadcrumbs } from '@react-aria/breadcrumbs';\nimport { mergeProps, useObjectRef, useValueEffect, useResizeObserver, useLayoutEffect } from '@react-aria/utils';\nimport { isNumber } from 'emery';\nimport { useRef, useMemo, Fragment, forwardRef, Children, useState, useCallback, isValidElement } from 'react';\nimport { ActionButton } from '@keystar/ui/button';\nimport { useProviderProps } from '@keystar/ui/core';\nimport { Icon } from '@keystar/ui/icon';\nimport { folderClosedIcon } from '@keystar/ui/icon/icons/folderClosedIcon';\nimport { folderOpenIcon } from '@keystar/ui/icon/icons/folderOpenIcon';\nimport { MenuTrigger, Menu } from '@keystar/ui/menu';\nimport { ClassList, FocusRing, toDataAttributes, classNames, css, tokenSchema, useStyleProps } from '@keystar/ui/style';\nimport { useLocale } from '@react-aria/i18n';\nimport { useHover } from '@react-aria/interactions';\nimport { chevronRightIcon } from '@keystar/ui/icon/icons/chevronRightIcon';\nimport { chevronLeftIcon } from '@keystar/ui/icon/icons/chevronLeftIcon';\nimport { jsxs, jsx } from 'react/jsx-runtime';\n\nconst breadcrumbsClassList = new ClassList('Breadcrumbs', ['item', 'link', 'list', 'separator']);\nfunction BreadcrumbItem(props) {\n  let {\n    children,\n    isCurrent,\n    isDisabled,\n    size = 'regular'\n  } = props;\n  let {\n    direction\n  } = useLocale();\n  let ref = useRef(null);\n  let {\n    itemProps\n  } = useBreadcrumbItem({\n    ...props,\n    elementType: 'span'\n  }, ref);\n  let {\n    hoverProps,\n    isHovered\n  } = useHover(props);\n  let icon = useMemo(() => {\n    return direction === 'rtl' ? chevronLeftIcon : chevronRightIcon;\n  }, [direction]);\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [/*#__PURE__*/jsx(FocusRing, {\n      children: /*#__PURE__*/jsx(\"span\", {\n        ...mergeProps(itemProps, hoverProps),\n        ...toDataAttributes({\n          size: size !== 'regular' ? size : undefined,\n          interaction: isHovered ? 'hover' : undefined\n        }),\n        ref: ref,\n        className: classNames(breadcrumbsClassList.element('link'), css({\n          color: tokenSchema.color.foreground.neutral,\n          cursor: 'default',\n          fontSize: tokenSchema.typography.text.regular.size,\n          fontFamily: tokenSchema.typography.fontFamily.base,\n          fontWeight: tokenSchema.typography.fontWeight.medium,\n          MozOsxFontSmoothing: 'auto',\n          WebkitFontSmoothing: 'auto',\n          '&[data-size=small]': {\n            fontSize: tokenSchema.typography.text.small.size\n          },\n          '&[data-size=medium]': {\n            fontSize: tokenSchema.typography.text.medium.size\n          },\n          '&[data-size=large]': {\n            fontSize: tokenSchema.typography.text.large.size\n          },\n          '&:not([aria-current=page])': {\n            '&:not([aria-disabled=true])': {\n              cursor: 'pointer'\n            },\n            '&[data-interaction=hover]': {\n              color: tokenSchema.color.foreground.neutralEmphasis,\n              textDecoration: 'underline'\n            },\n            '&[aria-disabled=true]': {\n              color: tokenSchema.color.alias.foregroundDisabled\n            }\n          },\n          '&[aria-current=page]': {\n            color: tokenSchema.color.foreground.neutralEmphasis,\n            fontWeight: tokenSchema.typography.fontWeight.semibold,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          }\n        }), {\n          'is-hovered': isHovered\n        }),\n        children: children\n      })\n    }), !isCurrent && /*#__PURE__*/jsx(Icon, {\n      src: icon,\n      color: isDisabled ? 'color.alias.foregroundDisabled' : 'neutralSecondary',\n      marginX: \"small\",\n      UNSAFE_className: breadcrumbsClassList.element('separator')\n    })]\n  });\n}\n\nconst MIN_VISIBLE_ITEMS = 1;\nconst MAX_VISIBLE_ITEMS = 4;\nfunction Breadcrumbs(props, ref) {\n  props = useProviderProps(props);\n  let {\n    children,\n    showRoot,\n    size = 'regular',\n    isDisabled,\n    onAction,\n    ...otherProps\n  } = props;\n\n  // Not using React.Children.toArray because it mutates the key prop.\n  let childArray = [];\n  Children.forEach(children, child => {\n    if ( /*#__PURE__*/isValidElement(child)) {\n      childArray.push(child);\n    }\n  });\n  let domRef = useObjectRef(ref);\n  let listRef = useRef(null);\n  let [menuIsOpen, setMenuOpen] = useState(false);\n  let [visibleItems, setVisibleItems] = useValueEffect(childArray.length);\n  let {\n    navProps\n  } = useBreadcrumbs(props);\n  let styleProps = useStyleProps(otherProps);\n  let updateOverflow = useCallback(() => {\n    let computeVisibleItems = visibleItems => {\n      let currListRef = listRef.current;\n      if (!currListRef) {\n        return;\n      }\n      let listItems = Array.from(currListRef.children);\n      let containerWidth = currListRef.offsetWidth;\n      let isShowingMenu = childArray.length > visibleItems;\n      let calculatedWidth = 0;\n      let newVisibleItems = 0;\n      let maxVisibleItems = MAX_VISIBLE_ITEMS;\n      if (showRoot) {\n        let el = listItems.shift();\n        if (el) {\n          calculatedWidth += el.offsetWidth;\n          newVisibleItems++;\n        }\n      }\n      if (isShowingMenu) {\n        let el = listItems.shift();\n        if (el) {\n          calculatedWidth += el.offsetWidth;\n          maxVisibleItems--;\n        }\n      }\n      if (showRoot && calculatedWidth >= containerWidth) {\n        newVisibleItems--;\n      }\n      if (listItems.length > 0) {\n        // Ensure the last breadcrumb isn't truncated when we measure it.\n        let last = listItems.pop();\n        if (last) {\n          last.style.overflow = 'visible';\n          calculatedWidth += last.offsetWidth;\n          if (calculatedWidth < containerWidth) {\n            newVisibleItems++;\n          }\n          last.style.overflow = '';\n        }\n      }\n      for (let breadcrumb of listItems.reverse()) {\n        calculatedWidth += breadcrumb.offsetWidth;\n        if (calculatedWidth < containerWidth) {\n          newVisibleItems++;\n        }\n      }\n      return Math.max(MIN_VISIBLE_ITEMS, Math.min(maxVisibleItems, newVisibleItems));\n    };\n    setVisibleItems(function* () {\n      // Update to show all items.\n      yield childArray.length;\n\n      // Measure, and update to show the items that fit.\n      let newVisibleItems = computeVisibleItems(childArray.length);\n      yield newVisibleItems;\n\n      // If the number of items is less than the number of children,\n      // then update again to ensure that the menu fits.\n      if (isNumber(newVisibleItems) && newVisibleItems < childArray.length && newVisibleItems > 1) {\n        yield computeVisibleItems(newVisibleItems);\n      }\n    });\n  }, [childArray.length, setVisibleItems, showRoot]);\n  useResizeObserver({\n    ref: domRef,\n    onResize: updateOverflow\n  });\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(updateOverflow, [children]);\n  let contents = childArray;\n  if (childArray.length > visibleItems) {\n    var _selectedItem$key;\n    let selectedItem = childArray[childArray.length - 1];\n    let selectedKey = (_selectedItem$key = selectedItem.key) !== null && _selectedItem$key !== void 0 ? _selectedItem$key : childArray.length - 1;\n    let onMenuAction = key => {\n      // Don't fire onAction when clicking on the last item\n      if (key !== selectedKey && onAction) {\n        onAction(key);\n      }\n    };\n    let menuItem = /*#__PURE__*/jsx(BreadcrumbItem, {\n      children: /*#__PURE__*/jsxs(MenuTrigger, {\n        onOpenChange: setMenuOpen,\n        children: [/*#__PURE__*/jsx(ActionButton, {\n          \"aria-label\": \"\\u2026\",\n          prominence: \"low\",\n          isDisabled: isDisabled,\n          children: /*#__PURE__*/jsx(Icon, {\n            src: menuIsOpen ? folderOpenIcon : folderClosedIcon\n          })\n        }), /*#__PURE__*/jsx(Menu, {\n          selectionMode: \"single\",\n          selectedKeys: [selectedKey],\n          onAction: onMenuAction,\n          children: childArray\n        })]\n      })\n    }, \"menu\");\n    contents = [menuItem];\n    let breadcrumbs = [...childArray];\n    let endItems = visibleItems;\n    if (showRoot && visibleItems > 1) {\n      let el = breadcrumbs.shift();\n      if (el) {\n        contents.unshift(el);\n        endItems--;\n      }\n    }\n    contents.push(...breadcrumbs.slice(-endItems));\n  }\n  let lastIndex = contents.length - 1;\n  let breadcrumbItems = contents.map((child, index) => {\n    var _child$key;\n    let isCurrent = index === lastIndex;\n    let key = (_child$key = child.key) !== null && _child$key !== void 0 ? _child$key : index;\n    let onPress = () => {\n      if (onAction) {\n        onAction(key);\n      }\n    };\n    return /*#__PURE__*/jsx(\"li\", {\n      className: classNames(breadcrumbsClassList.element('item'), css({\n        alignItems: 'center',\n        display: 'inline-flex',\n        whiteSpace: 'nowrap',\n        '&:last-child': {\n          overflow: 'hidden'\n        }\n      })),\n      children: /*#__PURE__*/jsx(BreadcrumbItem, {\n        isCurrent: isCurrent,\n        isDisabled: isDisabled,\n        onPress: onPress,\n        size: size,\n        children: child.props.children\n      }, key)\n    }, index);\n  });\n  return /*#__PURE__*/jsx(\"nav\", {\n    ...navProps,\n    ...styleProps,\n    ref: domRef,\n    className: classNames(breadcrumbsClassList.element('root'), styleProps.className),\n    children: /*#__PURE__*/jsx(\"ul\", {\n      ref: listRef,\n      className: classNames(breadcrumbsClassList.element('list'), css({\n        display: 'flex',\n        height: tokenSchema.size.element.regular,\n        justifyContent: 'flex-start'\n      })),\n      children: breadcrumbItems\n    })\n  });\n}\n\n// forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\n\n/**\n * Breadcrumbs show hierarchy and navigational context for a user's location\n * within an application.\n */\nconst _Breadcrumbs = /*#__PURE__*/forwardRef(Breadcrumbs);\n\nexport { _Breadcrumbs as Breadcrumbs };\n", "import { jsx } from 'react/jsx-runtime';\n\nconst folderClosedIcon = /*#__PURE__*/jsx(\"path\", {\n  d: \"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2ZM2 10h20\"\n});\n\nexport { folderClosedIcon };\n", "import { jsx } from 'react/jsx-runtime';\n\nconst folderOpenIcon = /*#__PURE__*/jsx(\"path\", {\n  d: \"m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2\"\n});\n\nexport { folderOpenIcon };\n", "'use client';\nimport { useSlotId, filterDOMProps } from '@react-aria/utils';\nimport { useRef, useMemo } from 'react';\nimport { checkCircle2Icon } from '@keystar/ui/icon/icons/checkCircle2Icon';\nimport { infoIcon } from '@keystar/ui/icon/icons/infoIcon';\nimport { alertTriangleIcon } from '@keystar/ui/icon/icons/alertTriangleIcon';\nimport { Icon } from '@keystar/ui/icon';\nimport { Grid, minmax } from '@keystar/ui/layout';\nimport { SlotProvider, Content } from '@keystar/ui/slots';\nimport { useHasChild, isReactText } from '@keystar/ui/utils';\nimport { ClassList, useStyleProps, css, tokenSchema } from '@keystar/ui/style';\nimport { Text } from '@keystar/ui/typography';\nimport { jsxs, jsx } from 'react/jsx-runtime';\n\nconst noticeClassList = new ClassList('Notice', ['heading']);\nconst toneToIcon = {\n  caution: alertTriangleIcon,\n  critical: alertTriangleIcon,\n  neutral: infoIcon,\n  positive: checkCircle2Icon\n};\nconst toneToRole = {\n  caution: 'alert',\n  critical: 'alert',\n  neutral: 'status',\n  positive: 'status'\n};\n\n// NOTE: this has been a good exploration, and slots will be useful elsewhere,\n// but in this case where explicit IDs are required for accessibility and\n// composition isn't paramount it may be more appropriate to simply use a\n// prop-based API for the heading etc.\n\n/**\n * Use notices to highlight information that affects a section, feature or page.\n * Draw attention without interrupting users from their current task.\n */\nfunction Notice(props) {\n  const {\n    children,\n    tone = 'neutral',\n    ...otherProps\n  } = props;\n  const ref = useRef(null);\n  const styleProps = useStyleProps(otherProps);\n  const headingClassName = noticeClassList.element('heading');\n  const headingId = useSlotId();\n  const contentId = useSlotId();\n  const hasHeading = useHasChild(noticeClassList.selector('heading'), ref);\n  const coercedTone = tone === 'neutral' ? 'accent' : tone;\n  const icon = toneToIcon[tone];\n  const contentStyles = css({\n    display: 'grid',\n    gap: tokenSchema.size.space.large\n  });\n  const slots = useMemo(() => ({\n    content: {\n      elementType: 'div',\n      gridArea: hasHeading ? 'content' : 'heading-start / heading-start / content-end / content-end',\n      id: contentId,\n      paddingY: hasHeading ? 'regular' : undefined,\n      UNSAFE_className: contentStyles\n    },\n    heading: {\n      elementType: 'div',\n      gridArea: 'heading',\n      id: headingId,\n      UNSAFE_className: headingClassName,\n      size: 'small'\n    },\n    text: {\n      color: coercedTone,\n      weight: 'medium'\n    }\n  }), [coercedTone, contentId, contentStyles, hasHeading, headingClassName, headingId]);\n  return /*#__PURE__*/jsxs(Grid, {\n    \"aria-live\": \"polite\",\n    \"aria-labelledby\": headingId,\n    \"aria-describedby\": contentId,\n    role: toneToRole[tone],\n    ref: ref,\n    tabIndex: 0,\n    UNSAFE_className: styleProps.className,\n    UNSAFE_style: styleProps.style,\n    ...filterDOMProps(otherProps),\n    // appearance\n    backgroundColor: coercedTone,\n    border: coercedTone,\n    borderRadius: \"medium\",\n    minWidth: 0,\n    padding: \"medium\",\n    width: \"100%\"\n    // layout\n    ,\n    alignItems: \"center\",\n    areas: ['icon heading', 'icon content'],\n    columnGap: \"medium\",\n    columns: ['icon.medium', 'auto'],\n    rows: `${minmax('icon.medium', 'auto')} auto`,\n    children: [/*#__PURE__*/jsx(Icon, {\n      src: icon,\n      size: \"medium\",\n      color: coercedTone,\n      gridArea: \"icon\",\n      alignSelf: \"start\"\n    }), /*#__PURE__*/jsx(SlotProvider, {\n      slots: slots,\n      children: isReactText(children) ? /*#__PURE__*/jsx(Content, {\n        children: /*#__PURE__*/jsx(Text, {\n          children: children\n        })\n      }) : children\n    })]\n  });\n}\n\nexport { Notice };\n", "import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\n\nconst copyPlusIcon = /*#__PURE__*/jsxs(Fragment, {\n  children: [/*#__PURE__*/jsx(\"path\", {\n    d: \"M15 12v6M12 15h6\"\n  }), /*#__PURE__*/jsx(\"rect\", {\n    width: 14,\n    height: 14,\n    x: 8,\n    y: 8,\n    rx: 2,\n    ry: 2\n  }), /*#__PURE__*/jsx(\"path\", {\n    d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"\n  })]\n});\n\nexport { copyPlusIcon };\n", "import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\n\nconst historyIcon = /*#__PURE__*/jsxs(Fragment, {\n  children: [/*#__PURE__*/jsx(\"path\", {\n    d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\"\n  }), /*#__PURE__*/jsx(\"path\", {\n    d: \"M3 3v5h5M12 7v5l4 2\"\n  })]\n});\n\nexport { historyIcon };\n", "// These are guards that are used throughout the codebase to warn or error on\n// unexpected behaviour or conditions.\n// Every warning and error comes with a number that uniquely identifies them.\n// You can read more about the messages themselves in `docs/graphcache/errors.md`\n\nimport type {\n  ExecutableDefinitionNode,\n  InlineFragmentNode,\n} from '@0no-co/graphql.web';\nimport type { Logger } from '../types';\nimport { Kind } from '@0no-co/graphql.web';\n\nexport type ErrorCode =\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24\n  | 25\n  | 26\n  | 27\n  | 28;\n\ntype DebugNode = ExecutableDefinitionNode | InlineFragmentNode;\n\n// URL unfurls to https://formidable.com/open-source/urql/docs/graphcache/errors/\nconst helpUrl = '\\nhttps://bit.ly/2XbVrpR#';\nconst cache = new Set<string>();\n\nexport const currentDebugStack: string[] = [];\n\nexport const popDebugNode = () => currentDebugStack.pop();\n\nexport const pushDebugNode = (typename: void | string, node: DebugNode) => {\n  let identifier = '';\n  if (node.kind === Kind.INLINE_FRAGMENT) {\n    identifier = typename\n      ? `Inline Fragment on \"${typename}\"`\n      : 'Inline Fragment';\n  } else if (node.kind === Kind.OPERATION_DEFINITION) {\n    const name = node.name ? `\"${node.name.value}\"` : 'Unnamed';\n    identifier = `${name} ${node.operation}`;\n  } else if (node.kind === Kind.FRAGMENT_DEFINITION) {\n    identifier = `\"${node.name.value}\" Fragment`;\n  }\n\n  if (identifier) {\n    currentDebugStack.push(identifier);\n  }\n};\n\nconst getDebugOutput = (): string =>\n  currentDebugStack.length\n    ? '\\n(Caused At: ' + currentDebugStack.join(', ') + ')'\n    : '';\n\nexport function invariant(\n  condition: any,\n  message: string,\n  code: ErrorCode\n): asserts condition {\n  if (!condition) {\n    let errorMessage = message || 'Minfied Error #' + code + '\\n';\n    if (process.env.NODE_ENV !== 'production') {\n      errorMessage += getDebugOutput();\n    }\n\n    const error = new Error(errorMessage + helpUrl + code);\n    error.name = 'Graphcache Error';\n    throw error;\n  }\n}\n\nexport function warn(\n  message: string,\n  code: ErrorCode,\n  logger: Logger | undefined\n) {\n  if (!cache.has(message)) {\n    if (logger) {\n      logger('warn', message + getDebugOutput() + helpUrl + code);\n    } else {\n      console.warn(message + getDebugOutput() + helpUrl + code);\n    }\n    cache.add(message);\n  }\n}\n", "import type {\n  NamedTypeNode,\n  NameNode,\n  DirectiveNode,\n  SelectionNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n} from '@0no-co/graphql.web';\n\nimport type { FormattedNode } from '@urql/core';\n\nexport type SelectionSet = readonly FormattedNode<SelectionNode>[];\n\nconst EMPTY_DIRECTIVES: Record<string, DirectiveNode | undefined> = {};\n\n/** Returns the directives dictionary of a given node */\nexport const getDirectives = (node: {\n  _directives?: Record<string, DirectiveNode | undefined>;\n}) => node._directives || EMPTY_DIRECTIVES;\n\n/** Returns the name of a given node */\nexport const getName = (node: { name: NameNode }): string => node.name.value;\n\nexport const getFragmentTypeName = (node: FragmentDefinitionNode): string =>\n  node.typeCondition.name.value;\n\n/** Returns either the field's name or the field's alias */\nexport const getFieldAlias = (node: FieldNode): string =>\n  node.alias ? node.alias.value : node.name.value;\n\nconst emptySelectionSet: SelectionSet = [];\n\n/** Returns the SelectionSet for a given inline or defined fragment node */\nexport const getSelectionSet = (node: {\n  selectionSet?: FormattedNode<SelectionSetNode>;\n}): FormattedNode<SelectionSet> =>\n  (node.selectionSet\n    ? node.selectionSet.selections\n    : emptySelectionSet) as FormattedNode<SelectionSet>;\n\nexport const getTypeCondition = (node: {\n  typeCondition?: NamedTypeNode;\n}): string | null =>\n  node.typeCondition ? node.typeCondition.name.value : null;\n", "import type {\n  FieldNode,\n  DirectiveNode,\n  OperationDefinitionNode,\n} from '@0no-co/graphql.web';\nimport { valueFromASTUntyped } from '@0no-co/graphql.web';\n\nimport { getName } from './node';\n\nimport type { Variables } from '../types';\n\n/** Evaluates a fields arguments taking vars into account */\nexport const getFieldArguments = (\n  node: FieldNode | DirectiveNode,\n  vars: Variables\n): null | Variables => {\n  let args: null | Variables = null;\n  if (node.arguments) {\n    for (let i = 0, l = node.arguments.length; i < l; i++) {\n      const arg = node.arguments[i];\n      const value = valueFromASTUntyped(arg.value, vars);\n      if (value !== undefined && value !== null) {\n        if (!args) args = {};\n        args[getName(arg)] = value as any;\n      }\n    }\n  }\n  return args;\n};\n\n/** Returns a filtered form of variables with values missing that the query doesn't require */\nexport const filterVariables = (\n  node: OperationDefinitionNode,\n  input: void | object\n) => {\n  if (!input || !node.variableDefinitions) {\n    return undefined;\n  }\n\n  const vars = {};\n  for (let i = 0, l = node.variableDefinitions.length; i < l; i++) {\n    const name = getName(node.variableDefinitions[i].variable);\n    vars[name] = input[name];\n  }\n\n  return vars;\n};\n\n/** Returns a normalized form of variables with defaulted values */\nexport const normalizeVariables = (\n  node: OperationDefinitionNode,\n  input: void | Record<string, unknown>\n): Variables => {\n  const vars = {};\n  if (!input) return vars;\n\n  if (node.variableDefinitions) {\n    for (let i = 0, l = node.variableDefinitions.length; i < l; i++) {\n      const def = node.variableDefinitions[i];\n      const name = getName(def.variable);\n      vars[name] =\n        input[name] === undefined && def.defaultValue\n          ? valueFromASTUntyped(def.defaultValue, input)\n          : input[name];\n    }\n  }\n\n  for (const key in input) {\n    if (!(key in vars)) vars[key] = input[key];\n  }\n\n  return vars;\n};\n", "import type {\n  SelectionNode,\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentSpreadNode,\n  InlineFragmentNode,\n} from '@0no-co/graphql.web';\nimport { valueFromASTUntyped, Kind } from '@0no-co/graphql.web';\n\nimport type { FormattedNode } from '@urql/core';\nimport { getName, getDirectives } from './node';\nimport { invariant } from '../helpers/help';\nimport type { Fragments, Variables } from '../types';\n\nfunction getMainOperation(\n  doc: FormattedNode<DocumentNode>\n): FormattedNode<OperationDefinitionNode>;\nfunction getMainOperation(doc: DocumentNode): OperationDefinitionNode;\n\n/** Returns the main operation's definition */\nfunction getMainOperation(doc: DocumentNode): OperationDefinitionNode {\n  for (let i = 0; i < doc.definitions.length; i++) {\n    if (doc.definitions[i].kind === Kind.OPERATION_DEFINITION) {\n      return doc.definitions[i] as FormattedNode<OperationDefinitionNode>;\n    }\n  }\n\n  invariant(\n    false,\n    'Invalid GraphQL document: All GraphQL documents must contain an OperationDefinition' +\n      'node for a query, subscription, or mutation.',\n    1\n  );\n}\n\nexport { getMainOperation };\n\n/** Returns a mapping from fragment names to their selections */\nexport const getFragments = (doc: FormattedNode<DocumentNode>): Fragments => {\n  const fragments: Fragments = {};\n  for (let i = 0; i < doc.definitions.length; i++) {\n    const node = doc.definitions[i];\n    if (node.kind === Kind.FRAGMENT_DEFINITION) {\n      fragments[getName(node)] = node;\n    }\n  }\n\n  return fragments;\n};\n\n/** Resolves @include and @skip directives to determine whether field is included. */\nexport const shouldInclude = (\n  node: FormattedNode<SelectionNode>,\n  vars: Variables\n): boolean => {\n  const directives = getDirectives(node);\n  if (directives.include || directives.skip) {\n    // Finds any @include or @skip directive that forces the node to be skipped\n    for (const name in directives) {\n      const directive = directives[name];\n      if (\n        directive &&\n        (name === 'include' || name === 'skip') &&\n        directive.arguments &&\n        directive.arguments[0] &&\n        getName(directive.arguments[0]) === 'if'\n      ) {\n        // Return whether this directive forces us to skip\n        // `@include(if: false)` or `@skip(if: true)`\n        const value = valueFromASTUntyped(directive.arguments[0].value, vars);\n        return name === 'include' ? !!value : !value;\n      }\n    }\n  }\n  return true;\n};\n\n/** Resolves @defer directive to determine whether a fragment is potentially skipped. */\nexport const isDeferred = (\n  node: FormattedNode<FragmentSpreadNode | InlineFragmentNode>,\n  vars: Variables\n): boolean => {\n  const { defer } = getDirectives(node);\n  if (defer) {\n    for (const argument of defer.arguments || []) {\n      if (getName(argument) === 'if') {\n        // Return whether `@defer(if: )` is enabled\n        return !!valueFromASTUntyped(argument.value, vars);\n      }\n    }\n    return true;\n  }\n\n  return false;\n};\n", "import type {\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n} from '@0no-co/graphql.web';\n\nimport { warn, invariant } from '../helpers/help';\nimport { getTypeCondition } from './node';\nimport type { SchemaIntrospector, SchemaObject } from './schema';\n\nimport type {\n  KeyingConfig,\n  UpdatesConfig,\n  ResolverConfig,\n  OptimisticMutationConfig,\n  Logger,\n} from '../types';\n\nconst BUILTIN_NAME = '__';\n\nexport const isFieldNullable = (\n  schema: SchemaIntrospector,\n  typename: string,\n  fieldName: string,\n  logger: Logger | undefined\n): boolean => {\n  const field = getField(schema, typename, fieldName, logger);\n  return !!field && field.type.kind !== 'NON_NULL';\n};\n\nexport const isListNullable = (\n  schema: SchemaIntrospector,\n  typename: string,\n  fieldName: string,\n  logger: Logger | undefined\n): boolean => {\n  const field = getField(schema, typename, fieldName, logger);\n  if (!field) return false;\n  const ofType =\n    field.type.kind === 'NON_NULL' ? field.type.ofType : field.type;\n  return ofType.kind === 'LIST' && ofType.ofType.kind !== 'NON_NULL';\n};\n\nexport const isFieldAvailableOnType = (\n  schema: SchemaIntrospector,\n  typename: string,\n  fieldName: string,\n  logger: Logger | undefined\n): boolean =>\n  fieldName.indexOf(BUILTIN_NAME) === 0 ||\n  typename.indexOf(BUILTIN_NAME) === 0 ||\n  !!getField(schema, typename, fieldName, logger);\n\nexport const isInterfaceOfType = (\n  schema: SchemaIntrospector,\n  node: InlineFragmentNode | FragmentDefinitionNode,\n  typename: string | void\n): boolean => {\n  if (!typename) return false;\n  const typeCondition = getTypeCondition(node);\n  if (!typeCondition || typename === typeCondition) {\n    return true;\n  } else if (\n    schema.types!.has(typeCondition) &&\n    schema.types!.get(typeCondition)!.kind === 'OBJECT'\n  ) {\n    return typeCondition === typename;\n  }\n\n  expectAbstractType(schema, typeCondition!);\n  expectObjectType(schema, typename!);\n  return schema.isSubType(typeCondition, typename);\n};\n\nconst getField = (\n  schema: SchemaIntrospector,\n  typename: string,\n  fieldName: string,\n  logger: Logger | undefined\n) => {\n  if (\n    fieldName.indexOf(BUILTIN_NAME) === 0 ||\n    typename.indexOf(BUILTIN_NAME) === 0\n  )\n    return;\n\n  expectObjectType(schema, typename);\n  const object = schema.types!.get(typename) as SchemaObject;\n  const field = object.fields()[fieldName];\n  if (!field) {\n    warn(\n      'Invalid field: The field `' +\n        fieldName +\n        '` does not exist on `' +\n        typename +\n        '`, ' +\n        'but the GraphQL document expects it to exist.\\n' +\n        'Traversal will continue, however this may lead to undefined behavior!',\n      4,\n      logger\n    );\n  }\n\n  return field;\n};\n\nfunction expectObjectType(schema: SchemaIntrospector, typename: string) {\n  invariant(\n    schema.types!.has(typename) &&\n      schema.types!.get(typename)!.kind === 'OBJECT',\n    'Invalid Object type: The type `' +\n      typename +\n      '` is not an object in the defined schema, ' +\n      'but the GraphQL document is traversing it.',\n    3\n  );\n}\n\nfunction expectAbstractType(schema: SchemaIntrospector, typename: string) {\n  invariant(\n    schema.types!.has(typename) &&\n      (schema.types!.get(typename)!.kind === 'INTERFACE' ||\n        schema.types!.get(typename)!.kind === 'UNION'),\n    'Invalid Abstract type: The type `' +\n      typename +\n      '` is not an Interface or Union type in the defined schema, ' +\n      'but a fragment in the GraphQL document is using it as a type condition.',\n    5\n  );\n}\n\nexport function expectValidKeyingConfig(\n  schema: SchemaIntrospector,\n  keys: KeyingConfig,\n  logger: Logger | undefined\n): void {\n  if (process.env.NODE_ENV !== 'production') {\n    for (const key in keys) {\n      if (!schema.types!.has(key)) {\n        warn(\n          'Invalid Object type: The type `' +\n            key +\n            '` is not an object in the defined schema, but the `keys` option is referencing it.',\n          20,\n          logger\n        );\n      }\n    }\n  }\n}\n\nexport function expectValidUpdatesConfig(\n  schema: SchemaIntrospector,\n  updates: UpdatesConfig,\n  logger: Logger | undefined\n): void {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n\n  for (const typename in updates) {\n    if (!updates[typename]) {\n      continue;\n    } else if (!schema.types!.has(typename)) {\n      let addition = '';\n\n      if (\n        typename === 'Mutation' &&\n        schema.mutation &&\n        schema.mutation !== 'Mutation'\n      ) {\n        addition +=\n          '\\nMaybe your config should reference `' + schema.mutation + '`?';\n      } else if (\n        typename === 'Subscription' &&\n        schema.subscription &&\n        schema.subscription !== 'Subscription'\n      ) {\n        addition +=\n          '\\nMaybe your config should reference `' + schema.subscription + '`?';\n      }\n\n      return warn(\n        'Invalid updates type: The type `' +\n          typename +\n          '` is not an object in the defined schema, but the `updates` config is referencing it.' +\n          addition,\n        21,\n        logger\n      );\n    }\n\n    const fields = (schema.types!.get(typename)! as SchemaObject).fields();\n    for (const fieldName in updates[typename]!) {\n      if (!fields[fieldName]) {\n        warn(\n          'Invalid updates field: `' +\n            fieldName +\n            '` on `' +\n            typename +\n            '` is not in the defined schema, but the `updates` config is referencing it.',\n          22,\n          logger\n        );\n      }\n    }\n  }\n}\n\nfunction warnAboutResolver(name: string, logger: Logger | undefined): void {\n  warn(\n    `Invalid resolver: \\`${name}\\` is not in the defined schema, but the \\`resolvers\\` option is referencing it.`,\n    23,\n    logger\n  );\n}\n\nfunction warnAboutAbstractResolver(\n  name: string,\n  kind: 'UNION' | 'INTERFACE',\n  logger: Logger | undefined\n): void {\n  warn(\n    `Invalid resolver: \\`${name}\\` does not match to a concrete type in the schema, but the \\`resolvers\\` option is referencing it. Implement the resolver for the types that ${\n      kind === 'UNION' ? 'make up the union' : 'implement the interface'\n    } instead.`,\n    26,\n    logger\n  );\n}\n\nexport function expectValidResolversConfig(\n  schema: SchemaIntrospector,\n  resolvers: ResolverConfig,\n  logger: Logger | undefined\n): void {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n\n  for (const key in resolvers) {\n    if (key === 'Query') {\n      if (schema.query) {\n        const validQueries = (\n          schema.types!.get(schema.query) as SchemaObject\n        ).fields();\n        for (const resolverQuery in resolvers.Query || {}) {\n          if (!validQueries[resolverQuery]) {\n            warnAboutResolver('Query.' + resolverQuery, logger);\n          }\n        }\n      } else {\n        warnAboutResolver('Query', logger);\n      }\n    } else {\n      if (!schema.types!.has(key)) {\n        warnAboutResolver(key, logger);\n      } else if (\n        schema.types!.get(key)!.kind === 'INTERFACE' ||\n        schema.types!.get(key)!.kind === 'UNION'\n      ) {\n        warnAboutAbstractResolver(\n          key,\n          schema.types!.get(key)!.kind as 'INTERFACE' | 'UNION',\n          logger\n        );\n      } else {\n        const validTypeProperties = (\n          schema.types!.get(key) as SchemaObject\n        ).fields();\n        for (const resolverProperty in resolvers[key] || {}) {\n          if (!validTypeProperties[resolverProperty]) {\n            warnAboutResolver(key + '.' + resolverProperty, logger);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function expectValidOptimisticMutationsConfig(\n  schema: SchemaIntrospector,\n  optimisticMutations: OptimisticMutationConfig,\n  logger: Logger | undefined\n): void {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n\n  if (schema.mutation) {\n    const validMutations = (\n      schema.types!.get(schema.mutation) as SchemaObject\n    ).fields();\n    for (const mutation in optimisticMutations) {\n      if (!validMutations[mutation]) {\n        warn(\n          `Invalid optimistic mutation field: \\`${mutation}\\` is not a mutation field in the defined schema, but the \\`optimistic\\` option is referencing it.`,\n          24,\n          logger\n        );\n      }\n    }\n  }\n}\n", "import { stringifyVariables } from '@urql/core';\nimport type { FieldArgs, FieldInfo, KeyInfo } from '../types';\n\nexport const keyOfField = (fieldName: string, args?: FieldArgs) =>\n  args ? `${fieldName}(${stringifyVariables(args)})` : fieldName;\n\nexport const joinKeys = (parentKey: string, key: string) =>\n  `${parentKey}.${key}`;\n\nexport const fieldInfoOfKey = (fieldKey: string): FieldInfo => {\n  const parenIndex = fieldKey.indexOf('(');\n  if (parenIndex > -1) {\n    return {\n      fieldKey,\n      fieldName: fieldKey.slice(0, parenIndex),\n      arguments: JSON.parse(fieldKey.slice(parenIndex + 1, -1)),\n    };\n  } else {\n    return {\n      fieldKey,\n      fieldName: fieldKey,\n      arguments: null,\n    };\n  }\n};\n\nexport const serializeKeys = (entityKey: string, fieldKey: string) =>\n  `${entityKey.replace(/\\./g, '%2e')}.${fieldKey}`;\n\nexport const deserializeKeyInfo = (key: string): KeyInfo => {\n  const dotIndex = key.indexOf('.');\n  const entityKey = key.slice(0, dotIndex).replace(/%2e/g, '.');\n  const fieldKey = key.slice(dotIndex + 1);\n  return { entityKey, fieldKey };\n};\n", "import { stringifyVariables } from '@urql/core';\n\nimport type {\n  Link,\n  EntityField,\n  FieldInfo,\n  StorageAdapter,\n  SerializedEntries,\n  Dependencies,\n  OperationType,\n  DataField,\n  Data,\n} from '../types';\n\nimport {\n  serializeKeys,\n  deserializeKeyInfo,\n  fieldInfoOfKey,\n  joinKeys,\n} from './keys';\n\nimport { invariant, currentDebugStack } from '../helpers/help';\n\ntype Dict<T> = Record<string, T>;\ntype KeyMap<T> = Map<string, T>;\ntype OperationMap<T> = Map<number, T>;\n\ninterface NodeMap<T> {\n  optimistic: OperationMap<KeyMap<Dict<T | undefined>>>;\n  base: KeyMap<Dict<T>>;\n}\n\nexport interface InMemoryData {\n  /** Flag for whether the data is waiting for hydration */\n  hydrating: boolean;\n  /** Flag for whether deferred tasks have been scheduled yet */\n  defer: boolean;\n  /** A list of entities that have been flagged for gargabe collection since no references to them are left */\n  gc: Set<string>;\n  /** A list of entity+field keys that will be persisted */\n  persist: Set<string>;\n  /** The API's \"Query\" typename which is needed to filter dependencies */\n  queryRootKey: string;\n  /** Number of references to each entity (except \"Query\") */\n  refCount: KeyMap<number>;\n  /** A map of entity fields (key-value entries per entity) */\n  records: NodeMap<EntityField>;\n  /** A map of entity links which are connections from one entity to another (key-value entries per entity) */\n  links: NodeMap<Link>;\n  /** A set of Query operation keys that are in-flight and deferred/streamed */\n  deferredKeys: Set<number>;\n  /** A set of Query operation keys that are in-flight and awaiting a result */\n  commutativeKeys: Set<number>;\n  /** A set of Query operation keys that have been written to */\n  dirtyKeys: Set<number>;\n  /** The order of optimistic layers */\n  optimisticOrder: number[];\n  /** This may be a persistence adapter that will receive changes in a batch */\n  storage: StorageAdapter | null;\n}\n\nlet currentOwnership: null | WeakSet<any> = null;\nlet currentDataMapping: null | WeakMap<any, any> = null;\nlet currentData: null | InMemoryData = null;\nlet currentOptimisticKey: null | number = null;\nexport let currentOperation: null | OperationType = null;\nexport let currentDependencies: null | Dependencies = null;\nexport let currentForeignData = false;\nexport let currentOptimistic = false;\n\nexport function makeData(data: DataField | void, isArray?: false): Data;\nexport function makeData(data: DataField | void, isArray: true): DataField[];\n\n/** Creates a new data object unless it's been created in this data run */\nexport function makeData(data?: DataField | void, isArray?: boolean) {\n  let newData: Data | Data[] | undefined;\n  if (data) {\n    if (currentOwnership!.has(data)) return data;\n    newData = currentDataMapping!.get(data) as any;\n  }\n\n  if (newData == null) {\n    newData = (isArray ? [] : {}) as any;\n  }\n\n  if (data) {\n    currentDataMapping!.set(data, newData);\n  }\n\n  currentOwnership!.add(newData);\n  return newData;\n}\n\nexport const ownsData = (data?: Data): boolean =>\n  !!data && currentOwnership!.has(data);\n\n/** Before reading or writing the global state needs to be initialised */\nexport const initDataState = (\n  operationType: OperationType,\n  data: InMemoryData,\n  layerKey?: number | null,\n  isOptimistic?: boolean,\n  isForeignData?: boolean\n) => {\n  currentOwnership = new WeakSet();\n  currentDataMapping = new WeakMap();\n  currentOperation = operationType;\n  currentData = data;\n  currentDependencies = new Set();\n  currentOptimistic = !!isOptimistic;\n  currentForeignData = !!isForeignData;\n  if (process.env.NODE_ENV !== 'production') {\n    currentDebugStack.length = 0;\n  }\n\n  if (!layerKey) {\n    currentOptimisticKey = null;\n  } else if (currentOperation === 'read') {\n    // We don't create new layers for read operations and instead simply\n    // apply the currently available layer, if any\n    currentOptimisticKey = layerKey;\n  } else if (\n    isOptimistic ||\n    data.hydrating ||\n    data.optimisticOrder.length > 1\n  ) {\n    // If this operation isn't optimistic and we see it for the first time,\n    // then it must've been optimistic in the past, so we can proactively\n    // clear the optimistic data before writing\n    if (!isOptimistic && !data.commutativeKeys.has(layerKey)) {\n      reserveLayer(data, layerKey);\n    } else if (isOptimistic) {\n      if (\n        data.optimisticOrder.indexOf(layerKey) !== -1 &&\n        !data.commutativeKeys.has(layerKey)\n      ) {\n        data.optimisticOrder.splice(data.optimisticOrder.indexOf(layerKey), 1);\n      }\n      // NOTE: This optimally shouldn't happen as it implies that an optimistic\n      // write is being performed after a concrete write.\n      data.commutativeKeys.delete(layerKey);\n    }\n\n    // An optimistic update of a mutation may force an optimistic layer,\n    // or this Query update may be applied optimistically since it's part\n    // of a commutative chain\n    currentOptimisticKey = layerKey;\n    createLayer(data, layerKey);\n  } else {\n    // Otherwise we don't create an optimistic layer and clear the\n    // operation's one if it already exists\n    // We also do this when only one layer exists to avoid having to squash\n    // any layers at the end of writing this layer\n    currentOptimisticKey = null;\n    deleteLayer(data, layerKey);\n  }\n};\n\n/** Reset the data state after read/write is complete */\nexport const clearDataState = () => {\n  // NOTE: This is only called to check for the invariant to pass\n  if (process.env.NODE_ENV !== 'production') {\n    getCurrentDependencies();\n  }\n\n  const data = currentData!;\n  const layerKey = currentOptimisticKey;\n  currentOptimistic = false;\n  currentOptimisticKey = null;\n\n  // Determine whether the current operation has been a commutative layer\n  if (\n    !data.hydrating &&\n    layerKey &&\n    data.optimisticOrder.indexOf(layerKey) > -1\n  ) {\n    // Squash all layers in reverse order (low priority upwards) that have\n    // been written already\n    let i = data.optimisticOrder.length;\n    while (\n      --i >= 0 &&\n      data.dirtyKeys.has(data.optimisticOrder[i]) &&\n      data.commutativeKeys.has(data.optimisticOrder[i])\n    )\n      squashLayer(data.optimisticOrder[i]);\n  }\n\n  currentOwnership = null;\n  currentDataMapping = null;\n  currentOperation = null;\n  currentData = null;\n  currentDependencies = null;\n  if (process.env.NODE_ENV !== 'production') {\n    currentDebugStack.length = 0;\n  }\n\n  if (process.env.NODE_ENV !== 'test') {\n    // Schedule deferred tasks if we haven't already, and if either a persist or GC run\n    // are likely to be needed\n    if (!data.defer && (data.storage || !data.optimisticOrder.length)) {\n      data.defer = true;\n      setTimeout(() => {\n        initDataState('read', data, null);\n        gc();\n        persistData();\n        clearDataState();\n        data.defer = false;\n      });\n    }\n  }\n};\n\n/** Initialises then resets the data state, which may squash this layer if necessary */\nexport const noopDataState = (\n  data: InMemoryData,\n  layerKey: number | null,\n  isOptimistic?: boolean\n) => {\n  if (layerKey && !isOptimistic) data.deferredKeys.delete(layerKey);\n  initDataState('write', data, layerKey, isOptimistic);\n  clearDataState();\n};\n\n/** As we're writing, we keep around all the records and links we've read or have written to */\nexport const getCurrentDependencies = (): Dependencies => {\n  invariant(\n    currentDependencies !== null,\n    'Invalid Cache call: The cache may only be accessed or mutated during' +\n      'operations like write or query, or as part of its resolvers, updaters, ' +\n      'or optimistic configs.',\n    2\n  );\n\n  return currentDependencies;\n};\n\nexport const make = (queryRootKey: string): InMemoryData => ({\n  hydrating: false,\n  defer: false,\n  gc: new Set(),\n  persist: new Set(),\n  queryRootKey,\n  refCount: new Map(),\n  links: {\n    optimistic: new Map(),\n    base: new Map(),\n  },\n  records: {\n    optimistic: new Map(),\n    base: new Map(),\n  },\n  deferredKeys: new Set(),\n  commutativeKeys: new Set(),\n  dirtyKeys: new Set(),\n  optimisticOrder: [],\n  storage: null,\n});\n\n/** Adds a node value to a NodeMap (taking optimistic values into account */\nconst setNode = <T>(\n  map: NodeMap<T>,\n  entityKey: string,\n  fieldKey: string,\n  value: T\n) => {\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      currentOperation !== 'read',\n      'Invalid Cache write: You may not write to the cache during cache reads. ' +\n        ' Accesses to `cache.writeFragment`, `cache.updateQuery`, and `cache.link` may ' +\n        ' not be made inside `resolvers` for instance.',\n      27\n    );\n  }\n\n  // Optimistic values are written to a map in the optimistic dict\n  // All other values are written to the base map\n  const keymap: KeyMap<Dict<T | undefined>> = currentOptimisticKey\n    ? map.optimistic.get(currentOptimisticKey)!\n    : map.base;\n\n  // On the map itself we get or create the entity as a dict\n  let entity = keymap.get(entityKey) as Dict<T | undefined>;\n  if (entity === undefined) {\n    keymap.set(entityKey, (entity = Object.create(null)));\n  }\n\n  // If we're setting undefined we delete the node's entry\n  // On optimistic layers we actually set undefined so it can\n  // override the base value\n  if (value === undefined && !currentOptimisticKey) {\n    delete entity[fieldKey];\n  } else {\n    entity[fieldKey] = value;\n  }\n};\n\n/** Gets a node value from a NodeMap (taking optimistic values into account */\nconst getNode = <T>(\n  map: NodeMap<T>,\n  entityKey: string,\n  fieldKey: string\n): T | undefined => {\n  let node: Dict<T | undefined> | undefined;\n  // A read may be initialised to skip layers until its own, which is useful for\n  // reading back written data. It won't skip over optimistic layers however\n  let skip =\n    !currentOptimistic &&\n    currentOperation === 'read' &&\n    currentOptimisticKey &&\n    currentData!.commutativeKeys.has(currentOptimisticKey);\n  // This first iterates over optimistic layers (in order)\n  for (let i = 0, l = currentData!.optimisticOrder.length; i < l; i++) {\n    const layerKey = currentData!.optimisticOrder[i];\n    const optimistic = map.optimistic.get(layerKey);\n    // If we're reading starting from a specific layer, we skip until a match\n    skip = skip && layerKey !== currentOptimisticKey;\n    // If the node and node value exists it is returned, including undefined\n    if (\n      optimistic &&\n      (!skip || !currentData!.commutativeKeys.has(layerKey)) &&\n      (!currentOptimistic ||\n        currentOperation === 'write' ||\n        currentData!.commutativeKeys.has(layerKey)) &&\n      (node = optimistic.get(entityKey)) !== undefined &&\n      fieldKey in node\n    ) {\n      return node[fieldKey];\n    }\n  }\n\n  // Otherwise we read the non-optimistic base value\n  node = map.base.get(entityKey);\n  return node !== undefined ? node[fieldKey] : undefined;\n};\n\n/** Adjusts the reference count of an entity on a refCount dict by \"by\" and updates the gc */\nconst updateRCForEntity = (entityKey: string, by: number): void => {\n  // Retrieve the reference count and adjust it by \"by\"\n  const count = currentData!.refCount.get(entityKey) || 0;\n  const newCount = count + by > 0 ? count + by : 0;\n  currentData!.refCount.set(entityKey, newCount);\n  // Add it to the garbage collection batch if it needs to be deleted or remove it\n  // from the batch if it needs to be kept\n  if (!newCount) currentData!.gc.add(entityKey);\n  else if (!count && newCount) currentData!.gc.delete(entityKey);\n};\n\n/** Adjusts the reference counts of all entities of a link on a refCount dict by \"by\" and updates the gc */\nconst updateRCForLink = (link: Link | undefined, by: number): void => {\n  if (Array.isArray(link)) {\n    for (let i = 0, l = link.length; i < l; i++) updateRCForLink(link[i], by);\n  } else if (typeof link === 'string') {\n    updateRCForEntity(link, by);\n  }\n};\n\n/** Writes all parsed FieldInfo objects of a given node dict to a given array if it hasn't been seen */\nconst extractNodeFields = <T>(\n  fieldInfos: FieldInfo[],\n  seenFieldKeys: Set<string>,\n  node: Dict<T> | undefined\n): void => {\n  if (node !== undefined) {\n    for (const fieldKey in node) {\n      if (!seenFieldKeys.has(fieldKey)) {\n        // If the node hasn't been seen the serialized fieldKey is turnt back into\n        // a rich FieldInfo object that also contains the field's name and arguments\n        fieldInfos.push(fieldInfoOfKey(fieldKey));\n        seenFieldKeys.add(fieldKey);\n      }\n    }\n  }\n};\n\n/** Writes all parsed FieldInfo objects of all nodes in a NodeMap to a given array */\nconst extractNodeMapFields = <T>(\n  fieldInfos: FieldInfo[],\n  seenFieldKeys: Set<string>,\n  entityKey: string,\n  map: NodeMap<T>\n) => {\n  // Extracts FieldInfo for the entity in the base map\n  extractNodeFields(fieldInfos, seenFieldKeys, map.base.get(entityKey));\n\n  // Then extracts FieldInfo for the entity from the optimistic maps\n  for (let i = 0, l = currentData!.optimisticOrder.length; i < l; i++) {\n    const optimistic = map.optimistic.get(currentData!.optimisticOrder[i]);\n    if (optimistic !== undefined) {\n      extractNodeFields(fieldInfos, seenFieldKeys, optimistic.get(entityKey));\n    }\n  }\n};\n\n/** Garbage collects all entities that have been marked as having no references */\nexport const gc = () => {\n  // If we're currently awaiting deferred results, abort GC run\n  if (currentData!.optimisticOrder.length) return;\n\n  // Iterate over all entities that have been marked for deletion\n  // Entities have been marked for deletion in `updateRCForEntity` if\n  // their reference count dropped to 0\n  for (const entityKey of currentData!.gc.keys()) {\n    // Remove the current key from the GC batch\n    currentData!.gc.delete(entityKey);\n\n    // Check first whether the entity has any references,\n    // if so, we skip it from the GC run\n    const rc = currentData!.refCount.get(entityKey) || 0;\n    if (rc > 0) continue;\n\n    // Delete the reference count, and delete the entity from the GC batch\n    currentData!.refCount.delete(entityKey);\n    currentData!.records.base.delete(entityKey);\n    const linkNode = currentData!.links.base.get(entityKey);\n    if (linkNode) {\n      currentData!.links.base.delete(entityKey);\n      for (const fieldKey in linkNode) updateRCForLink(linkNode[fieldKey], -1);\n    }\n  }\n};\n\nconst updateDependencies = (entityKey: string, fieldKey?: string) => {\n  if (entityKey !== currentData!.queryRootKey) {\n    currentDependencies!.add(entityKey);\n  } else if (fieldKey !== undefined && fieldKey !== '__typename') {\n    currentDependencies!.add(joinKeys(entityKey, fieldKey));\n  }\n};\n\nconst updatePersist = (entityKey: string, fieldKey: string) => {\n  if (!currentOptimistic && currentData!.storage) {\n    currentData!.persist.add(serializeKeys(entityKey, fieldKey));\n  }\n};\n\n/** Reads an entity's field (a \"record\") from data */\nexport const readRecord = (\n  entityKey: string,\n  fieldKey: string\n): EntityField => {\n  updateDependencies(entityKey, fieldKey);\n  return getNode(currentData!.records, entityKey, fieldKey);\n};\n\n/** Reads an entity's link from data */\nexport const readLink = (\n  entityKey: string,\n  fieldKey: string\n): Link | undefined => {\n  updateDependencies(entityKey, fieldKey);\n  return getNode(currentData!.links, entityKey, fieldKey);\n};\n\n/** Writes an entity's field (a \"record\") to data */\nexport const writeRecord = (\n  entityKey: string,\n  fieldKey: string,\n  value?: EntityField\n) => {\n  updateDependencies(entityKey, fieldKey);\n  updatePersist(entityKey, fieldKey);\n  setNode(currentData!.records, entityKey, fieldKey, value);\n};\n\nexport const hasField = (entityKey: string, fieldKey: string): boolean =>\n  readRecord(entityKey, fieldKey) !== undefined ||\n  readLink(entityKey, fieldKey) !== undefined;\n\n/** Writes an entity's link to data */\nexport const writeLink = (\n  entityKey: string,\n  fieldKey: string,\n  link?: Link | undefined\n) => {\n  // Retrieve the link NodeMap from either an optimistic or the base layer\n  const links = currentOptimisticKey\n    ? currentData!.links.optimistic.get(currentOptimisticKey)\n    : currentData!.links.base;\n  // Update the reference count for the link\n  if (!currentOptimisticKey) {\n    const entityLinks = links && links.get(entityKey);\n    updateRCForLink(entityLinks && entityLinks[fieldKey], -1);\n    updateRCForLink(link, 1);\n  }\n  // Update persistence batch and dependencies\n  updateDependencies(entityKey, fieldKey);\n  updatePersist(entityKey, fieldKey);\n  // Update the link\n  setNode(currentData!.links, entityKey, fieldKey, link);\n};\n\n/** Reserves an optimistic layer and preorders it */\nexport const reserveLayer = (\n  data: InMemoryData,\n  layerKey: number,\n  hasNext?: boolean\n) => {\n  // Find the current index for the layer, and remove it from\n  // the order if it exists already\n  let index = data.optimisticOrder.indexOf(layerKey);\n  if (index > -1) data.optimisticOrder.splice(index, 1);\n\n  if (hasNext) {\n    data.deferredKeys.add(layerKey);\n    // If the layer has future results then we'll move it past any layer that's\n    // still empty, so currently pending operations will take precedence over it\n    for (\n      index = index > -1 ? index : 0;\n      index < data.optimisticOrder.length &&\n      !data.deferredKeys.has(data.optimisticOrder[index]) &&\n      (!data.dirtyKeys.has(data.optimisticOrder[index]) ||\n        !data.commutativeKeys.has(data.optimisticOrder[index]));\n      index++\n    );\n  } else {\n    data.deferredKeys.delete(layerKey);\n    // Protect optimistic layers from being turned into non-optimistic layers\n    // while preserving optimistic data\n    if (index > -1 && !data.commutativeKeys.has(layerKey))\n      clearLayer(data, layerKey);\n    index = 0;\n  }\n\n  // Register the layer with the deferred or \"top\" index and\n  // mark it as commutative\n  data.optimisticOrder.splice(index, 0, layerKey);\n  data.commutativeKeys.add(layerKey);\n};\n\n/** Checks whether a given layer exists */\nexport const hasLayer = (data: InMemoryData, layerKey: number) =>\n  data.commutativeKeys.has(layerKey) ||\n  data.optimisticOrder.indexOf(layerKey) > -1;\n\n/** Creates an optimistic layer of links and records */\nconst createLayer = (data: InMemoryData, layerKey: number) => {\n  if (data.optimisticOrder.indexOf(layerKey) === -1) {\n    data.optimisticOrder.unshift(layerKey);\n  }\n\n  if (!data.dirtyKeys.has(layerKey)) {\n    data.dirtyKeys.add(layerKey);\n    data.links.optimistic.set(layerKey, new Map());\n    data.records.optimistic.set(layerKey, new Map());\n  }\n};\n\n/** Clears all links and records of an optimistic layer */\nconst clearLayer = (data: InMemoryData, layerKey: number) => {\n  if (data.dirtyKeys.has(layerKey)) {\n    data.dirtyKeys.delete(layerKey);\n    data.records.optimistic.delete(layerKey);\n    data.links.optimistic.delete(layerKey);\n    data.deferredKeys.delete(layerKey);\n  }\n};\n\n/** Deletes links and records of an optimistic layer, and the layer itself */\nconst deleteLayer = (data: InMemoryData, layerKey: number) => {\n  const index = data.optimisticOrder.indexOf(layerKey);\n  if (index > -1) {\n    data.optimisticOrder.splice(index, 1);\n    data.commutativeKeys.delete(layerKey);\n  }\n\n  clearLayer(data, layerKey);\n};\n\n/** Merges an optimistic layer of links and records into the base data */\nconst squashLayer = (layerKey: number) => {\n  // Hide current dependencies from squashing operations\n  const previousDependencies = currentDependencies;\n  currentDependencies = new Set();\n  currentOperation = 'write';\n\n  const links = currentData!.links.optimistic.get(layerKey);\n  if (links) {\n    for (const entry of links.entries()) {\n      const entityKey = entry[0];\n      const keyMap = entry[1];\n      for (const fieldKey in keyMap)\n        writeLink(entityKey, fieldKey, keyMap[fieldKey]);\n    }\n  }\n\n  const records = currentData!.records.optimistic.get(layerKey);\n  if (records) {\n    for (const entry of records.entries()) {\n      const entityKey = entry[0];\n      const keyMap = entry[1];\n      for (const fieldKey in keyMap)\n        writeRecord(entityKey, fieldKey, keyMap[fieldKey]);\n    }\n  }\n\n  currentDependencies = previousDependencies;\n  deleteLayer(currentData!, layerKey);\n};\n\n/** Return an array of FieldInfo (info on all the fields and their arguments) for a given entity */\nexport const inspectFields = (entityKey: string): FieldInfo[] => {\n  const { links, records } = currentData!;\n  const fieldInfos: FieldInfo[] = [];\n  const seenFieldKeys: Set<string> = new Set();\n  // Update dependencies\n  updateDependencies(entityKey);\n  // Extract FieldInfos to the fieldInfos array for links and records\n  // This also deduplicates by keeping track of fieldKeys in the seenFieldKeys Set\n  extractNodeMapFields(fieldInfos, seenFieldKeys, entityKey, links);\n  extractNodeMapFields(fieldInfos, seenFieldKeys, entityKey, records);\n  return fieldInfos;\n};\n\nexport const persistData = () => {\n  if (currentData!.storage) {\n    currentOptimistic = true;\n    currentOperation = 'read';\n    const entries: SerializedEntries = {};\n    for (const key of currentData!.persist.keys()) {\n      const { entityKey, fieldKey } = deserializeKeyInfo(key);\n      let x: void | Link | EntityField;\n      if ((x = readLink(entityKey, fieldKey)) !== undefined) {\n        entries[key] = `:${stringifyVariables(x)}`;\n      } else if ((x = readRecord(entityKey, fieldKey)) !== undefined) {\n        entries[key] = stringifyVariables(x);\n      } else {\n        entries[key] = undefined;\n      }\n    }\n\n    currentOptimistic = false;\n    currentData!.storage.writeData(entries);\n    currentData!.persist.clear();\n  }\n};\n\nexport const hydrateData = (\n  data: InMemoryData,\n  storage: StorageAdapter,\n  entries: SerializedEntries\n) => {\n  initDataState('write', data, null);\n\n  for (const key in entries) {\n    const value = entries[key];\n    if (value !== undefined) {\n      const { entityKey, fieldKey } = deserializeKeyInfo(key);\n      if (value[0] === ':') {\n        if (readLink(entityKey, fieldKey) === undefined)\n          writeLink(entityKey, fieldKey, JSON.parse(value.slice(1)));\n      } else {\n        if (readRecord(entityKey, fieldKey) === undefined)\n          writeRecord(entityKey, fieldKey, JSON.parse(value));\n      }\n    }\n  }\n\n  data.storage = storage;\n  data.hydrating = false;\n  clearDataState();\n};\n", "import type { CombinedError, ErrorLike, FormattedNode } from '@urql/core';\n\nimport type {\n  FieldNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n} from '@0no-co/graphql.web';\nimport { Kind } from '@0no-co/graphql.web';\n\nimport type { SelectionSet } from '../ast';\nimport { isDeferred, getTypeCondition, getSelectionSet, getName } from '../ast';\n\nimport { warn, pushDebugNode, popDebugNode } from '../helpers/help';\nimport { hasField, currentOperation, currentOptimistic } from '../store/data';\nimport { keyOfField } from '../store/keys';\nimport type { Store } from '../store/store';\n\nimport { getFieldArguments, shouldInclude, isInterfaceOfType } from '../ast';\n\nimport type {\n  Fragments,\n  Variables,\n  DataField,\n  NullArray,\n  Link,\n  Entity,\n  Data,\n  Logger,\n} from '../types';\n\nexport interface Context {\n  store: Store;\n  variables: Variables;\n  fragments: Fragments;\n  parentTypeName: string;\n  parentKey: string;\n  parentFieldKey: string;\n  parent: Data;\n  fieldName: string;\n  error: ErrorLike | undefined;\n  partial: boolean;\n  hasNext: boolean;\n  optimistic: boolean;\n  __internal: {\n    path: Array<string | number>;\n    errorMap: { [path: string]: ErrorLike } | undefined;\n  };\n}\n\nexport let contextRef: Context | null = null;\nexport let deferRef = false;\n\n// Checks whether the current data field is a cache miss because of a GraphQLError\nexport const getFieldError = (ctx: Context): ErrorLike | undefined =>\n  ctx.__internal.path.length > 0 && ctx.__internal.errorMap\n    ? ctx.__internal.errorMap[ctx.__internal.path.join('.')]\n    : undefined;\n\nexport const makeContext = (\n  store: Store,\n  variables: Variables,\n  fragments: Fragments,\n  typename: string,\n  entityKey: string,\n  error: CombinedError | undefined\n): Context => {\n  deferRef = false;\n\n  const ctx: Context = {\n    store,\n    variables,\n    fragments,\n    parent: { __typename: typename },\n    parentTypeName: typename,\n    parentKey: entityKey,\n    parentFieldKey: '',\n    fieldName: '',\n    error: undefined,\n    partial: false,\n    hasNext: false,\n    optimistic: currentOptimistic,\n    __internal: {\n      path: [],\n      errorMap: undefined,\n    },\n  };\n\n  if (error && error.graphQLErrors) {\n    for (let i = 0; i < error.graphQLErrors.length; i++) {\n      const graphQLError = error.graphQLErrors[i];\n      if (graphQLError.path && graphQLError.path.length) {\n        if (!ctx.__internal.errorMap)\n          ctx.__internal.errorMap = Object.create(null);\n        ctx.__internal.errorMap![graphQLError.path.join('.')] = graphQLError;\n      }\n    }\n  }\n\n  return ctx;\n};\n\nexport const updateContext = (\n  ctx: Context,\n  data: Data,\n  typename: string,\n  entityKey: string,\n  fieldKey: string,\n  fieldName: string\n) => {\n  contextRef = ctx;\n  ctx.parent = data;\n  ctx.parentTypeName = typename;\n  ctx.parentKey = entityKey;\n  ctx.parentFieldKey = fieldKey;\n  ctx.fieldName = fieldName;\n  ctx.error = getFieldError(ctx);\n};\n\nconst isFragmentHeuristicallyMatching = (\n  node: FormattedNode<InlineFragmentNode | FragmentDefinitionNode>,\n  typename: void | string,\n  entityKey: string,\n  vars: Variables,\n  logger?: Logger\n) => {\n  if (!typename) return false;\n  const typeCondition = getTypeCondition(node);\n  if (!typeCondition || typename === typeCondition) return true;\n\n  warn(\n    'Heuristic Fragment Matching: A fragment is trying to match against the `' +\n      typename +\n      '` type, ' +\n      'but the type condition is `' +\n      typeCondition +\n      '`. Since GraphQL allows for interfaces `' +\n      typeCondition +\n      '` may be an ' +\n      'interface.\\nA schema needs to be defined for this match to be deterministic, ' +\n      'otherwise the fragment will be matched heuristically!',\n    16,\n    logger\n  );\n\n  return (\n    currentOperation === 'write' ||\n    !getSelectionSet(node).some(node => {\n      if (node.kind !== Kind.FIELD) return false;\n      const fieldKey = keyOfField(getName(node), getFieldArguments(node, vars));\n      return !hasField(entityKey, fieldKey);\n    })\n  );\n};\n\ninterface SelectionIterator {\n  (): FormattedNode<FieldNode> | undefined;\n}\n\nexport const makeSelectionIterator = (\n  typename: void | string,\n  entityKey: string,\n  defer: boolean,\n  selectionSet: FormattedNode<SelectionSet>,\n  ctx: Context\n): SelectionIterator => {\n  let child: SelectionIterator | void;\n  let index = 0;\n\n  return function next() {\n    let node: FormattedNode<FieldNode> | undefined;\n    while (child || index < selectionSet.length) {\n      node = undefined;\n      deferRef = defer;\n      if (child) {\n        if ((node = child())) {\n          return node;\n        } else {\n          child = undefined;\n          if (process.env.NODE_ENV !== 'production') popDebugNode();\n        }\n      } else {\n        const select = selectionSet[index++];\n        if (!shouldInclude(select, ctx.variables)) {\n          /*noop*/\n        } else if (select.kind !== Kind.FIELD) {\n          // A fragment is either referred to by FragmentSpread or inline\n          const fragment =\n            select.kind !== Kind.INLINE_FRAGMENT\n              ? ctx.fragments[getName(select)]\n              : select;\n          if (fragment) {\n            const isMatching =\n              !fragment.typeCondition ||\n              (ctx.store.schema\n                ? isInterfaceOfType(ctx.store.schema, fragment, typename)\n                : isFragmentHeuristicallyMatching(\n                    fragment,\n                    typename,\n                    entityKey,\n                    ctx.variables,\n                    ctx.store.logger\n                  ));\n            if (isMatching) {\n              if (process.env.NODE_ENV !== 'production')\n                pushDebugNode(typename, fragment);\n              child = makeSelectionIterator(\n                typename,\n                entityKey,\n                defer || isDeferred(select, ctx.variables),\n                getSelectionSet(fragment),\n                ctx\n              );\n            }\n          }\n        } else if (currentOperation === 'write' || !select._generated) {\n          return select;\n        }\n      }\n    }\n  };\n};\n\nexport const ensureData = (x: DataField): Data | NullArray<Data> | null =>\n  x == null ? null : (x as Data | NullArray<Data>);\n\nexport const ensureLink = (store: Store, ref: Link<Entity>): Link => {\n  if (!ref) {\n    return ref || null;\n  } else if (Array.isArray(ref)) {\n    const link = new Array(ref.length);\n    for (let i = 0, l = link.length; i < l; i++)\n      link[i] = ensureLink(store, ref[i]);\n    return link;\n  }\n\n  const link = store.keyOfEntity(ref);\n  if (!link && ref && typeof ref === 'object') {\n    warn(\n      \"Can't generate a key for link(...) item.\" +\n        '\\nYou have to pass an `id` or `_id` field or create a custom `keys` config for `' +\n        ref.__typename +\n        '`.',\n      12,\n      store.logger\n    );\n  }\n\n  return link;\n};\n", "import type { FormattedNode, CombinedError } from '@urql/core';\nimport { formatDocument } from '@urql/core';\n\nimport type {\n  FieldNode,\n  DocumentNode,\n  FragmentDefinitionNode,\n} from '@0no-co/graphql.web';\n\nimport type { SelectionSet } from '../ast';\nimport {\n  getSelectionSet,\n  getName,\n  getFragmentTypeName,\n  getFieldAlias,\n  getFragments,\n  getMainOperation,\n  normalizeVariables,\n  getFieldArguments,\n  getDirectives,\n} from '../ast';\n\nimport type {\n  Variables,\n  Data,\n  DataField,\n  Link,\n  OperationRequest,\n  Dependencies,\n  Resolver,\n} from '../types';\n\nimport { joinKeys, keyOfField } from '../store/keys';\nimport type { Store } from '../store/store';\nimport * as InMemoryData from '../store/data';\nimport { warn, pushDebugNode, popDebugNode } from '../helpers/help';\n\nimport type { Context } from './shared';\nimport {\n  makeSelectionIterator,\n  ensureData,\n  makeContext,\n  updateContext,\n  getFieldError,\n  deferRef,\n} from './shared';\n\nimport {\n  isFieldAvailableOnType,\n  isFieldNullable,\n  isListNullable,\n} from '../ast';\n\nexport interface QueryResult {\n  dependencies: Dependencies;\n  partial: boolean;\n  hasNext: boolean;\n  data: null | Data;\n}\n\n/** Reads a GraphQL query from the cache.\n * @internal\n */\nexport const __initAnd_query = (\n  store: Store,\n  request: OperationRequest,\n  data?: Data | null | undefined,\n  error?: CombinedError | undefined,\n  key?: number\n): QueryResult => {\n  InMemoryData.initDataState('read', store.data, key);\n  const result = _query(store, request, data, error);\n  InMemoryData.clearDataState();\n  return result;\n};\n\n/** Reads a GraphQL query from the cache.\n * @internal\n */\nexport const _query = (\n  store: Store,\n  request: OperationRequest,\n  input?: Data | null | undefined,\n  error?: CombinedError | undefined\n): QueryResult => {\n  const query = formatDocument(request.query);\n  const operation = getMainOperation(query);\n  const rootKey = store.rootFields[operation.operation];\n  const rootSelect = getSelectionSet(operation);\n\n  const ctx = makeContext(\n    store,\n    normalizeVariables(operation, request.variables),\n    getFragments(query),\n    rootKey,\n    rootKey,\n    error\n  );\n\n  if (process.env.NODE_ENV !== 'production') {\n    pushDebugNode(rootKey, operation);\n  }\n\n  // NOTE: This may reuse \"previous result data\" as indicated by the\n  // `originalData` argument in readRoot(). This behaviour isn't used\n  // for readSelection() however, which always produces results from\n  // scratch\n  const data =\n    rootKey !== ctx.store.rootFields['query']\n      ? readRoot(ctx, rootKey, rootSelect, input || InMemoryData.makeData())\n      : readSelection(\n          ctx,\n          rootKey,\n          rootSelect,\n          input || InMemoryData.makeData()\n        );\n\n  if (process.env.NODE_ENV !== 'production') {\n    popDebugNode();\n    InMemoryData.getCurrentDependencies();\n  }\n\n  return {\n    dependencies: InMemoryData.currentDependencies!,\n    partial: ctx.partial || !data,\n    hasNext: ctx.hasNext,\n    data: data || null,\n  };\n};\n\nconst readRoot = (\n  ctx: Context,\n  entityKey: string,\n  select: FormattedNode<SelectionSet>,\n  input: Data\n): Data => {\n  const typename = ctx.store.rootNames[entityKey]\n    ? entityKey\n    : input.__typename;\n  if (typeof typename !== 'string') {\n    return input;\n  }\n\n  const iterate = makeSelectionIterator(\n    entityKey,\n    entityKey,\n    deferRef,\n    select,\n    ctx\n  );\n\n  let node: FormattedNode<FieldNode> | void;\n  let hasChanged = InMemoryData.currentForeignData;\n  const output = InMemoryData.makeData(input);\n  while ((node = iterate())) {\n    const fieldAlias = getFieldAlias(node);\n    const fieldValue = input[fieldAlias];\n    // Add the current alias to the walked path before processing the field's value\n    ctx.__internal.path.push(fieldAlias);\n    // We temporarily store the data field in here, but undefined\n    // means that the value is missing from the cache\n    let dataFieldValue: void | DataField;\n    if (node.selectionSet && fieldValue !== null) {\n      dataFieldValue = readRootField(\n        ctx,\n        getSelectionSet(node),\n        ensureData(fieldValue)\n      );\n    } else {\n      dataFieldValue = fieldValue;\n    }\n\n    // Check for any referential changes in the field's value\n    hasChanged = hasChanged || dataFieldValue !== fieldValue;\n    if (dataFieldValue !== undefined) output[fieldAlias] = dataFieldValue!;\n\n    // After processing the field, remove the current alias from the path again\n    ctx.__internal.path.pop();\n  }\n\n  return hasChanged ? output : input;\n};\n\nconst readRootField = (\n  ctx: Context,\n  select: FormattedNode<SelectionSet>,\n  originalData: Link<Data>\n): Link<Data> => {\n  if (Array.isArray(originalData)) {\n    const newData = new Array(originalData.length);\n    let hasChanged = InMemoryData.currentForeignData;\n    for (let i = 0, l = originalData.length; i < l; i++) {\n      // Add the current index to the walked path before reading the field's value\n      ctx.__internal.path.push(i);\n      // Recursively read the root field's value\n      newData[i] = readRootField(ctx, select, originalData[i]);\n      hasChanged = hasChanged || newData[i] !== originalData[i];\n      // After processing the field, remove the current index from the path\n      ctx.__internal.path.pop();\n    }\n\n    return hasChanged ? newData : originalData;\n  } else if (originalData === null) {\n    return null;\n  }\n\n  // Write entity to key that falls back to the given parentFieldKey\n  const entityKey = ctx.store.keyOfEntity(originalData);\n  if (entityKey !== null) {\n    // We assume that since this is used for result data this can never be undefined,\n    // since the result data has already been written to the cache\n    return readSelection(ctx, entityKey, select, originalData) || null;\n  } else {\n    return readRoot(ctx, originalData.__typename, select, originalData);\n  }\n};\n\nexport const _queryFragment = (\n  store: Store,\n  query: FormattedNode<DocumentNode>,\n  entity: Partial<Data> | string,\n  variables?: Variables,\n  fragmentName?: string\n): Data | null => {\n  const fragments = getFragments(query);\n\n  let fragment: FormattedNode<FragmentDefinitionNode>;\n  if (fragmentName) {\n    fragment = fragments[fragmentName]!;\n    if (!fragment) {\n      warn(\n        'readFragment(...) was called with a fragment name that does not exist.\\n' +\n          'You provided ' +\n          fragmentName +\n          ' but could only find ' +\n          Object.keys(fragments).join(', ') +\n          '.',\n        6,\n        store.logger\n      );\n\n      return null;\n    }\n  } else {\n    const names = Object.keys(fragments);\n    fragment = fragments[names[0]]!;\n    if (!fragment) {\n      warn(\n        'readFragment(...) was called with an empty fragment.\\n' +\n          'You have to call it with at least one fragment in your GraphQL document.',\n        6,\n        store.logger\n      );\n\n      return null;\n    }\n  }\n\n  const typename = getFragmentTypeName(fragment);\n  if (typeof entity !== 'string' && !entity.__typename)\n    entity.__typename = typename;\n  const entityKey = store.keyOfEntity(entity as Data);\n  if (!entityKey) {\n    warn(\n      \"Can't generate a key for readFragment(...).\\n\" +\n        'You have to pass an `id` or `_id` field or create a custom `keys` config for `' +\n        typename +\n        '`.',\n      7,\n      store.logger\n    );\n\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    pushDebugNode(typename, fragment);\n  }\n\n  const ctx = makeContext(\n    store,\n    variables || {},\n    fragments,\n    typename,\n    entityKey,\n    undefined\n  );\n\n  const result =\n    readSelection(\n      ctx,\n      entityKey,\n      getSelectionSet(fragment),\n      InMemoryData.makeData()\n    ) || null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    popDebugNode();\n  }\n\n  return result;\n};\n\nfunction getFieldResolver(\n  directives: ReturnType<typeof getDirectives>,\n  typename: string,\n  fieldName: string,\n  ctx: Context\n): Resolver | void {\n  const resolvers = ctx.store.resolvers[typename];\n  const fieldResolver = resolvers && resolvers[fieldName];\n\n  let directiveResolver: Resolver | undefined;\n  for (const name in directives) {\n    const directiveNode = directives[name];\n    if (\n      directiveNode &&\n      name !== 'include' &&\n      name !== 'skip' &&\n      ctx.store.directives[name]\n    ) {\n      directiveResolver = ctx.store.directives[name](\n        getFieldArguments(directiveNode, ctx.variables)\n      );\n      if (process.env.NODE_ENV === 'production') return directiveResolver;\n      break;\n    }\n  }\n\n  if (fieldResolver && directiveResolver) {\n    warn(\n      `A resolver and directive is being used at \"${typename}.${fieldName}\" simultaneously. Only the directive will apply.`,\n      28,\n      ctx.store.logger\n    );\n  }\n\n  return directiveResolver || fieldResolver;\n}\n\nconst readSelection = (\n  ctx: Context,\n  key: string,\n  select: FormattedNode<SelectionSet>,\n  input: Data,\n  result?: Data\n): Data | undefined => {\n  const { store } = ctx;\n  const isQuery = key === store.rootFields.query;\n\n  const entityKey = (result && store.keyOfEntity(result)) || key;\n  if (!isQuery && !!ctx.store.rootNames[entityKey]) {\n    warn(\n      'Invalid root traversal: A selection was being read on `' +\n        entityKey +\n        '` which is an uncached root type.\\n' +\n        'The `' +\n        ctx.store.rootFields.mutation +\n        '` and `' +\n        ctx.store.rootFields.subscription +\n        '` types are special ' +\n        'Operation Root Types and cannot be read back from the cache.',\n      25,\n      store.logger\n    );\n  }\n\n  const typename = !isQuery\n    ? InMemoryData.readRecord(entityKey, '__typename') ||\n      (result && result.__typename)\n    : key;\n\n  if (typeof typename !== 'string') {\n    return;\n  } else if (result && typename !== result.__typename) {\n    warn(\n      'Invalid resolver data: The resolver at `' +\n        entityKey +\n        '` returned an ' +\n        'invalid typename that could not be reconciled with the cache.',\n      8,\n      store.logger\n    );\n\n    return;\n  }\n\n  const iterate = makeSelectionIterator(\n    typename,\n    entityKey,\n    deferRef,\n    select,\n    ctx\n  );\n\n  let hasFields = false;\n  let hasNext = false;\n  let hasChanged = InMemoryData.currentForeignData;\n  let node: FormattedNode<FieldNode> | void;\n  const hasPartials = ctx.partial;\n  const output = InMemoryData.makeData(input);\n  while ((node = iterate()) !== undefined) {\n    // Derive the needed data from our node.\n    const fieldName = getName(node);\n    const fieldArgs = getFieldArguments(node, ctx.variables);\n    const fieldAlias = getFieldAlias(node);\n    const directives = getDirectives(node);\n    const resolver = getFieldResolver(directives, typename, fieldName, ctx);\n    const fieldKey = keyOfField(fieldName, fieldArgs);\n    const key = joinKeys(entityKey, fieldKey);\n    const fieldValue = InMemoryData.readRecord(entityKey, fieldKey);\n    const resultValue = result ? result[fieldName] : undefined;\n\n    if (process.env.NODE_ENV !== 'production' && store.schema && typename) {\n      isFieldAvailableOnType(\n        store.schema,\n        typename,\n        fieldName,\n        ctx.store.logger\n      );\n    }\n\n    // Add the current alias to the walked path before processing the field's value\n    ctx.__internal.path.push(fieldAlias);\n    // We temporarily store the data field in here, but undefined\n    // means that the value is missing from the cache\n    let dataFieldValue: void | DataField = undefined;\n\n    if (fieldName === '__typename') {\n      // We directly assign the typename as it's already available\n      dataFieldValue = typename;\n    } else if (resultValue !== undefined && node.selectionSet === undefined) {\n      // The field is a scalar and can be retrieved directly from the result\n      dataFieldValue = resultValue;\n    } else if (InMemoryData.currentOperation === 'read' && resolver) {\n      // We have a resolver for this field.\n      // Prepare the actual fieldValue, so that the resolver can use it,\n      // as to avoid the user having to do `cache.resolve(parent, info.fieldKey)`\n      // only to get a scalar value.\n      let parent = output;\n      if (node.selectionSet === undefined && fieldValue !== undefined) {\n        parent = {\n          ...output,\n          [fieldAlias]: fieldValue,\n          [fieldName]: fieldValue,\n        };\n      }\n\n      // We have to update the information in context to reflect the info\n      // that the resolver will receive\n      updateContext(ctx, parent, typename, entityKey, fieldKey, fieldName);\n\n      dataFieldValue = resolver(\n        parent,\n        fieldArgs || ({} as Variables),\n        store,\n        ctx\n      );\n\n      if (node.selectionSet) {\n        // When it has a selection set we are resolving an entity with a\n        // subselection. This can either be a list or an object.\n        dataFieldValue = resolveResolverResult(\n          ctx,\n          typename,\n          fieldName,\n          key,\n          getSelectionSet(node),\n          (output[fieldAlias] !== undefined\n            ? output[fieldAlias]\n            : input[fieldAlias]) as Data,\n          dataFieldValue,\n          InMemoryData.ownsData(input)\n        );\n      }\n\n      if (\n        store.schema &&\n        dataFieldValue === null &&\n        !isFieldNullable(store.schema, typename, fieldName, ctx.store.logger)\n      ) {\n        // Special case for when null is not a valid value for the\n        // current field\n        return undefined;\n      }\n    } else if (!node.selectionSet) {\n      // The field is a scalar but isn't on the result, so it's retrieved from the cache\n      dataFieldValue = fieldValue;\n    } else if (resultValue !== undefined) {\n      // We start walking the nested resolver result here\n      dataFieldValue = resolveResolverResult(\n        ctx,\n        typename,\n        fieldName,\n        key,\n        getSelectionSet(node),\n        (output[fieldAlias] !== undefined\n          ? output[fieldAlias]\n          : input[fieldAlias]) as Data,\n        resultValue,\n        InMemoryData.ownsData(input)\n      );\n    } else {\n      // Otherwise we attempt to get the missing field from the cache\n      const link = InMemoryData.readLink(entityKey, fieldKey);\n\n      if (link !== undefined) {\n        dataFieldValue = resolveLink(\n          ctx,\n          link,\n          typename,\n          fieldName,\n          getSelectionSet(node),\n          (output[fieldAlias] !== undefined\n            ? output[fieldAlias]\n            : input[fieldAlias]) as Data,\n          InMemoryData.ownsData(input)\n        );\n      } else if (typeof fieldValue === 'object' && fieldValue !== null) {\n        // The entity on the field was invalid but can still be recovered\n        dataFieldValue = fieldValue;\n      }\n    }\n\n    // Now that dataFieldValue has been retrieved it'll be set on data\n    // If it's uncached (undefined) but nullable we can continue assembling\n    // a partial query result\n    if (\n      !deferRef &&\n      dataFieldValue === undefined &&\n      (directives.optional ||\n        !!getFieldError(ctx) ||\n        (store.schema &&\n          isFieldNullable(store.schema, typename, fieldName, ctx.store.logger)))\n    ) {\n      // The field is uncached or has errored, so it'll be set to null and skipped\n      ctx.partial = true;\n      dataFieldValue = null;\n    } else if (dataFieldValue === null && directives.required) {\n      if (\n        ctx.store.logger &&\n        process.env.NODE_ENV !== 'production' &&\n        InMemoryData.currentOperation === 'read'\n      ) {\n        ctx.store.logger(\n          'debug',\n          `Got value \"null\" for required field \"${fieldName}\"${\n            fieldArgs ? ` with args ${JSON.stringify(fieldArgs)}` : ''\n          } on entity \"${entityKey}\"`\n        );\n      }\n      dataFieldValue = undefined;\n    } else {\n      hasFields = hasFields || fieldName !== '__typename';\n    }\n\n    // After processing the field, remove the current alias from the path again\n    ctx.__internal.path.pop();\n    // Check for any referential changes in the field's value\n    hasChanged = hasChanged || dataFieldValue !== input[fieldAlias];\n    if (dataFieldValue !== undefined) {\n      output[fieldAlias] = dataFieldValue;\n    } else if (deferRef) {\n      hasNext = true;\n    } else {\n      if (\n        ctx.store.logger &&\n        process.env.NODE_ENV !== 'production' &&\n        InMemoryData.currentOperation === 'read'\n      ) {\n        ctx.store.logger(\n          'debug',\n          `No value for field \"${fieldName}\"${\n            fieldArgs ? ` with args ${JSON.stringify(fieldArgs)}` : ''\n          } on entity \"${entityKey}\"`\n        );\n      }\n      // If the field isn't deferred or partial then we have to abort and also reset\n      // the partial field\n      ctx.partial = hasPartials;\n      return undefined;\n    }\n  }\n\n  ctx.partial = ctx.partial || hasPartials;\n  ctx.hasNext = ctx.hasNext || hasNext;\n  return isQuery && ctx.partial && !hasFields\n    ? undefined\n    : hasChanged\n    ? output\n    : input;\n};\n\nconst resolveResolverResult = (\n  ctx: Context,\n  typename: string,\n  fieldName: string,\n  key: string,\n  select: FormattedNode<SelectionSet>,\n  prevData: void | null | Data | Data[],\n  result: void | DataField,\n  isOwnedData: boolean\n): DataField | void => {\n  if (Array.isArray(result)) {\n    const { store } = ctx;\n    // Check whether values of the list may be null; for resolvers we assume\n    // that they can be, since it's user-provided data\n    const _isListNullable = store.schema\n      ? isListNullable(store.schema, typename, fieldName, ctx.store.logger)\n      : false;\n    const hasPartials = ctx.partial;\n    const data = InMemoryData.makeData(prevData, true);\n    let hasChanged =\n      InMemoryData.currentForeignData ||\n      !Array.isArray(prevData) ||\n      result.length !== prevData.length;\n    for (let i = 0, l = result.length; i < l; i++) {\n      // Add the current index to the walked path before reading the field's value\n      ctx.__internal.path.push(i);\n      // Recursively read resolver result\n      const childResult = resolveResolverResult(\n        ctx,\n        typename,\n        fieldName,\n        joinKeys(key, `${i}`),\n        select,\n        prevData != null ? prevData[i] : undefined,\n        result[i],\n        isOwnedData\n      );\n      // After processing the field, remove the current index from the path\n      ctx.__internal.path.pop();\n      // Check the result for cache-missed values\n      if (childResult === undefined && !_isListNullable) {\n        ctx.partial = hasPartials;\n        return undefined;\n      } else {\n        ctx.partial =\n          ctx.partial || (childResult === undefined && _isListNullable);\n        data[i] = childResult != null ? childResult : null;\n        hasChanged = hasChanged || data[i] !== prevData![i];\n      }\n    }\n\n    return hasChanged ? data : prevData;\n  } else if (result === null || result === undefined) {\n    return result;\n  } else if (isOwnedData && prevData === null) {\n    return null;\n  } else if (isDataOrKey(result)) {\n    const data = (prevData || InMemoryData.makeData(prevData)) as Data;\n    return typeof result === 'string'\n      ? readSelection(ctx, result, select, data)\n      : readSelection(ctx, key, select, data, result);\n  } else {\n    warn(\n      'Invalid resolver value: The field at `' +\n        key +\n        '` is a scalar (number, boolean, etc)' +\n        ', but the GraphQL query expects a selection set for this field.',\n      9,\n      ctx.store.logger\n    );\n\n    return undefined;\n  }\n};\n\nconst resolveLink = (\n  ctx: Context,\n  link: Link | Link[],\n  typename: string,\n  fieldName: string,\n  select: FormattedNode<SelectionSet>,\n  prevData: void | null | Data | Data[],\n  isOwnedData: boolean\n): DataField | undefined => {\n  if (Array.isArray(link)) {\n    const { store } = ctx;\n    const _isListNullable = store.schema\n      ? isListNullable(store.schema, typename, fieldName, ctx.store.logger)\n      : false;\n    const newLink = InMemoryData.makeData(prevData, true);\n    const hasPartials = ctx.partial;\n    let hasChanged =\n      InMemoryData.currentForeignData ||\n      !Array.isArray(prevData) ||\n      link.length !== prevData.length;\n    for (let i = 0, l = link.length; i < l; i++) {\n      // Add the current index to the walked path before reading the field's value\n      ctx.__internal.path.push(i);\n      // Recursively read the link\n      const childLink = resolveLink(\n        ctx,\n        link[i],\n        typename,\n        fieldName,\n        select,\n        prevData != null ? prevData[i] : undefined,\n        isOwnedData\n      );\n      // After processing the field, remove the current index from the path\n      ctx.__internal.path.pop();\n      // Check the result for cache-missed values\n      if (childLink === undefined && !_isListNullable) {\n        ctx.partial = hasPartials;\n        return undefined;\n      } else {\n        ctx.partial =\n          ctx.partial || (childLink === undefined && _isListNullable);\n        newLink[i] = childLink || null;\n        hasChanged = hasChanged || newLink[i] !== prevData![i];\n      }\n    }\n\n    return hasChanged ? newLink : (prevData as Data[]);\n  } else if (link === null || (prevData === null && isOwnedData)) {\n    return null;\n  }\n\n  return readSelection(\n    ctx,\n    link,\n    select,\n    (prevData || InMemoryData.makeData(prevData)) as Data\n  );\n};\n\nconst isDataOrKey = (x: any): x is string | Data =>\n  typeof x === 'string' ||\n  (typeof x === 'object' && typeof (x as any).__typename === 'string');\n", "import type { FormattedNode, CombinedError } from '@urql/core';\nimport { formatDocument } from '@urql/core';\n\nimport type {\n  FieldNode,\n  DocumentNode,\n  FragmentDefinitionNode,\n} from '@0no-co/graphql.web';\n\nimport type { SelectionSet } from '../ast';\nimport {\n  getFragments,\n  getMainOperation,\n  normalizeVariables,\n  getFieldArguments,\n  isFieldAvailableOnType,\n  getSelectionSet,\n  getName,\n  getFragmentTypeName,\n  getFieldAlias,\n} from '../ast';\n\nimport { invariant, warn, pushDebugNode, popDebugNode } from '../helpers/help';\n\nimport type {\n  NullArray,\n  Variables,\n  Data,\n  Link,\n  OperationRequest,\n  Dependencies,\n  EntityField,\n  OptimisticMutationResolver,\n} from '../types';\n\nimport { joinKeys, keyOfField } from '../store/keys';\nimport type { Store } from '../store/store';\nimport * as InMemoryData from '../store/data';\n\nimport type { Context } from './shared';\nimport {\n  makeSelectionIterator,\n  ensureData,\n  makeContext,\n  updateContext,\n  getFieldError,\n  deferRef,\n} from './shared';\n\nexport interface WriteResult {\n  data: null | Data;\n  dependencies: Dependencies;\n}\n\n/** Writes a GraphQL response to the cache.\n * @internal\n */\nexport const __initAnd_write = (\n  store: Store,\n  request: OperationRequest,\n  data: Data,\n  error?: CombinedError | undefined,\n  key?: number\n): WriteResult => {\n  InMemoryData.initDataState('write', store.data, key || null);\n  const result = _write(store, request, data, error);\n  InMemoryData.clearDataState();\n  return result;\n};\n\nexport const __initAnd_writeOptimistic = (\n  store: Store,\n  request: OperationRequest,\n  key: number\n): WriteResult => {\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      getMainOperation(request.query).operation === 'mutation',\n      'writeOptimistic(...) was called with an operation that is not a mutation.\\n' +\n        'This case is unsupported and should never occur.',\n      10\n    );\n  }\n\n  InMemoryData.initDataState('write', store.data, key, true);\n  const result = _write(store, request, {} as Data, undefined);\n  InMemoryData.clearDataState();\n  return result;\n};\n\nexport const _write = (\n  store: Store,\n  request: OperationRequest,\n  data?: Data,\n  error?: CombinedError | undefined\n) => {\n  if (process.env.NODE_ENV !== 'production') {\n    InMemoryData.getCurrentDependencies();\n  }\n\n  const query = formatDocument(request.query);\n  const operation = getMainOperation(query);\n  const result: WriteResult = {\n    data: data || InMemoryData.makeData(),\n    dependencies: InMemoryData.currentDependencies!,\n  };\n  const kind = store.rootFields[operation.operation];\n\n  const ctx = makeContext(\n    store,\n    normalizeVariables(operation, request.variables),\n    getFragments(query),\n    kind,\n    kind,\n    error\n  );\n\n  if (process.env.NODE_ENV !== 'production') {\n    pushDebugNode(kind, operation);\n  }\n\n  writeSelection(ctx, kind, getSelectionSet(operation), result.data!);\n\n  if (process.env.NODE_ENV !== 'production') {\n    popDebugNode();\n  }\n\n  return result;\n};\n\nexport const _writeFragment = (\n  store: Store,\n  query: FormattedNode<DocumentNode>,\n  data: Partial<Data>,\n  variables?: Variables,\n  fragmentName?: string\n) => {\n  const fragments = getFragments(query);\n  let fragment: FormattedNode<FragmentDefinitionNode>;\n  if (fragmentName) {\n    fragment = fragments[fragmentName]!;\n    if (!fragment) {\n      warn(\n        'writeFragment(...) was called with a fragment name that does not exist.\\n' +\n          'You provided ' +\n          fragmentName +\n          ' but could only find ' +\n          Object.keys(fragments).join(', ') +\n          '.',\n        11,\n        store.logger\n      );\n\n      return null;\n    }\n  } else {\n    const names = Object.keys(fragments);\n    fragment = fragments[names[0]]!;\n    if (!fragment) {\n      warn(\n        'writeFragment(...) was called with an empty fragment.\\n' +\n          'You have to call it with at least one fragment in your GraphQL document.',\n        11,\n        store.logger\n      );\n\n      return null;\n    }\n  }\n\n  const typename = getFragmentTypeName(fragment);\n  const dataToWrite = { __typename: typename, ...data } as Data;\n  const entityKey = store.keyOfEntity(dataToWrite);\n  if (!entityKey) {\n    return warn(\n      \"Can't generate a key for writeFragment(...) data.\\n\" +\n        'You have to pass an `id` or `_id` field or create a custom `keys` config for `' +\n        typename +\n        '`.',\n      12,\n      store.logger\n    );\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    pushDebugNode(typename, fragment);\n  }\n\n  const ctx = makeContext(\n    store,\n    variables || {},\n    fragments,\n    typename,\n    entityKey,\n    undefined\n  );\n\n  writeSelection(ctx, entityKey, getSelectionSet(fragment), dataToWrite);\n\n  if (process.env.NODE_ENV !== 'production') {\n    popDebugNode();\n  }\n};\n\nconst writeSelection = (\n  ctx: Context,\n  entityKey: undefined | string,\n  select: FormattedNode<SelectionSet>,\n  data: Data\n) => {\n  // These fields determine how we write. The `Query` root type is written\n  // like a normal entity, hence, we use `rootField` with a default to determine\n  // this. All other root names (Subscription & Mutation) are in a different\n  // write mode\n  const rootField = ctx.store.rootNames[entityKey!] || 'query';\n  const isRoot = !!ctx.store.rootNames[entityKey!];\n\n  let typename = isRoot ? entityKey : data.__typename;\n  if (!typename && entityKey && ctx.optimistic) {\n    typename = InMemoryData.readRecord(entityKey, '__typename') as\n      | string\n      | undefined;\n  }\n\n  if (!typename) {\n    warn(\n      \"Couldn't find __typename when writing.\\n\" +\n        \"If you're writing to the cache manually have to pass a `__typename` property on each entity in your data.\",\n      14,\n      ctx.store.logger\n    );\n    return;\n  } else if (!isRoot && entityKey) {\n    InMemoryData.writeRecord(entityKey, '__typename', typename);\n  }\n\n  const updates = ctx.store.updates[typename];\n  const iterate = makeSelectionIterator(\n    typename,\n    entityKey || typename,\n    deferRef,\n    select,\n    ctx\n  );\n\n  let node: FormattedNode<FieldNode> | void;\n  while ((node = iterate())) {\n    const fieldName = getName(node);\n    const fieldArgs = getFieldArguments(node, ctx.variables);\n    const fieldKey = keyOfField(fieldName, fieldArgs);\n    const fieldAlias = getFieldAlias(node);\n    let fieldValue = data[ctx.optimistic ? fieldName : fieldAlias];\n\n    if (\n      // Skip typename fields and assume they've already been written above\n      fieldName === '__typename' ||\n      // Fields marked as deferred that aren't defined must be skipped\n      // Otherwise, we also ignore undefined values in optimistic updaters\n      (fieldValue === undefined &&\n        (deferRef || (ctx.optimistic && rootField === 'query')))\n    ) {\n      continue;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (ctx.store.schema && typename && fieldName !== '__typename') {\n        isFieldAvailableOnType(\n          ctx.store.schema,\n          typename,\n          fieldName,\n          ctx.store.logger\n        );\n      }\n    }\n\n    // Add the current alias to the walked path before processing the field's value\n    ctx.__internal.path.push(fieldAlias);\n\n    // Execute optimistic mutation functions on root fields, or execute recursive functions\n    // that have been returned on optimistic objects\n    let resolver: OptimisticMutationResolver | undefined;\n    if (ctx.optimistic && rootField === 'mutation') {\n      resolver = ctx.store.optimisticMutations[fieldName];\n      if (!resolver) continue;\n    } else if (ctx.optimistic && typeof fieldValue === 'function') {\n      resolver = fieldValue as any;\n    }\n\n    // Execute the field-level resolver to retrieve its data\n    if (resolver) {\n      // We have to update the context to reflect up-to-date ResolveInfo\n      updateContext(\n        ctx,\n        data,\n        typename,\n        entityKey || typename,\n        fieldKey,\n        fieldName\n      );\n      fieldValue = ensureData(resolver(fieldArgs || {}, ctx.store, ctx));\n    }\n\n    if (fieldValue === undefined) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (\n          !entityKey ||\n          !InMemoryData.hasField(entityKey, fieldKey) ||\n          (ctx.optimistic && !InMemoryData.readRecord(entityKey, '__typename'))\n        ) {\n          const expected =\n            node.selectionSet === undefined\n              ? 'scalar (number, boolean, etc)'\n              : 'selection set';\n\n          warn(\n            'Invalid undefined: The field at `' +\n              fieldKey +\n              '` is `undefined`, but the GraphQL query expects a ' +\n              expected +\n              ' for this field.',\n            13,\n            ctx.store.logger\n          );\n        }\n      }\n\n      continue; // Skip this field\n    }\n\n    if (node.selectionSet) {\n      // Process the field and write links for the child entities that have been written\n      if (entityKey && rootField === 'query') {\n        const key = joinKeys(entityKey, fieldKey);\n        const link = writeField(\n          ctx,\n          getSelectionSet(node),\n          ensureData(fieldValue),\n          key,\n          ctx.optimistic\n            ? InMemoryData.readLink(entityKey || typename, fieldKey)\n            : undefined\n        );\n        InMemoryData.writeLink(entityKey || typename, fieldKey, link);\n      } else {\n        writeField(ctx, getSelectionSet(node), ensureData(fieldValue));\n      }\n    } else if (entityKey && rootField === 'query') {\n      // This is a leaf node, so we're setting the field's value directly\n      InMemoryData.writeRecord(\n        entityKey || typename,\n        fieldKey,\n        (fieldValue !== null || !getFieldError(ctx)\n          ? fieldValue\n          : undefined) as EntityField\n      );\n    }\n\n    // We run side-effect updates after the default, normalized updates\n    // so that the data is already available in-store if necessary\n    const updater = updates && updates[fieldName];\n    if (updater) {\n      // We have to update the context to reflect up-to-date ResolveInfo\n      updateContext(\n        ctx,\n        data,\n        typename,\n        entityKey || typename,\n        fieldKey,\n        fieldName\n      );\n\n      data[fieldName] = fieldValue;\n      updater(data, fieldArgs || {}, ctx.store, ctx);\n    }\n\n    // After processing the field, remove the current alias from the path again\n    ctx.__internal.path.pop();\n  }\n};\n\n// A pattern to match typenames of types that are likely never keyable\nconst KEYLESS_TYPE_RE = /^__|PageInfo|(Connection|Edge)$/;\n\nconst writeField = (\n  ctx: Context,\n  select: FormattedNode<SelectionSet>,\n  data: null | Data | NullArray<Data>,\n  parentFieldKey?: string,\n  prevLink?: Link\n): Link | undefined => {\n  if (Array.isArray(data)) {\n    const newData = new Array(data.length);\n    for (let i = 0, l = data.length; i < l; i++) {\n      // Add the current index to the walked path before processing the link\n      ctx.__internal.path.push(i);\n      // Append the current index to the parentFieldKey fallback\n      const indexKey = parentFieldKey\n        ? joinKeys(parentFieldKey, `${i}`)\n        : undefined;\n      // Recursively write array data\n      const prevIndex = prevLink != null ? prevLink[i] : undefined;\n      const links = writeField(ctx, select, data[i], indexKey, prevIndex);\n      // Link cannot be expressed as a recursive type\n      newData[i] = links as string | null;\n      // After processing the field, remove the current index from the path\n      ctx.__internal.path.pop();\n    }\n\n    return newData;\n  } else if (data === null) {\n    return getFieldError(ctx) ? undefined : null;\n  }\n\n  const entityKey =\n    ctx.store.keyOfEntity(data) ||\n    (typeof prevLink === 'string' ? prevLink : null);\n  const typename = data.__typename;\n\n  if (\n    parentFieldKey &&\n    !ctx.store.keys[data.__typename] &&\n    entityKey === null &&\n    typeof typename === 'string' &&\n    !KEYLESS_TYPE_RE.test(typename)\n  ) {\n    warn(\n      'Invalid key: The GraphQL query at the field at `' +\n        parentFieldKey +\n        '` has a selection set, ' +\n        'but no key could be generated for the data at this field.\\n' +\n        'You have to request `id` or `_id` fields for all selection sets or create ' +\n        'a custom `keys` config for `' +\n        typename +\n        '`.\\n' +\n        'Entities without keys will be embedded directly on the parent entity. ' +\n        'If this is intentional, create a `keys` config for `' +\n        typename +\n        '` that always returns null.',\n      15,\n      ctx.store.logger\n    );\n  }\n\n  const childKey = entityKey || parentFieldKey;\n  writeSelection(ctx, childKey, select, data);\n  return childKey || null;\n};\n", "import type { TypedDocumentNode } from '@urql/core';\nimport { formatDocument, createRequest } from '@urql/core';\n\nimport type {\n  Cache,\n  FieldInfo,\n  ResolverConfig,\n  DataField,\n  Variables,\n  FieldArgs,\n  Link,\n  Data,\n  QueryInput,\n  UpdatesConfig,\n  OptimisticMutationConfig,\n  KeyingConfig,\n  Entity,\n  CacheExchangeOpts,\n  DirectivesConfig,\n  Logger,\n} from '../types';\n\nimport { invariant } from '../helpers/help';\nimport { contextRef, ensureLink } from '../operations/shared';\nimport { _query, _queryFragment } from '../operations/query';\nimport { _write, _writeFragment } from '../operations/write';\nimport { invalidateEntity } from '../operations/invalidate';\nimport { keyOfField } from './keys';\nimport * as InMemoryData from './data';\n\nimport type { SchemaIntrospector } from '../ast';\nimport {\n  buildClientSchema,\n  expectValidKeyingConfig,\n  expectValidUpdatesConfig,\n  expectValidResolversConfig,\n  expectValidOptimisticMutationsConfig,\n} from '../ast';\n\ntype DocumentNode = TypedDocumentNode<any, any>;\ntype RootField = 'query' | 'mutation' | 'subscription';\n\n/** Implementation of the {@link Cache} interface as created internally by the {@link cacheExchange}.\n * @internal\n */\nexport class Store<\n  C extends Partial<CacheExchangeOpts> = Partial<CacheExchangeOpts>,\n> implements Cache\n{\n  data: InMemoryData.InMemoryData;\n\n  logger?: Logger;\n  directives: DirectivesConfig;\n  resolvers: ResolverConfig;\n  updates: UpdatesConfig;\n  optimisticMutations: OptimisticMutationConfig;\n  keys: KeyingConfig;\n  globalIDs: Set<string> | boolean;\n  schema?: SchemaIntrospector;\n\n  rootFields: { query: string; mutation: string; subscription: string };\n  rootNames: { [name: string]: RootField | void };\n\n  constructor(opts?: C) {\n    if (!opts) opts = {} as C;\n\n    this.logger = opts.logger;\n    this.resolvers = opts.resolvers || {};\n    this.directives = opts.directives || {};\n    this.optimisticMutations = opts.optimistic || {};\n    this.keys = opts.keys || {};\n\n    this.globalIDs = Array.isArray(opts.globalIDs)\n      ? new Set(opts.globalIDs)\n      : !!opts.globalIDs;\n\n    let queryName = 'Query';\n    let mutationName = 'Mutation';\n    let subscriptionName = 'Subscription';\n    if (opts.schema) {\n      const schema = buildClientSchema(opts.schema);\n      queryName = schema.query || queryName;\n      mutationName = schema.mutation || mutationName;\n      subscriptionName = schema.subscription || subscriptionName;\n      // Only add schema introspector if it has types info\n      if (schema.types) this.schema = schema;\n    }\n\n    this.updates = opts.updates || {};\n\n    this.rootFields = {\n      query: queryName,\n      mutation: mutationName,\n      subscription: subscriptionName,\n    };\n\n    this.rootNames = {\n      [queryName]: 'query',\n      [mutationName]: 'mutation',\n      [subscriptionName]: 'subscription',\n    };\n\n    this.data = InMemoryData.make(queryName);\n\n    if (this.schema && process.env.NODE_ENV !== 'production') {\n      expectValidKeyingConfig(this.schema, this.keys, this.logger);\n      expectValidUpdatesConfig(this.schema, this.updates, this.logger);\n      expectValidResolversConfig(this.schema, this.resolvers, this.logger);\n      expectValidOptimisticMutationsConfig(\n        this.schema,\n        this.optimisticMutations,\n        this.logger\n      );\n    }\n  }\n\n  keyOfField(fieldName: string, fieldArgs?: FieldArgs) {\n    return keyOfField(fieldName, fieldArgs);\n  }\n\n  keyOfEntity(data: Entity) {\n    // In resolvers and updaters we may have a specific parent\n    // object available that can be used to skip to a specific parent\n    // key directly without looking at its incomplete properties\n    if (contextRef && data === contextRef.parent) {\n      return contextRef.parentKey;\n    } else if (data == null || typeof data === 'string') {\n      return data || null;\n    } else if (!data.__typename) {\n      return null;\n    } else if (this.rootNames[data.__typename]) {\n      return data.__typename;\n    }\n\n    let key: string | null = null;\n    if (this.keys[data.__typename]) {\n      key = this.keys[data.__typename](data) || null;\n    } else if (data.id != null) {\n      key = `${data.id}`;\n    } else if (data._id != null) {\n      key = `${data._id}`;\n    }\n\n    const typename = data.__typename;\n    const globalID =\n      this.globalIDs === true ||\n      (this.globalIDs && this.globalIDs.has(typename));\n    return globalID || !key ? key : `${typename}:${key}`;\n  }\n\n  resolve(\n    entity: Entity,\n    field: string,\n    args?: FieldArgs\n  ): DataField | undefined {\n    let fieldValue: DataField | undefined = null;\n    const entityKey = this.keyOfEntity(entity);\n    if (entityKey) {\n      const fieldKey = keyOfField(field, args);\n      fieldValue = InMemoryData.readRecord(entityKey, fieldKey);\n      if (fieldValue === undefined)\n        fieldValue = InMemoryData.readLink(entityKey, fieldKey);\n    }\n    return fieldValue;\n  }\n\n  resolveFieldByKey(entity: Entity, field: string, args?: FieldArgs) {\n    return this.resolve(entity, field, args);\n  }\n\n  invalidate(entity: Entity, field?: string, args?: FieldArgs) {\n    const entityKey = this.keyOfEntity(entity);\n\n    invariant(\n      entityKey,\n      \"Can't generate a key for invalidate(...).\\n\" +\n        'You have to pass an id or _id field or create a custom `keys` field for `' +\n        (typeof entity === 'object'\n          ? (entity as Data).__typename\n          : entity + '`.'),\n      19\n    );\n\n    invalidateEntity(entityKey, field, args);\n  }\n\n  inspectFields(entity: Entity): FieldInfo[] {\n    const entityKey = this.keyOfEntity(entity);\n    return entityKey ? InMemoryData.inspectFields(entityKey) : [];\n  }\n\n  updateQuery<T = Data, V = Variables>(\n    input: QueryInput<T, V>,\n    updater: (data: T | null) => T | null\n  ): void {\n    const request = createRequest(input.query, input.variables!);\n    const output = updater(this.readQuery(request));\n    if (output !== null) {\n      _write(this, request, output as any, undefined);\n    }\n  }\n\n  readQuery<T = Data, V = Variables>(input: QueryInput<T, V>): T | null {\n    const request = createRequest(input.query, input.variables!);\n    return _query(this, request, undefined, undefined).data as T | null;\n  }\n\n  readFragment<T = Data, V = Variables>(\n    fragment: DocumentNode | TypedDocumentNode<T, V>,\n    entity: string | Data | T,\n    variables?: V,\n    fragmentName?: string\n  ): T | null {\n    return _queryFragment(\n      this,\n      formatDocument(fragment),\n      entity as Data,\n      variables as any,\n      fragmentName\n    ) as T | null;\n  }\n\n  writeFragment<T = Data, V = Variables>(\n    fragment: DocumentNode | TypedDocumentNode<T, V>,\n    data: T,\n    variables?: V,\n    fragmentName?: string\n  ): void {\n    _writeFragment(\n      this,\n      formatDocument(fragment),\n      data as Data,\n      variables as any,\n      fragmentName\n    );\n  }\n\n  link(\n    entity: Entity,\n    field: string,\n    args: FieldArgs,\n    link: Link<Entity>\n  ): void;\n\n  link(entity: Entity, field: string, link: Link<Entity>): void;\n\n  link(\n    entity: Entity,\n    field: string,\n    ...rest: [FieldArgs, Link<Entity>] | [Link<Entity>]\n  ): void {\n    const args = rest.length === 2 ? rest[0] : null;\n    const link = rest.length === 2 ? rest[1] : rest[0];\n    const entityKey = this.keyOfEntity(entity);\n    if (entityKey) {\n      InMemoryData.writeLink(\n        entityKey,\n        keyOfField(field, args),\n        ensureLink(this, link)\n      );\n    }\n  }\n}\n", "import type {\n  IntrospectionQuery,\n  IntrospectionTypeRef,\n  IntrospectionInputValue,\n  IntrospectionType,\n} from './graphql';\n\nexport interface SchemaField {\n  name: string;\n  type: IntrospectionTypeRef;\n  args(): Record<string, IntrospectionInputValue | void>;\n}\n\nexport interface SchemaObject {\n  name: string;\n  kind: 'INTERFACE' | 'OBJECT';\n  interfaces(): Record<string, unknown>;\n  fields(): Record<string, SchemaField | void>;\n}\n\nexport interface SchemaUnion {\n  name: string;\n  kind: 'UNION';\n  types(): Record<string, unknown>;\n}\n\nexport interface SchemaIntrospector {\n  query: string | null;\n  mutation: string | null;\n  subscription: string | null;\n  types?: Map<string, SchemaObject | SchemaUnion>;\n  isSubType(abstract: string, possible: string): boolean;\n}\n\nexport interface PartialIntrospectionSchema {\n  queryType: { name: string; kind?: any };\n  mutationType?: { name: string; kind?: any } | null;\n  subscriptionType?: { name: string; kind?: any } | null;\n  types?: readonly any[];\n}\n\nexport type IntrospectionData =\n  | IntrospectionQuery\n  | { __schema: PartialIntrospectionSchema };\n\nexport const buildClientSchema = ({\n  __schema,\n}: IntrospectionData): SchemaIntrospector => {\n  const typemap: Map<string, SchemaObject | SchemaUnion> = new Map();\n\n  const buildNameMap = <T extends { name: string }>(\n    arr: ReadonlyArray<T>\n  ): (() => { [name: string]: T }) => {\n    let map: Record<string, T> | void;\n    return () => {\n      if (!map) {\n        map = {};\n        for (let i = 0; i < arr.length; i++) map[arr[i].name] = arr[i];\n      }\n      return map;\n    };\n  };\n\n  const buildType = (\n    type: IntrospectionType\n  ): SchemaObject | SchemaUnion | void => {\n    switch (type.kind) {\n      case 'OBJECT':\n      case 'INTERFACE':\n        return {\n          name: type.name,\n          kind: type.kind as 'OBJECT' | 'INTERFACE',\n          interfaces: buildNameMap(type.interfaces || []),\n          fields: buildNameMap(\n            type.fields!.map((field: any) => ({\n              name: field.name,\n              type: field.type,\n              args: buildNameMap(field.args),\n            }))\n          ),\n        } as SchemaObject;\n      case 'UNION':\n        return {\n          name: type.name,\n          kind: type.kind as 'UNION',\n          types: buildNameMap(type.possibleTypes || []),\n        } as SchemaUnion;\n    }\n  };\n\n  const schema: SchemaIntrospector = {\n    query: __schema.queryType ? __schema.queryType.name : null,\n    mutation: __schema.mutationType ? __schema.mutationType.name : null,\n    subscription: __schema.subscriptionType\n      ? __schema.subscriptionType.name\n      : null,\n    types: undefined,\n    isSubType(abstract: string, possible: string) {\n      const abstractType = typemap.get(abstract);\n      const possibleType = typemap.get(possible);\n      if (!abstractType || !possibleType) {\n        return false;\n      } else if (abstractType.kind === 'UNION') {\n        return !!abstractType.types()[possible];\n      } else if (\n        abstractType.kind !== 'OBJECT' &&\n        possibleType.kind === 'OBJECT'\n      ) {\n        return !!possibleType.interfaces()[abstract];\n      } else {\n        return abstract === possible;\n      }\n    },\n  };\n\n  if (__schema.types) {\n    schema.types = typemap;\n    for (let i = 0; i < __schema.types.length; i++) {\n      const type = __schema.types[i];\n      if (type && type.name) {\n        const out = buildType(type);\n        if (out) typemap.set(type.name, out);\n      }\n    }\n  }\n\n  return schema;\n};\n", "import * as InMemoryData from '../store/data';\nimport { keyOfField } from '../store/keys';\nimport type { FieldArgs } from '../types';\n\ninterface PartialFieldInfo {\n  fieldKey: string;\n}\n\nexport const invalidateEntity = (\n  entityKey: string,\n  field?: string,\n  args?: FieldArgs\n) => {\n  const fields: PartialFieldInfo[] = field\n    ? [{ fieldKey: keyOfField(field, args) }]\n    : InMemoryData.inspectFields(entityKey);\n\n  for (let i = 0, l = fields.length; i < l; i++) {\n    const { fieldKey } = fields[i];\n    if (InMemoryData.readLink(entityKey, fieldKey) !== undefined) {\n      InMemoryData.writeLink(entityKey, fieldKey, undefined);\n    } else {\n      InMemoryData.writeRecord(entityKey, fieldKey, undefined);\n    }\n  }\n};\n", "import type { Operation, RequestPolicy, OperationDebugMeta } from '@urql/core';\nimport { makeOperation } from '@urql/core';\n\n// Returns the given operation result with added cacheOutcome meta field\nexport const addMetadata = (\n  operation: Operation,\n  meta: OperationDebugMeta\n): Operation =>\n  makeOperation(operation.kind, operation, {\n    ...operation.context,\n    meta: {\n      ...operation.context.meta,\n      ...meta,\n    },\n  });\n\n// Copy an operation and change the requestPolicy to skip the cache\nexport const toRequestPolicy = (\n  operation: Operation,\n  requestPolicy: RequestPolicy\n): Operation => {\n  return makeOperation(operation.kind, operation, {\n    ...operation.context,\n    requestPolicy,\n  });\n};\n", "import type {\n  Exchange,\n  Operation,\n  OperationResult,\n  RequestPolicy,\n  CacheOutcome,\n} from '@urql/core';\nimport { formatDocument, makeOperation } from '@urql/core';\n\nimport type { Source } from 'wonka';\nimport {\n  filter,\n  map,\n  merge,\n  pipe,\n  share,\n  fromArray,\n  mergeMap,\n  empty,\n} from 'wonka';\n\nimport { _query } from './operations/query';\nimport { _write } from './operations/write';\nimport { addMetadata, toRequestPolicy } from './helpers/operation';\nimport { filterVariables, getMainOperation } from './ast';\nimport { Store } from './store/store';\nimport type { Data, Dependencies, CacheExchangeOpts } from './types';\n\nimport {\n  initDataState,\n  clearDataState,\n  noopDataState,\n  hydrateData,\n  reserveLayer,\n  hasLayer,\n} from './store/data';\n\ninterface OperationResultWithMeta extends Partial<OperationResult> {\n  operation: Operation;\n  outcome: CacheOutcome;\n  dependencies: Dependencies;\n  hasNext: boolean;\n}\n\ntype Operations = Set<number>;\ntype OperationMap = Map<number, Operation>;\ntype ResultMap = Map<number, Data | null>;\ntype OptimisticDependencies = Map<number, Dependencies>;\ntype DependentOperations = Map<string, Operations>;\n\n/** Exchange factory that creates a normalized cache exchange.\n *\n * @param opts - A {@link CacheExchangeOpts} configuration object.\n * @returns the created normalized cache {@link Exchange}.\n *\n * @remarks\n * Graphcache is a normalized cache, enabled by using the `cacheExchange`\n * in place of `@urql/core`’s. A normalized GraphQL cache uses typenames\n * and key fields in the result to share a single copy for each unique\n * entity across all queries.\n *\n * The `cacheExchange` may be passed a {@link CacheExchangeOpts} object\n * to define custom resolvers, custom updates for mutations,\n * optimistic updates, or to add custom key fields per type.\n *\n * @see {@link https://urql.dev/goto/docs/graphcache} for the full Graphcache docs.\n */\nexport const cacheExchange =\n  <C extends Partial<CacheExchangeOpts>>(opts?: C): Exchange =>\n  ({ forward, client, dispatchDebug }) => {\n    const store = new Store<C>(opts);\n\n    if (opts && opts.storage) {\n      store.data.hydrating = true;\n      opts.storage.readData().then(entries => {\n        hydrateData(store.data, opts!.storage!, entries);\n        if (opts.storage!.onCacheHydrated) opts.storage!.onCacheHydrated();\n      });\n    }\n\n    const optimisticKeysToDependencies: OptimisticDependencies = new Map();\n    const mutationResultBuffer: OperationResult[] = [];\n    const operations: OperationMap = new Map();\n    const results: ResultMap = new Map();\n    const blockedDependencies: Dependencies = new Set();\n    const requestedRefetch: Operations = new Set();\n    const deps: DependentOperations = new Map();\n\n    let reexecutingOperations: Operations = new Set();\n    let dependentOperations: Operations = new Set();\n\n    const isBlockedByOptimisticUpdate = (\n      dependencies: Dependencies\n    ): boolean => {\n      for (const dep of dependencies.values())\n        if (blockedDependencies.has(dep)) return true;\n      return false;\n    };\n\n    const collectPendingOperations = (\n      pendingOperations: Operations,\n      dependencies: undefined | Dependencies\n    ) => {\n      if (dependencies) {\n        // Collect operations that will be updated due to cache changes\n        for (const dep of dependencies.values()) {\n          const keys = deps.get(dep);\n          if (keys) for (const key of keys.values()) pendingOperations.add(key);\n        }\n      }\n    };\n\n    const executePendingOperations = (\n      operation: Operation,\n      pendingOperations: Operations,\n      isOptimistic: boolean\n    ) => {\n      // Reexecute collected operations and delete them from the mapping\n      for (const key of pendingOperations.values()) {\n        if (key !== operation.key) {\n          const op = operations.get(key);\n          if (op) {\n            // Collect all dependent operations if the reexecuting operation is a query\n            if (operation.kind === 'query') dependentOperations.add(key);\n            let policy: RequestPolicy = 'cache-first';\n            if (requestedRefetch.has(key)) {\n              requestedRefetch.delete(key);\n              policy = 'cache-and-network';\n            }\n            client.reexecuteOperation(toRequestPolicy(op, policy));\n          }\n        }\n      }\n\n      if (!isOptimistic) {\n        // Upon completion, all dependent operations become reexecuting operations, preventing\n        // them from reexecuting prior operations again, causing infinite loops\n        const _reexecutingOperations = reexecutingOperations;\n        if (operation.kind === 'query') {\n          (reexecutingOperations = dependentOperations).add(operation.key);\n        }\n        (dependentOperations = _reexecutingOperations).clear();\n      }\n    };\n\n    // This registers queries with the data layer to ensure commutativity\n    const prepareForwardedOperation = (operation: Operation) => {\n      let optimistic = false;\n      if (operation.kind === 'query') {\n        // Pre-reserve the position of the result layer\n        reserveLayer(store.data, operation.key);\n        operations.set(operation.key, operation);\n      } else if (operation.kind === 'teardown') {\n        // Delete reference to operation if any exists to release it\n        operations.delete(operation.key);\n        results.delete(operation.key);\n        reexecutingOperations.delete(operation.key);\n        // Mark operation layer as done\n        noopDataState(store.data, operation.key);\n        return operation;\n      } else if (\n        operation.kind === 'mutation' &&\n        operation.context.requestPolicy !== 'network-only'\n      ) {\n        operations.set(operation.key, operation);\n        // This executes an optimistic update for mutations and registers it if necessary\n        initDataState('write', store.data, operation.key, true, false);\n        const { dependencies } = _write(\n          store,\n          operation as any,\n          undefined,\n          undefined\n        );\n        clearDataState();\n        if (dependencies.size) {\n          // Update blocked optimistic dependencies\n          for (const dep of dependencies.values()) blockedDependencies.add(dep);\n          // Store optimistic dependencies for update\n          optimisticKeysToDependencies.set(operation.key, dependencies);\n          // Update related queries\n          const pendingOperations: Operations = new Set();\n          collectPendingOperations(pendingOperations, dependencies);\n          executePendingOperations(operation, pendingOperations, true);\n          // Mark operation as optimistic\n          optimistic = true;\n        }\n      }\n\n      return makeOperation(\n        operation.kind,\n        {\n          key: operation.key,\n          query: formatDocument(operation.query),\n          variables: operation.variables\n            ? filterVariables(\n                getMainOperation(operation.query),\n                operation.variables\n              )\n            : operation.variables,\n        },\n        { ...operation.context, optimistic }\n      );\n    };\n\n    // This updates the known dependencies for the passed operation\n    const updateDependencies = (op: Operation, dependencies: Dependencies) => {\n      for (const dep of dependencies.values()) {\n        let depOps = deps.get(dep);\n        if (!depOps) deps.set(dep, (depOps = new Set()));\n        depOps.add(op.key);\n      }\n    };\n\n    // Retrieves a query result from cache and adds an `isComplete` hint\n    // This hint indicates whether the result is \"complete\" or not\n    const operationResultFromCache = (\n      operation: Operation\n    ): OperationResultWithMeta => {\n      initDataState('read', store.data, undefined, false, false);\n      const result = _query(\n        store,\n        operation,\n        results.get(operation.key),\n        undefined\n      );\n      clearDataState();\n      const cacheOutcome: CacheOutcome = result.data\n        ? !result.partial && !result.hasNext\n          ? 'hit'\n          : 'partial'\n        : 'miss';\n\n      results.set(operation.key, result.data);\n      operations.set(operation.key, operation);\n      updateDependencies(operation, result.dependencies);\n\n      return {\n        outcome: cacheOutcome,\n        operation,\n        data: result.data,\n        dependencies: result.dependencies,\n        hasNext: result.hasNext,\n      };\n    };\n\n    // Take any OperationResult and update the cache with it\n    const updateCacheWithResult = (\n      result: OperationResult,\n      pendingOperations: Operations\n    ): OperationResult => {\n      // Retrieve the original operation to get unfiltered variables\n      const operation =\n        operations.get(result.operation.key) || result.operation;\n      if (operation.kind === 'mutation') {\n        // Collect previous dependencies that have been written for optimistic updates\n        const dependencies = optimisticKeysToDependencies.get(operation.key);\n        collectPendingOperations(pendingOperations, dependencies);\n        optimisticKeysToDependencies.delete(operation.key);\n      }\n\n      if (operation.kind === 'subscription' || result.hasNext)\n        reserveLayer(store.data, operation.key, true);\n\n      let queryDependencies: undefined | Dependencies;\n      let data: Data | null = result.data;\n      if (data) {\n        // Write the result to cache and collect all dependencies that need to be\n        // updated\n        initDataState('write', store.data, operation.key, false, false);\n        const writeDependencies = _write(\n          store,\n          operation,\n          data,\n          result.error\n        ).dependencies;\n        clearDataState();\n        collectPendingOperations(pendingOperations, writeDependencies);\n        const prevData =\n          operation.kind === 'query' ? results.get(operation.key) : null;\n        initDataState(\n          'read',\n          store.data,\n          operation.key,\n          false,\n          prevData !== data\n        );\n        const queryResult = _query(\n          store,\n          operation,\n          prevData || data,\n          result.error\n        );\n        clearDataState();\n        data = queryResult.data;\n        if (operation.kind === 'query') {\n          // Collect the query's dependencies for future pending operation updates\n          queryDependencies = queryResult.dependencies;\n          collectPendingOperations(pendingOperations, queryDependencies);\n          results.set(operation.key, data);\n        }\n      } else {\n        noopDataState(store.data, operation.key);\n      }\n\n      // Update this operation's dependencies if it's a query\n      if (queryDependencies) {\n        updateDependencies(result.operation, queryDependencies);\n      }\n\n      return {\n        operation,\n        data,\n        error: result.error,\n        extensions: result.extensions,\n        hasNext: result.hasNext,\n        stale: result.stale,\n      };\n    };\n\n    return operations$ => {\n      // Filter by operations that are cacheable and attempt to query them from the cache\n      const cacheOps$ = pipe(\n        operations$,\n        filter(\n          op =>\n            op.kind === 'query' && op.context.requestPolicy !== 'network-only'\n        ),\n        map(operationResultFromCache),\n        share\n      );\n\n      const nonCacheOps$ = pipe(\n        operations$,\n        filter(\n          op =>\n            op.kind !== 'query' || op.context.requestPolicy === 'network-only'\n        )\n      );\n\n      // Rebound operations that are incomplete, i.e. couldn't be queried just from the cache\n      const cacheMissOps$ = pipe(\n        cacheOps$,\n        filter(\n          res =>\n            res.outcome === 'miss' &&\n            res.operation.context.requestPolicy !== 'cache-only' &&\n            !isBlockedByOptimisticUpdate(res.dependencies) &&\n            !reexecutingOperations.has(res.operation.key)\n        ),\n        map(res => {\n          dispatchDebug({\n            type: 'cacheMiss',\n            message: 'The result could not be retrieved from the cache',\n            operation: res.operation,\n          });\n          return addMetadata(res.operation, { cacheOutcome: 'miss' });\n        })\n      );\n\n      // Resolve OperationResults that the cache was able to assemble completely and trigger\n      // a network request if the current operation's policy is cache-and-network\n      const cacheResult$ = pipe(\n        cacheOps$,\n        filter(\n          res =>\n            res.outcome !== 'miss' ||\n            res.operation.context.requestPolicy === 'cache-only'\n        ),\n        map((res: OperationResultWithMeta): OperationResult => {\n          const { requestPolicy } = res.operation.context;\n\n          // We reexecute requests marked as `cache-and-network`, and partial responses,\n          // if we wouldn't cause a request loop\n          const shouldReexecute =\n            requestPolicy !== 'cache-only' &&\n            (res.hasNext ||\n              requestPolicy === 'cache-and-network' ||\n              (requestPolicy === 'cache-first' &&\n                res.outcome === 'partial' &&\n                !reexecutingOperations.has(res.operation.key)));\n          // Set stale to true anyway, even if the reexecute will be blocked, if the operation\n          // is in progress. We can be reasonably sure of that if a layer has been reserved for it.\n          const stale =\n            requestPolicy !== 'cache-only' &&\n            (shouldReexecute ||\n              (res.outcome === 'partial' &&\n                reexecutingOperations.has(res.operation.key) &&\n                hasLayer(store.data, res.operation.key)));\n\n          const result: OperationResult = {\n            operation: addMetadata(res.operation, {\n              cacheOutcome: res.outcome,\n            }),\n            data: res.data,\n            error: res.error,\n            extensions: res.extensions,\n            stale: stale && !res.hasNext,\n            hasNext: shouldReexecute && res.hasNext,\n          };\n\n          if (!shouldReexecute) {\n            /*noop*/\n          } else if (!isBlockedByOptimisticUpdate(res.dependencies)) {\n            client.reexecuteOperation(\n              toRequestPolicy(\n                operations.get(res.operation.key) || res.operation,\n                'network-only'\n              )\n            );\n          } else if (requestPolicy === 'cache-and-network') {\n            requestedRefetch.add(res.operation.key);\n          }\n\n          dispatchDebug({\n            type: 'cacheHit',\n            message: `A requested operation was found and returned from the cache.`,\n            operation: res.operation,\n            data: {\n              value: result,\n            },\n          });\n\n          return result;\n        })\n      );\n\n      // Forward operations that aren't cacheable and rebound operations\n      // Also update the cache with any network results\n      const result$ = pipe(\n        merge([nonCacheOps$, cacheMissOps$]),\n        map(prepareForwardedOperation),\n        forward\n      );\n\n      // Results that can immediately be resolved\n      const nonOptimisticResults$ = pipe(\n        result$,\n        filter(\n          result => !optimisticKeysToDependencies.has(result.operation.key)\n        ),\n        map(result => {\n          const pendingOperations: Operations = new Set();\n          // Update the cache with the incoming API result\n          const cacheResult = updateCacheWithResult(result, pendingOperations);\n          // Execute all dependent queries\n          executePendingOperations(result.operation, pendingOperations, false);\n          return cacheResult;\n        })\n      );\n\n      // Prevent mutations that were previously optimistic from being flushed\n      // immediately and instead clear them out slowly\n      const optimisticMutationCompletion$ = pipe(\n        result$,\n        filter(result =>\n          optimisticKeysToDependencies.has(result.operation.key)\n        ),\n        mergeMap((result: OperationResult): Source<OperationResult> => {\n          const length = mutationResultBuffer.push(result);\n          if (length < optimisticKeysToDependencies.size) {\n            return empty;\n          }\n\n          for (let i = 0; i < mutationResultBuffer.length; i++) {\n            reserveLayer(store.data, mutationResultBuffer[i].operation.key);\n          }\n\n          blockedDependencies.clear();\n\n          const results: OperationResult[] = [];\n          const pendingOperations: Operations = new Set();\n\n          let bufferedResult: OperationResult | void;\n          while ((bufferedResult = mutationResultBuffer.shift()))\n            results.push(\n              updateCacheWithResult(bufferedResult, pendingOperations)\n            );\n\n          // Execute all dependent queries as a single batch\n          executePendingOperations(result.operation, pendingOperations, false);\n\n          return fromArray(results);\n        })\n      );\n\n      return merge([\n        nonOptimisticResults$,\n        optimisticMutationCompletion$,\n        cacheResult$,\n      ]);\n    };\n  };\n", "import { pipe, share, merge, makeSubject, filter, onPush } from 'wonka';\n\nimport type {\n  Operation,\n  OperationResult,\n  Exchange,\n  ExchangeIO,\n  CombinedError,\n  RequestPolicy,\n} from '@urql/core';\nimport { stringifyDocument, createRequest, makeOperation } from '@urql/core';\n\nimport type {\n  SerializedRequest,\n  CacheExchangeOpts,\n  StorageAdapter,\n} from './types';\nimport { cacheExchange } from './cacheExchange';\nimport { toRequestPolicy } from './helpers/operation';\n\nconst policyLevel = {\n  'cache-only': 0,\n  'cache-first': 1,\n  'network-only': 2,\n  'cache-and-network': 3,\n} as const;\n\n/** Input parameters for the {@link offlineExchange}.\n * @remarks\n * This configuration object extends the {@link CacheExchangeOpts}\n * as the `offlineExchange` extends the regular {@link cacheExchange}.\n */\nexport interface OfflineExchangeOpts extends CacheExchangeOpts {\n  /** Configures an offline storage adapter for Graphcache.\n   *\n   * @remarks\n   * A {@link StorageAdapter} allows Graphcache to write data to an external,\n   * asynchronous storage, and hydrate data from it when it first loads.\n   * This allows you to preserve normalized data between restarts/reloads.\n   *\n   * @see {@link https://urql.dev/goto/docs/graphcache/offline} for the full Offline Support docs.\n   */\n  storage: StorageAdapter;\n  /** Predicate function to determine whether a {@link CombinedError} hints at a network error.\n   *\n   * @remarks\n   * Not ever {@link CombinedError} means that the device is offline and by default\n   * the `offlineExchange` will check for common network error messages and check\n   * `navigator.onLine`. However, when `isOfflineError` is passed it can replace\n   * the default offline detection.\n   */\n  isOfflineError?(\n    error: undefined | CombinedError,\n    result: OperationResult\n  ): boolean;\n}\n\n/** Exchange factory that creates a normalized cache exchange in Offline Support mode.\n *\n * @param opts - A {@link OfflineExchangeOpts} configuration object.\n * @returns the created normalized, offline cache {@link Exchange}.\n *\n * @remarks\n * The `offlineExchange` is a wrapper around the regular {@link cacheExchange}\n * which adds logic via the {@link OfflineExchangeOpts.storage} adapter to\n * recognize when it’s offline, when to retry failed mutations, and how\n * to handle longer periods of being offline.\n *\n * @see {@link https://urql.dev/goto/docs/graphcache/offline} for the full Offline Support docs.\n */\nexport const offlineExchange =\n  <C extends OfflineExchangeOpts>(opts: C): Exchange =>\n  input => {\n    const { storage } = opts;\n\n    const isOfflineError =\n      opts.isOfflineError ||\n      ((error: undefined | CombinedError) =>\n        error &&\n        error.networkError &&\n        !error.response &&\n        ((typeof navigator !== 'undefined' && navigator.onLine === false) ||\n          /request failed|failed to fetch|network\\s?error/i.test(\n            error.networkError.message\n          )));\n\n    if (\n      storage &&\n      storage.onOnline &&\n      storage.readMetadata &&\n      storage.writeMetadata\n    ) {\n      const { forward: outerForward, client, dispatchDebug } = input;\n      const { source: reboundOps$, next } = makeSubject<Operation>();\n      const failedQueue: Operation[] = [];\n      let hasRehydrated = false;\n      let isFlushingQueue = false;\n\n      const updateMetadata = () => {\n        if (hasRehydrated) {\n          const requests: SerializedRequest[] = [];\n          for (let i = 0; i < failedQueue.length; i++) {\n            const operation = failedQueue[i];\n            if (operation.kind === 'mutation') {\n              requests.push({\n                query: stringifyDocument(operation.query),\n                variables: operation.variables,\n                extensions: operation.extensions,\n              });\n            }\n          }\n          storage.writeMetadata!(requests);\n        }\n      };\n\n      const filterQueue = (key: number) => {\n        for (let i = failedQueue.length - 1; i >= 0; i--)\n          if (failedQueue[i].key === key) failedQueue.splice(i, 1);\n      };\n\n      const flushQueue = () => {\n        if (!isFlushingQueue) {\n          const sent = new Set<number>();\n          isFlushingQueue = true;\n          for (let i = 0; i < failedQueue.length; i++) {\n            const operation = failedQueue[i];\n            if (operation.kind === 'mutation' || !sent.has(operation.key)) {\n              sent.add(operation.key);\n              if (operation.kind !== 'subscription') {\n                next(makeOperation('teardown', operation));\n                let overridePolicy: RequestPolicy = 'cache-first';\n                for (let i = 0; i < failedQueue.length; i++) {\n                  const { requestPolicy } = failedQueue[i].context;\n                  if (policyLevel[requestPolicy] > policyLevel[overridePolicy])\n                    overridePolicy = requestPolicy;\n                }\n                next(toRequestPolicy(operation, overridePolicy));\n              } else {\n                next(toRequestPolicy(operation, 'cache-first'));\n              }\n            }\n          }\n          isFlushingQueue = false;\n          failedQueue.length = 0;\n          updateMetadata();\n        }\n      };\n\n      const forward: ExchangeIO = ops$ => {\n        return pipe(\n          outerForward(ops$),\n          filter(res => {\n            if (\n              hasRehydrated &&\n              res.operation.kind === 'mutation' &&\n              res.operation.context.optimistic &&\n              isOfflineError(res.error, res)\n            ) {\n              failedQueue.push(res.operation);\n              updateMetadata();\n              return false;\n            }\n\n            return true;\n          }),\n          share\n        );\n      };\n\n      const cacheResults$ = cacheExchange({\n        ...opts,\n        storage: {\n          ...storage,\n          readData() {\n            const hydrate = storage.readData();\n            return {\n              async then(onEntries) {\n                const mutations = await storage.readMetadata!();\n                for (let i = 0; mutations && i < mutations.length; i++) {\n                  failedQueue.push(\n                    client.createRequestOperation(\n                      'mutation',\n                      createRequest(mutations[i].query, mutations[i].variables),\n                      mutations[i].extensions\n                    )\n                  );\n                }\n                onEntries!(await hydrate);\n                storage.onOnline!(flushQueue);\n                hasRehydrated = true;\n                flushQueue();\n              },\n            };\n          },\n        },\n      })({\n        client,\n        dispatchDebug,\n        forward,\n      });\n\n      return operations$ => {\n        const opsAndRebound$ = merge([\n          reboundOps$,\n          pipe(\n            operations$,\n            onPush(operation => {\n              if (operation.kind === 'query' && !hasRehydrated) {\n                failedQueue.push(operation);\n              } else if (operation.kind === 'teardown') {\n                filterQueue(operation.key);\n              }\n            })\n          ),\n        ]);\n\n        return pipe(\n          cacheResults$(opsAndRebound$),\n          filter(res => {\n            if (res.operation.kind === 'query') {\n              if (isOfflineError(res.error, res)) {\n                next(toRequestPolicy(res.operation, 'cache-only'));\n                failedQueue.push(res.operation);\n                return false;\n              } else if (!hasRehydrated) {\n                filterQueue(res.operation.key);\n              }\n            }\n            return true;\n          })\n        );\n      };\n    }\n\n    return cacheExchange(opts)(input);\n  };\n", "import {\n  Source,\n  pipe,\n  map,\n  filter,\n  onStart,\n  take,\n  makeSubject,\n  toPromise,\n  merge,\n} from 'wonka';\n\nimport {\n  createRequest,\n  makeOperation,\n  makeErrorResult,\n  Operation,\n  OperationContext,\n  OperationResult,\n  CombinedError,\n  Exchange,\n  DocumentInput,\n  AnyVariables,\n  OperationInstance,\n} from '@urql/core';\n\n/** Utilities to use while refreshing authentication tokens. */\nexport interface AuthUtilities {\n  /** Sends a mutation to your GraphQL API, bypassing earlier exchanges and authentication.\n   *\n   * @param query - a GraphQL document containing the mutation operation that will be executed.\n   * @param variables - the variables used to execute the operation.\n   * @param context - {@link OperationContext} options that'll be used in future exchanges.\n   * @returns A `Promise` of an {@link OperationResult} for the GraphQL mutation.\n   *\n   * @remarks\n   * The `mutation()` utility method is useful when your authentication requires you to make a GraphQL mutation\n   * request to update your authentication tokens. In these cases, you likely wish to bypass prior exchanges and\n   * the authentication in the `authExchange` itself.\n   *\n   * This method bypasses the usual mutation flow of the `Client` and instead issues the mutation as directly\n   * as possible. This also means that it doesn’t carry your `Client`'s default {@link OperationContext}\n   * options, so you may have to pass them again, if needed.\n   */\n  mutate<Data = any, Variables extends AnyVariables = AnyVariables>(\n    query: DocumentInput<Data, Variables>,\n    variables: Variables,\n    context?: Partial<OperationContext>\n  ): Promise<OperationResult<Data>>;\n\n  /** Adds additional HTTP headers to an `Operation`.\n   *\n   * @param operation - An {@link Operation} to add headers to.\n   * @param headers - The HTTP headers to add to the `Operation`.\n   * @returns The passed {@link Operation} with the headers added to it.\n   *\n   * @remarks\n   * The `appendHeaders()` utility method is useful to add additional HTTP headers\n   * to an {@link Operation}. It’s a simple convenience function that takes\n   * `operation.context.fetchOptions` into account, since adding headers for\n   * authentication is common.\n   */\n  appendHeaders(\n    operation: Operation,\n    headers: Record<string, string>\n  ): Operation;\n}\n\n/** Configuration for the `authExchange` returned by the initializer function you write. */\nexport interface AuthConfig {\n  /** Called for every operation to add authentication data to your operation.\n   *\n   * @param operation - An {@link Operation} that needs authentication tokens added.\n   * @returns a new {@link Operation} with added authentication tokens.\n   *\n   * @remarks\n   * The {@link authExchange} will call this function you provide and expects that you\n   * add your authentication tokens to your operation here, on the {@link Operation}\n   * that is returned.\n   *\n   * Hint: You likely want to modify your `fetchOptions.headers` here, for instance to\n   * add an `Authorization` header.\n   */\n  addAuthToOperation(operation: Operation): Operation;\n\n  /** Called before an operation is forwaded onwards to make a request.\n   *\n   * @param operation - An {@link Operation} that needs authentication tokens added.\n   * @returns a boolean, if true, authentication must be refreshed.\n   *\n   * @remarks\n   * The {@link authExchange} will call this function before an {@link Operation} is\n   * forwarded onwards to your following exchanges.\n   *\n   * When this function returns `true`, the `authExchange` will call\n   * {@link AuthConfig.refreshAuth} before forwarding more operations\n   * to prompt you to update your authentication tokens.\n   *\n   * Hint: If you define this function, you can use it to check whether your authentication\n   * tokens have expired.\n   */\n  willAuthError?(operation: Operation): boolean;\n\n  /** Called after receiving an operation result to check whether it has failed with an authentication error.\n   *\n   * @param error - A {@link CombinedError} that a result has come back with.\n   * @param operation - The {@link Operation} of that has failed.\n   * @returns a boolean, if true, authentication must be refreshed.\n   *\n   * @remarks\n   * The {@link authExchange} will call this function if it sees an {@link OperationResult}\n   * with a {@link CombinedError} on it, implying that it may have failed due to an authentication\n   * error.\n   *\n   * When this function returns `true`, the `authExchange` will call\n   * {@link AuthConfig.refreshAuth} before forwarding more operations\n   * to prompt you to update your authentication tokens.\n   * Afterwards, this operation will be retried once.\n   *\n   * Hint: You should define a function that detects your API’s authentication\n   * errors, e.g. using `result.extensions`.\n   */\n  didAuthError(error: CombinedError, operation: Operation): boolean;\n\n  /** Called to refresh the authentication state.\n   *\n   * @remarks\n   * The {@link authExchange} will call this function if either {@link AuthConfig.willAuthError}\n   * or {@link AuthConfig.didAuthError} have returned `true` prior, which indicates that the\n   * authentication state you hold has expired or is out-of-date.\n   *\n   * When this function is called, you should refresh your authentication state.\n   * For instance, if you have a refresh token and an access token, you should rotate\n   * these tokens with your API by sending the refresh token.\n   *\n   * Hint: You can use the {@link fetch} API here, or use {@link AuthUtilities.mutate}\n   * if your API requires a GraphQL mutation to refresh your authentication state.\n   */\n  refreshAuth(): Promise<void>;\n}\n\nconst addAuthAttemptToOperation = (\n  operation: Operation,\n  authAttempt: boolean\n) =>\n  makeOperation(operation.kind, operation, {\n    ...operation.context,\n    authAttempt,\n  });\n\n/** Creates an `Exchange` handling control flow for authentication.\n *\n * @param init - An initializer function that returns an {@link AuthConfig} wrapped in a `Promise`.\n * @returns the created authentication {@link Exchange}.\n *\n * @remarks\n * The `authExchange` is used to create an exchange handling authentication and\n * the control flow of refresh authentication.\n *\n * You must pass an initializer function, which receives {@link AuthUtilities} and\n * must return an {@link AuthConfig} wrapped in a `Promise`.\n * When this exchange is used in your `Client`, it will first call your initializer\n * function, which gives you an opportunity to get your authentication state, e.g.\n * from local storage.\n *\n * You may then choose to validate this authentication state and update it, and must\n * then return an {@link AuthConfig}.\n *\n * This configuration defines how you add authentication state to {@link Operation | Operations},\n * when your authentication state expires, when an {@link OperationResult} has errored\n * with an authentication error, and how to refresh your authentication state.\n *\n * @example\n * ```ts\n * authExchange(async (utils) => {\n *   let token = localStorage.getItem('token');\n *   let refreshToken = localStorage.getItem('refreshToken');\n *   return {\n *     addAuthToOperation(operation) {\n *       return utils.appendHeaders(operation, {\n *         Authorization: `Bearer ${token}`,\n *       });\n *     },\n *     didAuthError(error) {\n *       return error.graphQLErrors.some(e => e.extensions?.code === 'FORBIDDEN');\n *     },\n *     async refreshAuth() {\n *       const result = await utils.mutate(REFRESH, { token });\n *       if (result.data?.refreshLogin) {\n *         token = result.data.refreshLogin.token;\n *         refreshToken = result.data.refreshLogin.refreshToken;\n *         localStorage.setItem('token', token);\n *         localStorage.setItem('refreshToken', refreshToken);\n *       }\n *     },\n *   };\n * });\n * ```\n */\nexport function authExchange(\n  init: (utilities: AuthUtilities) => Promise<AuthConfig>\n): Exchange {\n  return ({ client, forward }) => {\n    const bypassQueue = new Set<OperationInstance | undefined>();\n    const retries = makeSubject<Operation>();\n    const errors = makeSubject<OperationResult>();\n\n    let retryQueue = new Map<number, Operation>();\n\n    function flushQueue() {\n      authPromise = undefined;\n      const queue = retryQueue;\n      retryQueue = new Map();\n      queue.forEach(retries.next);\n    }\n\n    function errorQueue(error: Error) {\n      authPromise = undefined;\n      const queue = retryQueue;\n      retryQueue = new Map();\n      queue.forEach(operation => {\n        errors.next(makeErrorResult(operation, error));\n      });\n    }\n\n    let authPromise: Promise<void> | void;\n    let config: AuthConfig | null = null;\n\n    return operations$ => {\n      function initAuth() {\n        authPromise = Promise.resolve()\n          .then(() =>\n            init({\n              mutate<Data = any, Variables extends AnyVariables = AnyVariables>(\n                query: DocumentInput<Data, Variables>,\n                variables: Variables,\n                context?: Partial<OperationContext>\n              ): Promise<OperationResult<Data>> {\n                const baseOperation = client.createRequestOperation(\n                  'mutation',\n                  createRequest(query, variables),\n                  context\n                );\n                return pipe(\n                  result$,\n                  onStart(() => {\n                    const operation = addAuthToOperation(baseOperation);\n                    bypassQueue.add(\n                      operation.context._instance as OperationInstance\n                    );\n                    retries.next(operation);\n                  }),\n                  filter(\n                    result =>\n                      result.operation.key === baseOperation.key &&\n                      baseOperation.context._instance ===\n                        result.operation.context._instance\n                  ),\n                  take(1),\n                  toPromise\n                );\n              },\n              appendHeaders(\n                operation: Operation,\n                headers: Record<string, string>\n              ) {\n                const fetchOptions =\n                  typeof operation.context.fetchOptions === 'function'\n                    ? operation.context.fetchOptions()\n                    : operation.context.fetchOptions || {};\n                return makeOperation(operation.kind, operation, {\n                  ...operation.context,\n                  fetchOptions: {\n                    ...fetchOptions,\n                    headers: {\n                      ...fetchOptions.headers,\n                      ...headers,\n                    },\n                  },\n                });\n              },\n            })\n          )\n          .then((_config: AuthConfig) => {\n            if (_config) config = _config;\n            flushQueue();\n          })\n          .catch((error: Error) => {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(\n                'authExchange()’s initialization function has failed, which is unexpected.\\n' +\n                  'If your initialization function is expected to throw/reject, catch this error and handle it explicitly.\\n' +\n                  'Unless this error is handled it’ll be passed onto any `OperationResult` instantly and authExchange() will block further operations and retry.',\n                error\n              );\n            }\n\n            errorQueue(error);\n          });\n      }\n\n      initAuth();\n\n      function refreshAuth(operation: Operation) {\n        // add to retry queue to try again later\n        retryQueue.set(\n          operation.key,\n          addAuthAttemptToOperation(operation, true)\n        );\n\n        // check that another operation isn't already doing refresh\n        if (config && !authPromise) {\n          authPromise = config.refreshAuth().then(flushQueue).catch(errorQueue);\n        }\n      }\n\n      function willAuthError(operation: Operation) {\n        return (\n          !operation.context.authAttempt &&\n          config &&\n          config.willAuthError &&\n          config.willAuthError(operation)\n        );\n      }\n\n      function didAuthError(result: OperationResult) {\n        return (\n          config &&\n          config.didAuthError &&\n          config.didAuthError(result.error!, result.operation)\n        );\n      }\n\n      function addAuthToOperation(operation: Operation) {\n        return config ? config.addAuthToOperation(operation) : operation;\n      }\n\n      const opsWithAuth$ = pipe(\n        merge([retries.source, operations$]),\n        map(operation => {\n          if (operation.kind === 'teardown') {\n            retryQueue.delete(operation.key);\n            return operation;\n          } else if (\n            operation.context._instance &&\n            bypassQueue.has(operation.context._instance)\n          ) {\n            return operation;\n          } else if (operation.context.authAttempt) {\n            return addAuthToOperation(operation);\n          } else if (authPromise || !config) {\n            if (!authPromise) initAuth();\n\n            if (!retryQueue.has(operation.key))\n              retryQueue.set(\n                operation.key,\n                addAuthAttemptToOperation(operation, false)\n              );\n\n            return null;\n          } else if (willAuthError(operation)) {\n            refreshAuth(operation);\n            return null;\n          }\n\n          return addAuthToOperation(\n            addAuthAttemptToOperation(operation, false)\n          );\n        }),\n        filter(Boolean)\n      ) as Source<Operation>;\n\n      const result$ = pipe(opsWithAuth$, forward);\n\n      return merge([\n        errors.source,\n        pipe(\n          result$,\n          filter(result => {\n            if (\n              !bypassQueue.has(result.operation.context._instance) &&\n              result.error &&\n              didAuthError(result) &&\n              !result.operation.context.authAttempt\n            ) {\n              refreshAuth(result.operation);\n              return false;\n            }\n\n            if (bypassQueue.has(result.operation.context._instance)) {\n              bypassQueue.delete(result.operation.context._instance);\n            }\n\n            return true;\n          })\n        ),\n      ]);\n    };\n  };\n}\n", "const webCrypto = (\n  typeof window !== 'undefined'\n    ? window.crypto\n    : typeof self !== 'undefined'\n    ? self.crypto\n    : null\n) as typeof globalThis.crypto | null;\n\nlet nodeCrypto: Promise<typeof import('crypto') | void> | void;\n\nconst getNodeCrypto = async (): Promise<typeof import('crypto') | void> => {\n  if (!nodeCrypto) {\n    // Indirect eval'd require/import to guarantee no side-effects in module scope\n    // (optimization for minifiers)\n    try {\n      nodeCrypto = new Function('require', 'return require(\"crypto\")')(require);\n    } catch (_error) {\n      try {\n        nodeCrypto = new Function('return import(\"crypto\")')();\n      } catch (_error) {}\n    }\n  }\n  return nodeCrypto;\n};\n\nexport const hash = async (query: string): Promise<string> => {\n  if (webCrypto && webCrypto.subtle) {\n    const digest = await webCrypto.subtle.digest(\n      { name: 'SHA-256' },\n      new TextEncoder().encode(query)\n    );\n    return new Uint8Array(digest).reduce(\n      (prev, byte) => prev + byte.toString(16).padStart(2, '0'),\n      ''\n    );\n  } else if (await getNodeCrypto()) {\n    // Node.js support\n    return (await nodeCrypto)!.createHash('sha256').update(query).digest('hex');\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\n      '[@urql/exchange-persisted-fetch]: The Node Crypto and Web Crypto APIs are not available.\\n' +\n        'This is an unexpected error. Please report it by filing a GitHub Issue.'\n    );\n  }\n\n  return '';\n};\n", "import {\n  map,\n  makeSubject,\n  fromPromise,\n  filter,\n  merge,\n  mergeMap,\n  takeUntil,\n  pipe,\n} from 'wonka';\n\nimport type {\n  PersistedRequestExtensions,\n  TypedDocumentNode,\n  OperationResult,\n  CombinedError,\n  Exchange,\n  Operation,\n  OperationContext,\n} from '@urql/core';\nimport { makeOperation, stringifyDocument } from '@urql/core';\n\nimport { hash } from './sha256';\n\nconst isPersistedMiss = (error: CombinedError): boolean =>\n  error.graphQLErrors.some(x => x.message === 'PersistedQueryNotFound');\n\nconst isPersistedUnsupported = (error: CombinedError): boolean =>\n  error.graphQLErrors.some(x => x.message === 'PersistedQueryNotSupported');\n\n/** Input parameters for the {@link persistedExchange}. */\nexport interface PersistedExchangeOptions {\n  /** Controls whether GET method requests will be made for Persisted Queries.\n   *\n   * @remarks\n   * When set to `true` or `'within-url-limit'`, the `persistedExchange`\n   * will use GET requests on persisted queries when the request URL\n   * doesn't exceed the 2048 character limit.\n   *\n   * When set to `force`, the `persistedExchange` will set\n   * `OperationContext.preferGetMethod` to `'force'` on persisted queries,\n   * which will force requests to be made using a GET request.\n   *\n   * GET requests are frequently used to make GraphQL requests more\n   * cacheable on CDNs.\n   *\n   * @defaultValue `undefined` - disabled\n   */\n  preferGetForPersistedQueries?: OperationContext['preferGetMethod'];\n  /** Enforces non-automatic persisted queries by ignoring APQ errors.\n   *\n   * @remarks\n   * When enabled, the `persistedExchange` will ignore `PersistedQueryNotFound`\n   * and `PersistedQueryNotSupported` errors and assume that all persisted\n   * queries are already known to the API.\n   *\n   * This is used to switch from Automatic Persisted Queries to\n   * Persisted Queries. This is commonly used to obfuscate GraphQL\n   * APIs.\n   */\n  enforcePersistedQueries?: boolean;\n  /** Custom hashing function for persisted queries.\n   *\n   * @remarks\n   * By default, `persistedExchange` will create a SHA-256 hash for\n   * persisted queries automatically. If you're instead generating\n   * hashes at compile-time, or need to use a custom SHA-256 function,\n   * you may pass one here.\n   *\n   * If `generateHash` returns either `null` or `undefined`, the\n   * operation will not be treated as a persisted operation, which\n   * essentially skips this exchange’s logic for a given operation.\n   *\n   * Hint: The default SHA-256 function uses the WebCrypto API. This\n   * API is unavailable on React Native, which may require you to\n   * pass a custom function here.\n   */\n  generateHash?(\n    query: string,\n    document: TypedDocumentNode<any, any>\n  ): Promise<string | undefined | null>;\n  /** Enables persisted queries to be used for mutations.\n   *\n   * @remarks\n   * When enabled, the `persistedExchange` will also use the persisted queries\n   * logic for mutation operations.\n   *\n   * This is disabled by default, but often used on APIs that obfuscate\n   * their GraphQL APIs.\n   */\n  enableForMutation?: boolean;\n}\n\n/** Exchange factory that adds support for Persisted Queries.\n *\n * @param options - A {@link PersistedExchangeOptions} configuration object.\n * @returns the created persisted queries {@link Exchange}.\n *\n * @remarks\n * The `persistedExchange` adds support for (Automatic) Persisted Queries\n * to any `fetchExchange`, `subscriptionExchange`, or other API exchanges\n * following it.\n *\n * It does so by adding the `persistedQuery` extensions field to GraphQL\n * requests and handles `PersistedQueryNotFound` and\n * `PersistedQueryNotSupported` errors.\n *\n * @example\n * ```ts\n * import { Client, cacheExchange, fetchExchange } from '@urql/core';\n * import { persistedExchange } from '@urql/exchange-persisted';\n *\n * const client = new Client({\n *   url: 'URL',\n *   exchanges: [\n *     cacheExchange,\n *     persistedExchange({\n *       preferGetForPersistedQueries: true,\n *     }),\n *     fetchExchange\n *   ],\n * });\n * ```\n */\nexport const persistedExchange =\n  (options?: PersistedExchangeOptions): Exchange =>\n  ({ forward }) => {\n    if (!options) options = {};\n\n    const preferGetForPersistedQueries = options.preferGetForPersistedQueries;\n    const enforcePersistedQueries = !!options.enforcePersistedQueries;\n    const hashFn = options.generateHash || hash;\n    const enableForMutation = !!options.enableForMutation;\n    let supportsPersistedQueries = true;\n\n    const operationFilter = (operation: Operation) =>\n      supportsPersistedQueries &&\n      !operation.context.persistAttempt &&\n      ((enableForMutation && operation.kind === 'mutation') ||\n        operation.kind === 'query');\n\n    const getPersistedOperation = async (operation: Operation) => {\n      const persistedOperation = makeOperation(operation.kind, operation, {\n        ...operation.context,\n        persistAttempt: true,\n      });\n\n      const sha256Hash = await hashFn(\n        stringifyDocument(operation.query),\n        operation.query\n      );\n      if (sha256Hash) {\n        persistedOperation.extensions = {\n          ...persistedOperation.extensions,\n          persistedQuery: {\n            version: 1,\n            sha256Hash,\n          },\n        };\n        if (\n          persistedOperation.kind === 'query' &&\n          preferGetForPersistedQueries\n        ) {\n          persistedOperation.context.preferGetMethod =\n            preferGetForPersistedQueries;\n        }\n      }\n\n      return persistedOperation;\n    };\n\n    return operations$ => {\n      const retries = makeSubject<Operation>();\n\n      const forwardedOps$ = pipe(\n        operations$,\n        filter(operation => !operationFilter(operation))\n      );\n\n      const persistedOps$ = pipe(\n        operations$,\n        filter(operationFilter),\n        mergeMap(operation => {\n          const persistedOperation$ = getPersistedOperation(operation);\n          return pipe(\n            fromPromise(persistedOperation$),\n            takeUntil(\n              pipe(\n                operations$,\n                filter(op => op.kind === 'teardown' && op.key === operation.key)\n              )\n            )\n          );\n        })\n      );\n\n      return pipe(\n        merge([persistedOps$, forwardedOps$, retries.source]),\n        forward,\n        map(result => {\n          if (\n            !enforcePersistedQueries &&\n            result.operation.extensions &&\n            result.operation.extensions.persistedQuery\n          ) {\n            if (result.error && isPersistedUnsupported(result.error)) {\n              // Disable future persisted queries if they're not enforced\n              supportsPersistedQueries = false;\n              // Update operation with unsupported attempt\n              const followupOperation = makeOperation(\n                result.operation.kind,\n                result.operation\n              );\n              if (followupOperation.extensions)\n                delete followupOperation.extensions.persistedQuery;\n              retries.next(followupOperation);\n              return null;\n            } else if (result.error && isPersistedMiss(result.error)) {\n              if (result.operation.extensions.persistedQuery.miss) {\n                if (process.env.NODE_ENV !== 'production') {\n                  console.warn(\n                    'persistedExchange()’s results include two misses for the same operation.\\n' +\n                      'This is not expected as it means a persisted error has been delivered for a non-persisted query!\\n' +\n                      'Another exchange with a cache may be delivering an outdated result. For example, a server-side ssrExchange() may be caching an errored result.\\n' +\n                      'Try moving the persistedExchange() in past these exchanges, for example in front of your fetchExchange.'\n                  );\n                }\n\n                return result;\n              }\n              // Update operation with unsupported attempt\n              const followupOperation = makeOperation(\n                result.operation.kind,\n                result.operation\n              );\n              // Mark as missed persisted query\n              followupOperation.extensions = {\n                ...followupOperation.extensions,\n                persistedQuery: {\n                  ...(followupOperation.extensions || {}).persistedQuery,\n                  miss: true,\n                } as PersistedRequestExtensions,\n              };\n              retries.next(followupOperation);\n              return null;\n            }\n          }\n          return result;\n        }),\n        filter((result): result is OperationResult => !!result)\n      );\n    };\n  };\n", "import { stringifyVariables } from '@urql/core';\nimport type { Cache, Resolver, Variables, NullArray } from '../types';\n\nexport type MergeMode = 'outwards' | 'inwards';\n\n/** Input parameters for the {@link relayPagination} factory. */\nexport interface PaginationParams {\n  /** Flip between inwards and outwards pagination.\n   *\n   * @remarks\n   * This is only relevant if you’re querying pages using forwards and\n   * backwards pagination at the same time.\n   * When set to `'inwards'`, its default, pages that have been queried\n   * forward are placed in front of all pages that were queried backwards.\n   * When set to `'outwards'`, the two sets are merged in reverse.\n   */\n  mergeMode?: MergeMode;\n}\n\ninterface PageInfo {\n  __typename: string;\n  endCursor: null | string;\n  startCursor: null | string;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n}\n\ninterface Page {\n  __typename: string;\n  edges: NullArray<string>;\n  nodes: NullArray<string>;\n  pageInfo: PageInfo;\n}\n\nconst defaultPageInfo: PageInfo = {\n  __typename: 'PageInfo',\n  endCursor: null,\n  startCursor: null,\n  hasNextPage: false,\n  hasPreviousPage: false,\n};\n\nconst ensureKey = (x: any): string | null => (typeof x === 'string' ? x : null);\n\nconst concatEdges = (\n  cache: Cache,\n  leftEdges: NullArray<string>,\n  rightEdges: NullArray<string>\n) => {\n  const ids = new Set<string>();\n  for (let i = 0, l = leftEdges.length; i < l; i++) {\n    const edge = leftEdges[i] as string | null;\n    const node = cache.resolve(edge, 'node');\n    if (typeof node === 'string') ids.add(node);\n  }\n\n  const newEdges = leftEdges.slice();\n  for (let i = 0, l = rightEdges.length; i < l; i++) {\n    const edge = rightEdges[i] as string | null;\n    const node = cache.resolve(edge, 'node');\n    if (typeof node === 'string' && !ids.has(node)) {\n      ids.add(node);\n      newEdges.push(edge);\n    }\n  }\n\n  return newEdges;\n};\n\nconst concatNodes = (\n  leftNodes: NullArray<string>,\n  rightNodes: NullArray<string>\n) => {\n  const ids = new Set<string>();\n  for (let i = 0, l = leftNodes.length; i < l; i++) {\n    const node = leftNodes[i];\n    if (typeof node === 'string') ids.add(node);\n  }\n\n  const newNodes = leftNodes.slice();\n  for (let i = 0, l = rightNodes.length; i < l; i++) {\n    const node = rightNodes[i];\n    if (typeof node === 'string' && !ids.has(node)) {\n      ids.add(node);\n      newNodes.push(node);\n    }\n  }\n\n  return newNodes;\n};\n\nconst compareArgs = (\n  fieldArgs: Variables,\n  connectionArgs: Variables\n): boolean => {\n  for (const key in connectionArgs) {\n    if (\n      key === 'first' ||\n      key === 'last' ||\n      key === 'after' ||\n      key === 'before'\n    ) {\n      continue;\n    } else if (!(key in fieldArgs)) {\n      return false;\n    }\n\n    const argA = fieldArgs[key];\n    const argB = connectionArgs[key];\n\n    if (\n      typeof argA !== typeof argB || typeof argA !== 'object'\n        ? argA !== argB\n        : stringifyVariables(argA) !== stringifyVariables(argB)\n    ) {\n      return false;\n    }\n  }\n\n  for (const key in fieldArgs) {\n    if (\n      key === 'first' ||\n      key === 'last' ||\n      key === 'after' ||\n      key === 'before'\n    ) {\n      continue;\n    }\n\n    if (!(key in connectionArgs)) return false;\n  }\n\n  return true;\n};\n\nconst getPage = (\n  cache: Cache,\n  entityKey: string,\n  fieldKey: string\n): Page | null => {\n  const link = ensureKey(cache.resolve(entityKey, fieldKey));\n  if (!link) return null;\n\n  const typename = cache.resolve(link, '__typename') as string;\n  const edges = (cache.resolve(link, 'edges') || []) as NullArray<string>;\n  const nodes = (cache.resolve(link, 'nodes') || []) as NullArray<string>;\n  if (typeof typename !== 'string') {\n    return null;\n  }\n\n  const page: Page = {\n    __typename: typename,\n    edges,\n    nodes,\n    pageInfo: defaultPageInfo,\n  };\n\n  const pageInfoKey = cache.resolve(link, 'pageInfo');\n  if (typeof pageInfoKey === 'string') {\n    const pageInfoType = ensureKey(cache.resolve(pageInfoKey, '__typename'));\n    const endCursor = ensureKey(cache.resolve(pageInfoKey, 'endCursor'));\n    const startCursor = ensureKey(cache.resolve(pageInfoKey, 'startCursor'));\n    const hasNextPage = cache.resolve(pageInfoKey, 'hasNextPage');\n    const hasPreviousPage = cache.resolve(pageInfoKey, 'hasPreviousPage');\n\n    const pageInfo: PageInfo = (page.pageInfo = {\n      __typename: typeof pageInfoType === 'string' ? pageInfoType : 'PageInfo',\n      hasNextPage: typeof hasNextPage === 'boolean' ? hasNextPage : !!endCursor,\n      hasPreviousPage:\n        typeof hasPreviousPage === 'boolean' ? hasPreviousPage : !!startCursor,\n      endCursor,\n      startCursor,\n    });\n\n    if (pageInfo.endCursor === null) {\n      const edge = edges[edges.length - 1] as string | null;\n      if (edge) {\n        const endCursor = cache.resolve(edge, 'cursor');\n        pageInfo.endCursor = ensureKey(endCursor);\n      }\n    }\n\n    if (pageInfo.startCursor === null) {\n      const edge = edges[0] as string | null;\n      if (edge) {\n        const startCursor = cache.resolve(edge, 'cursor');\n        pageInfo.startCursor = ensureKey(startCursor);\n      }\n    }\n  }\n\n  return page;\n};\n\n/** Creates a {@link Resolver} that combines pages that comply to the Relay pagination spec.\n *\n * @param params - A {@link PaginationParams} configuration object.\n * @returns the created Relay pagination {@link Resolver}.\n *\n * @remarks\n * `relayPagination` is a factory that creates a {@link Resolver} that can combine\n * multiple pages on a field that complies to the Relay pagination spec into a single,\n * combined list for infinite scrolling.\n *\n * This resolver will only work on fields that return a `Connection` GraphQL object\n * type, according to the Relay pagination spec.\n *\n * Hint: It's not recommended to use this when you can handle infinite scrolling\n * in your UI code instead.\n *\n * @see {@link https://urql.dev/goto/docs/graphcache/local-resolvers#relay-pagination} for more information.\n * @see {@link https://urql.dev/goto/docs/basics/ui-patterns/#infinite-scrolling} for an alternate approach.\n */\nexport const relayPagination = (\n  params: PaginationParams = {}\n): Resolver<any, any, any> => {\n  const mergeMode = params.mergeMode || 'inwards';\n\n  return (_parent, fieldArgs, cache, info) => {\n    const { parentKey: entityKey, fieldName } = info;\n\n    const allFields = cache.inspectFields(entityKey);\n    const fieldInfos = allFields.filter(info => info.fieldName === fieldName);\n    const size = fieldInfos.length;\n    if (size === 0) {\n      return undefined;\n    }\n\n    let typename: string | null = null;\n    let startEdges: NullArray<string> = [];\n    let endEdges: NullArray<string> = [];\n    let startNodes: NullArray<string> = [];\n    let endNodes: NullArray<string> = [];\n    let pageInfo: PageInfo = { ...defaultPageInfo };\n\n    for (let i = 0; i < size; i++) {\n      const { fieldKey, arguments: args } = fieldInfos[i];\n      if (args === null || !compareArgs(fieldArgs, args)) {\n        continue;\n      }\n\n      const page = getPage(cache, entityKey, fieldKey);\n      if (page === null) {\n        continue;\n      }\n      if (page.nodes.length === 0 && page.edges.length === 0 && typename) {\n        continue;\n      }\n\n      if (\n        mergeMode === 'inwards' &&\n        typeof args.last === 'number' &&\n        typeof args.first === 'number'\n      ) {\n        const firstEdges = page.edges.slice(0, args.first + 1);\n        const lastEdges = page.edges.slice(-args.last);\n        const firstNodes = page.nodes.slice(0, args.first + 1);\n        const lastNodes = page.nodes.slice(-args.last);\n\n        startEdges = concatEdges(cache, startEdges, firstEdges);\n        endEdges = concatEdges(cache, lastEdges, endEdges);\n        startNodes = concatNodes(startNodes, firstNodes);\n        endNodes = concatNodes(lastNodes, endNodes);\n\n        pageInfo = page.pageInfo;\n      } else if (args.after) {\n        startEdges = concatEdges(cache, startEdges, page.edges);\n        startNodes = concatNodes(startNodes, page.nodes);\n        pageInfo.endCursor = page.pageInfo.endCursor;\n        pageInfo.hasNextPage = page.pageInfo.hasNextPage;\n      } else if (args.before) {\n        endEdges = concatEdges(cache, page.edges, endEdges);\n        endNodes = concatNodes(page.nodes, endNodes);\n        pageInfo.startCursor = page.pageInfo.startCursor;\n        pageInfo.hasPreviousPage = page.pageInfo.hasPreviousPage;\n      } else if (typeof args.last === 'number') {\n        endEdges = concatEdges(cache, page.edges, endEdges);\n        endNodes = concatNodes(page.nodes, endNodes);\n        pageInfo = page.pageInfo;\n      } else {\n        startEdges = concatEdges(cache, startEdges, page.edges);\n        startNodes = concatNodes(startNodes, page.nodes);\n        pageInfo = page.pageInfo;\n      }\n\n      if (page.pageInfo.__typename !== pageInfo.__typename)\n        pageInfo.__typename = page.pageInfo.__typename;\n      if (typename !== page.__typename) typename = page.__typename;\n    }\n\n    if (typeof typename !== 'string') {\n      return undefined;\n    }\n\n    const hasCurrentPage = !!ensureKey(\n      cache.resolve(entityKey, fieldName, fieldArgs)\n    );\n    if (!hasCurrentPage) {\n      if (!(info as any).store.schema) {\n        return undefined;\n      } else {\n        info.partial = true;\n      }\n    }\n\n    return {\n      __typename: typename,\n      edges:\n        mergeMode === 'inwards'\n          ? concatEdges(cache, startEdges, endEdges)\n          : concatEdges(cache, endEdges, startEdges),\n      nodes:\n        mergeMode === 'inwards'\n          ? concatNodes(startNodes, endNodes)\n          : concatNodes(endNodes, startNodes),\n      pageInfo: {\n        __typename: pageInfo.__typename,\n        endCursor: pageInfo.endCursor,\n        startCursor: pageInfo.startCursor,\n        hasNextPage: pageInfo.hasNextPage,\n        hasPreviousPage: pageInfo.hasPreviousPage,\n      },\n    };\n  };\n};\n", "import { stringifyVariables } from '@urql/core';\nimport type { Resolver, Variables, NullArray } from '../types';\n\nexport type MergeMode = 'before' | 'after';\n\n/** Input parameters for the {@link simplePagination} factory. */\nexport interface PaginationParams {\n  /** The name of the field argument used to define the page’s offset. */\n  offsetArgument?: string;\n  /** The name of the field argument used to define the page’s length. */\n  limitArgument?: string;\n  /** Flip between forward and backwards pagination.\n   *\n   * @remarks\n   * When set to `'after'`, its default, pages are merged forwards and in order.\n   * When set to `'before'`, pages are merged in reverse, putting later pages\n   * in front of earlier ones.\n   */\n  mergeMode?: MergeMode;\n}\n\n/** Creates a {@link Resolver} that combines pages of a primitive pagination field.\n *\n * @param options - A {@link PaginationParams} configuration object.\n * @returns the created pagination {@link Resolver}.\n *\n * @remarks\n * `simplePagination` is a factory that creates a {@link Resolver} that can combine\n * multiple lists on a paginated field into a single, combined list for infinite\n * scrolling.\n *\n * Hint: It's not recommended to use this when you can handle infinite scrolling\n * in your UI code instead.\n *\n * @see {@link https://urql.dev/goto/docs/graphcache/local-resolvers#simple-pagination} for more information.\n * @see {@link https://urql.dev/goto/docs/basics/ui-patterns/#infinite-scrolling} for an alternate approach.\n */\nexport const simplePagination = ({\n  offsetArgument = 'skip',\n  limitArgument = 'limit',\n  mergeMode = 'after',\n}: PaginationParams = {}): Resolver<any, any, any> => {\n  const compareArgs = (\n    fieldArgs: Variables,\n    connectionArgs: Variables\n  ): boolean => {\n    for (const key in connectionArgs) {\n      if (key === offsetArgument || key === limitArgument) {\n        continue;\n      } else if (!(key in fieldArgs)) {\n        return false;\n      }\n\n      const argA = fieldArgs[key];\n      const argB = connectionArgs[key];\n\n      if (\n        typeof argA !== typeof argB || typeof argA !== 'object'\n          ? argA !== argB\n          : stringifyVariables(argA) !== stringifyVariables(argB)\n      ) {\n        return false;\n      }\n    }\n\n    for (const key in fieldArgs) {\n      if (key === offsetArgument || key === limitArgument) {\n        continue;\n      }\n      if (!(key in connectionArgs)) return false;\n    }\n\n    return true;\n  };\n\n  return (_parent, fieldArgs, cache, info) => {\n    const { parentKey: entityKey, fieldName } = info;\n\n    const allFields = cache.inspectFields(entityKey);\n    const fieldInfos = allFields.filter(info => info.fieldName === fieldName);\n    const size = fieldInfos.length;\n    if (size === 0) {\n      return undefined;\n    }\n\n    const visited = new Set();\n    let result: NullArray<string> = [];\n    let prevOffset: number | null = null;\n\n    for (let i = 0; i < size; i++) {\n      const { fieldKey, arguments: args } = fieldInfos[i];\n      if (args === null || !compareArgs(fieldArgs, args)) {\n        continue;\n      }\n\n      const links = cache.resolve(entityKey, fieldKey) as string[];\n      const currentOffset = args[offsetArgument];\n\n      if (\n        links === null ||\n        links.length === 0 ||\n        typeof currentOffset !== 'number'\n      ) {\n        continue;\n      }\n\n      const tempResult: NullArray<string> = [];\n\n      for (let j = 0; j < links.length; j++) {\n        const link = links[j];\n        if (visited.has(link)) continue;\n        tempResult.push(link);\n        visited.add(link);\n      }\n\n      if (\n        (!prevOffset || currentOffset > prevOffset) ===\n        (mergeMode === 'after')\n      ) {\n        result = [...result, ...tempResult];\n      } else {\n        result = [...tempResult, ...result];\n      }\n\n      prevOffset = currentOffset;\n    }\n\n    const hasCurrentPage = cache.resolve(entityKey, fieldName, fieldArgs);\n    if (hasCurrentPage) {\n      return result;\n    } else if (!(info as any).store.schema) {\n      return undefined;\n    } else {\n      info.partial = true;\n      return result;\n    }\n  };\n};\n"],
  "mappings": "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",
  "names": ["b", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "type", "e", "import_jsx_runtime", "SearchField", "$cAn5f$useMemo", "$cAn5f$useRef", "$cAn5f$useEffect", "_", "last", "float", "col", "width", "column", "i", "p", "$1BfjW$useState", "$1BfjW$useMemo", "$1BfjW$useCallback", "columns", "$1BfjW$react", "getCollectionNode", "items", "childColumns", "updateContext", "context", "import_react", "collator", "$lJcFS$useMemo", "$parcel$interopDefault", "$lJcFS$useEffect", "e", "import_jsx_runtime", "import_jsx_runtime", "type", "TableHeaderWrapper", "import_jsx_runtime", "exception", "map", "schema", "type", "extend", "object", "merge", "str", "string", "str", "$parcel$interopDefault", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "visibleItems", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "helpUrl", "cache", "Set", "currentDebugStack", "popDebugNode", "pop", "pushDebugNode", "typename", "node", "identifier", "kind", "Kind", "INLINE_FRAGMENT", "OPERATION_DEFINITION", "name", "value", "operation", "FRAGMENT_DEFINITION", "push", "getDebugOutput", "length", "join", "invariant", "condition", "message", "code", "errorMessage", "NODE_ENV", "error", "Error", "warn", "logger", "has", "console", "add", "EMPTY_DIRECTIVES", "getDirectives", "_directives", "getName", "getFragmentTypeName", "typeCondition", "getFieldAlias", "alias", "emptySelectionSet", "getSelectionSet", "selectionSet", "selections", "getTypeCondition", "getFieldArguments", "vars", "args", "arguments", "i", "l", "arg", "valueFromASTUntyped", "filterVariables", "input", "variableDefinitions", "variable", "normalizeVariables", "def", "defaultValue", "key", "getMainOperation", "doc", "definitions", "getFragments", "fragments", "shouldInclude", "directives", "include", "skip", "directive", "isDeferred", "defer", "argument", "BUILTIN_NAME", "isFieldNullable", "schema", "fieldName", "field", "getField", "type", "isListNullable", "ofType", "isFieldAvailableOnType", "indexOf", "isInterfaceOfType", "types", "get", "expectAbstractType", "expectObjectType", "isSubType", "fields", "warnAboutResolver", "warnAboutAbstractResolver", "keyOfField", "stringifyVariables", "joinKeys", "parentKey", "fieldInfoOfKey", "fieldKey", "parenIndex", "slice", "JSON", "parse", "deserializeKeyInfo", "dotIndex", "entityKey", "replace", "currentOwnership", "currentDataMapping", "currentData", "currentOptimisticKey", "currentOperation", "currentDependencies", "currentForeignData", "currentOptimistic", "makeData", "data", "isArray", "newData", "set", "ownsData", "initDataState", "operationType", "layerKey", "isOptimistic", "isForeignData", "WeakSet", "WeakMap", "hydrating", "optimisticOrder", "commutativeKeys", "reserveLayer", "splice", "delete", "createLayer", "deleteLayer", "clearDataState", "getCurrentDependencies", "dirtyKeys", "squashLayer", "storage", "setTimeout", "gc", "persistData", "noopDataState", "deferredKeys", "setNode", "map", "keymap", "optimistic", "base", "entity", "Object", "create", "getNode", "updateRCForLink", "link", "by", "Array", "updateRCForEntity", "count", "refCount", "newCount", "extractNodeFields", "fieldInfos", "seenFieldKeys", "extractNodeMapFields", "keys", "records", "linkNode", "links", "updateDependencies", "queryRootKey", "updatePersist", "persist", "serializeKeys", "readRecord", "readLink", "writeRecord", "hasField", "writeLink", "entityLinks", "hasNext", "index", "clearLayer", "unshift", "Map", "previousDependencies", "entry", "entries", "keyMap", "inspectFields", "x", "writeData", "clear", "contextRef", "deferRef", "getFieldError", "ctx", "__internal", "path", "errorMap", "makeContext", "store", "variables", "parent", "__typename", "parentTypeName", "parentFieldKey", "partial", "graphQLErrors", "graphQLError", "updateContext", "isFragmentHeuristicallyMatching", "some", "FIELD", "makeSelectionIterator", "child", "next", "select", "fragment", "_generated", "ensureData", "ensureLink", "ref", "keyOfEntity", "_query", "request", "query", "formatDocument", "rootKey", "rootFields", "rootSelect", "readRoot", "InMemoryData", "readSelection", "dependencies", "rootNames", "iterate", "hasChanged", "output", "fieldAlias", "fieldValue", "dataFieldValue", "readRootField", "originalData", "getFieldResolver", "resolvers", "fieldResolver", "directiveResolver", "directiveNode", "result", "isQuery", "mutation", "subscription", "hasFields", "hasPartials", "fieldArgs", "resolver", "resultValue", "resolveResolverResult", "resolveLink", "optional", "required", "stringify", "prevData", "isOwnedData", "_isListNullable", "childResult", "isDataOrKey", "newLink", "childLink", "_write", "writeSelection", "rootField", "isRoot", "updates", "optimisticMutations", "writeField", "undefined", "updater", "KEYLESS_TYPE_RE", "prevLink", "indexKey", "test", "childKey", "Store", "constructor", "opts", "this", "globalIDs", "queryName", "mutationName", "subscriptionName", "buildClientSchema", "__schema", "typemap", "buildNameMap", "arr", "buildType", "interfaces", "possibleTypes", "queryType", "mutationType", "subscriptionType", "abstract", "possible", "abstractType", "possibleType", "out", "expectValidKeyingConfig", "expectValidUpdatesConfig", "addition", "expectValidResolversConfig", "validQueries", "resolverQuery", "Query", "validTypeProperties", "resolverProperty", "expectValidOptimisticMutationsConfig", "validMutations", "id", "_id", "resolve", "resolveFieldByKey", "invalidate", "invalidateEntity", "updateQuery", "createRequest", "readQuery", "readFragment", "fragmentName", "_queryFragment", "writeFragment", "_writeFragment", "dataToWrite", "rest", "addMetadata", "meta", "makeOperation", "context", "toRequestPolicy", "requestPolicy", "cacheExchange", "forward", "client", "dispatchDebug", "readData", "then", "hydrateData", "onCacheHydrated", "optimisticKeysToDependencies", "mutationResultBuffer", "operations", "results", "blockedDependencies", "requestedRefetch", "deps", "reexecutingOperations", "dependentOperations", "isBlockedByOptimisticUpdate", "dep", "values", "collectPendingOperations", "pendingOperations", "executePendingOperations", "op", "policy", "reexecuteOperation", "_reexecutingOperations", "prepareForwardedOperation", "size", "depOps", "operationResultFromCache", "cacheOutcome", "outcome", "updateCacheWithResult", "queryDependencies", "writeDependencies", "queryResult", "extensions", "stale", "operations$", "cacheOps$", "share", "filter", "nonCacheOps$", "cacheMissOps$", "res", "source", "cacheResult$", "shouldReexecute", "hasLayer", "result$", "merge", "nonOptimisticResults$", "cacheResult", "optimisticMutationCompletion$", "mergeMap", "empty", "bufferedResult", "shift", "fromArray", "addAuthAttemptToOperation", "operation", "authAttempt", "makeOperation", "kind", "context", "authExchange", "init", "client", "forward", "bypassQueue", "Set", "retries", "makeSubject", "errors", "retryQueue", "Map", "flushQueue", "authPromise", "queue", "forEach", "next", "errorQueue", "error", "makeErrorResult", "config", "operations$", "initAuth", "Promise", "resolve", "then", "mutate", "query", "variables", "baseOperation", "createRequestOperation", "createRequest", "toPromise", "take", "filter", "result", "key", "_instance", "onStart", "addAuthToOperation", "add", "result$", "appendHeaders", "headers", "fetchOptions", "_config", "catch", "NODE_ENV", "console", "warn", "refreshAuth", "set", "opsWithAuth$", "Boolean", "map", "delete", "has", "willAuthError", "merge", "source", "didAuthError", "webCrypto", "window", "crypto", "self", "nodeCrypto", "hash", "async", "subtle", "digest", "name", "TextEncoder", "encode", "query", "Uint8Array", "reduce", "prev", "byte", "toString", "padStart", "Function", "require", "_error", "getNodeCrypto", "createHash", "update", "NODE_ENV", "console", "warn", "persistedExchange", "options", "forward", "preferGetForPersistedQueries", "enforcePersistedQueries", "hashFn", "generateHash", "enableForMutation", "supportsPersistedQueries", "operationFilter", "operation", "context", "persistAttempt", "kind", "operations$", "retries", "makeSubject", "forwardedOps$", "filter", "persistedOps$", "mergeMap", "persistedOperation$", "persistedOperation", "makeOperation", "sha256Hash", "stringifyDocument", "extensions", "persistedQuery", "version", "preferGetMethod", "takeUntil", "op", "key", "fromPromise", "result", "map", "error", "graphQLErrors", "some", "x", "message", "followupOperation", "next", "miss", "merge", "source", "defaultPageInfo", "__typename", "endCursor", "startCursor", "hasNextPage", "hasPreviousPage", "ensureKey", "x", "concatEdges", "cache", "leftEdges", "rightEdges", "ids", "Set", "i", "l", "length", "node", "resolve", "add", "newEdges", "slice", "edge", "has", "push", "concatNodes", "leftNodes", "rightNodes", "newNodes", "compareArgs", "fieldArgs", "connectionArgs", "key", "argA", "argB", "stringifyVariables", "getPage", "entityKey", "fieldKey", "link", "typename", "edges", "nodes", "page", "pageInfo", "pageInfoKey", "pageInfoType", "relayPagination", "params", "mergeMode", "_parent", "info", "parentKey", "fieldName", "fieldInfos", "inspectFields", "filter", "size", "startEdges", "endEdges", "startNodes", "endNodes", "arguments", "args", "last", "first", "firstEdges", "lastEdges", "firstNodes", "lastNodes", "after", "before", "store", "schema", "partial", "b", "React", "schema", "blob", "x", "other", "textEncoder", "isEqual", "type", "map", "oldIndex", "val", "keys", "i", "element", "value", "state", "memoState", "key", "storedState", "error"]
}
